<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Scofieldyu</title>
  
  <subtitle>高筑墙-广积粮-缓称王</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://Scofieldsu.github.io/"/>
  <updated>2018-08-21T19:02:08.561Z</updated>
  <id>http://Scofieldsu.github.io/</id>
  
  <author>
    <name>俞 元</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>我最好的朋友已经死了</title>
    <link href="http://Scofieldsu.github.io/2017/08/20/%E6%88%91%E6%9C%80%E5%A5%BD%E7%9A%84%E6%9C%8B%E5%8F%8B%E5%B7%B2%E7%BB%8F%E6%AD%BB%E4%BA%86/"/>
    <id>http://Scofieldsu.github.io/2017/08/20/我最好的朋友已经死了/</id>
    <published>2017-08-20T05:14:40.000Z</published>
    <updated>2018-08-21T19:02:08.561Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">占位，未完待续</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span cla
      
    
    </summary>
    
      <category term="几个意思" scheme="http://Scofieldsu.github.io/categories/%E5%87%A0%E4%B8%AA%E6%84%8F%E6%80%9D/"/>
    
    
      <category term="丧" scheme="http://Scofieldsu.github.io/tags/%E4%B8%A7/"/>
    
  </entry>
  
  <entry>
    <title>如果</title>
    <link href="http://Scofieldsu.github.io/2017/06/15/%E5%A6%82%E6%9E%9C/"/>
    <id>http://Scofieldsu.github.io/2017/06/15/如果/</id>
    <published>2017-06-15T15:20:26.000Z</published>
    <updated>2018-01-14T18:02:40.531Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">如 果</span><br><span class="line"></span><br><span class="line">[英]吉 卜林</span><br><span class="line"></span><br><span class="line">如果 在 众人 六神无主 时</span><br><span class="line"></span><br><span class="line">你 能 镇定自若 而不是 人云亦云</span><br><span class="line"></span><br><span class="line">如果 在 被众人 猜忌怀疑 之日</span><br><span class="line"></span><br><span class="line">你 能 自信如常 而不去 枉加辩论</span><br><span class="line"></span><br><span class="line">如果 你有梦想 又 不迷失自我</span><br><span class="line"></span><br><span class="line">如果 你有神思 又 不致走火入魔</span><br><span class="line"></span><br><span class="line">如果 在成功之中 能 不妄形于色</span><br><span class="line"></span><br><span class="line">而在 灾难之后 也勇于 咀嚼苦果</span><br><span class="line"></span><br><span class="line">如果 听到自己说出的奥秘 被无赖</span><br><span class="line"></span><br><span class="line">歪曲成面目全非的魔术而不生怨艾</span><br><span class="line"></span><br><span class="line">如果 看到自己追求的美好 受天灾</span><br><span class="line"></span><br><span class="line">破灭为 零碎的瓦砾 也不说放弃</span><br><span class="line"></span><br><span class="line">如果 你辛苦劳作 已是功成名就</span><br><span class="line"></span><br><span class="line">还是 冒险一博 哪怕功名成乌有</span><br><span class="line"></span><br><span class="line">即使 惨遭失败 也仍要从头开始</span><br><span class="line"></span><br><span class="line">如果 你跟村夫交谈 而不失恭敬之态</span><br><span class="line"></span><br><span class="line">和王侯散步 而不露谀媚之颜</span><br><span class="line"></span><br><span class="line">如果 他人的爱憎 左右不了你的正气</span><br><span class="line"></span><br><span class="line">如果 你和任何人为伍 都能卓然独立</span><br><span class="line"></span><br><span class="line">如果 昏惑的骚扰 动摇不了你的意志</span><br><span class="line"></span><br><span class="line">你能  等自己平心静气再作答谢</span><br><span class="line"></span><br><span class="line">那么 你的修养 就如同天地般博大</span><br><span class="line"></span><br><span class="line">你 就是 真正的男子汉了</span><br><span class="line"></span><br><span class="line">我 的 儿 子</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/sp
      
    
    </summary>
    
      <category term="诗和小说以及文章" scheme="http://Scofieldsu.github.io/categories/%E8%AF%97%E5%92%8C%E5%B0%8F%E8%AF%B4%E4%BB%A5%E5%8F%8A%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="The_Life_You_Want" scheme="http://Scofieldsu.github.io/tags/The-Life-You-Want/"/>
    
  </entry>
  
  <entry>
    <title>vue.js入门</title>
    <link href="http://Scofieldsu.github.io/2017/06/01/vuejs%E5%85%A5%E9%97%A8/"/>
    <id>http://Scofieldsu.github.io/2017/06/01/vuejs入门/</id>
    <published>2017-06-01T14:39:08.000Z</published>
    <updated>2018-08-21T18:30:24.990Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h3><p>1.下载node.js安装</p><p>2.打开命令行 npm init ，输入相应信息，系统用户路径生成npm.json文件作为默认配置</p><p>3.配置npm的taobao源，加快安装速度：  npm config set registry <a href="http://registry.npm.taobao.org/" target="_blank" rel="noopener">http://registry.npm.taobao.org/</a></p><p>4.安装vue： npm install vue</p><p>5.安装vue脚手架，快速搭建项目结构： npm install --global vue-cli</p><p>6.开始你的项目：vue init webpack your-project-name</p><p>7.安装依赖：</p><p>cd  your-project-name</p><p>npm install</p><ul><li><p>运行<br>npm run dev</p></li><li><p>构建<br>npm build</p></li></ul><a id="more"></a><h3 id="项目代码结构"><a class="markdownIt-Anchor" href="#项目代码结构"></a> 项目代码结构</h3><ul><li>build</li><li>config</li><li>dist</li><li>inspectionProfiles</li><li>noode_modules</li><li>src<ul><li>assets</li><li>components</li><li>App.vue</li><li>main.js</li></ul></li><li>static</li><li>test</li><li>theme</li><li>…</li><li>index.html</li><li>package.json</li></ul><blockquote><ul><li>其中npm install 是根据package.json中依赖安装模块到node_modules路径下。</li><li>npm run dev 会自动打开浏览器显示你的页面。</li><li>npm run build 会在dist路径下生成index.html和static文件夹，static里包括css，js，font。一般把dist中内容结合服务端显示。</li></ul></blockquote><h3 id="学习vue的常用插件"><a class="markdownIt-Anchor" href="#学习vue的常用插件"></a> 学习vue的常用插件</h3><ul><li><p>vue官网:<a href="http://cn.vuejs.org/v2/guide/" target="_blank" rel="noopener">http://cn.vuejs.org/v2/guide/</a></p></li><li><p>vue-router(官方路由插件): <a href="https://router.vuejs.org/zh-cn/" target="_blank" rel="noopener">https://router.vuejs.org/zh-cn/</a></p></li><li><p>axios(ajax插件): <a href="http://www.kancloud.cn/yunye/axios/234845" target="_blank" rel="noopener">http://www.kancloud.cn/yunye/axios/234845</a></p></li><li><p>界面UI: <a href="http://element.eleme.io/#/zh-CN/component/installation" target="_blank" rel="noopener">http://element.eleme.io/#/zh-CN/component/installation</a></p></li><li><p>树形控件ztree:  <a href="http://www.treejs.cn/v3/main.php#_zTreeInfo" target="_blank" rel="noopener">http://www.treejs.cn/v3/main.php#_zTreeInfo</a></p></li><li><p>vuex(全局状态管理): <a href="https://vuex.vuejs.org/zh-cn/" target="_blank" rel="noopener">https://vuex.vuejs.org/zh-cn/</a></p></li></ul><h3 id="推荐学习路线"><a class="markdownIt-Anchor" href="#推荐学习路线"></a> 推荐学习路线</h3><ol><li>安装完成后，可以根据网上视频学习做出简单的todolist，用来熟悉开发过程。</li><li>从github学习vue-admin项目，了解多页面系统怎么使用插件。</li><li>可以自由使用插件搭建你想做的应用。</li><li>学习插件的使用可以帮你更好的完成目标，学习github上项目的代码结构，帮助你在开发复杂项目时有条不紊。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#安装&quot;&gt;&lt;/a&gt; 安装&lt;/h3&gt;
&lt;p&gt;1.下载node.js安装&lt;/p&gt;
&lt;p&gt;2.打开命令行 npm init ，输入相应信息，系统用户路径生成npm.json文件作为默认配置&lt;/p&gt;
&lt;p&gt;3.配置npm的taobao源，加快安装速度：  npm config set registry &lt;a href=&quot;http://registry.npm.taobao.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://registry.npm.taobao.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;4.安装vue： npm install vue&lt;/p&gt;
&lt;p&gt;5.安装vue脚手架，快速搭建项目结构： npm install --global vue-cli&lt;/p&gt;
&lt;p&gt;6.开始你的项目：vue init webpack your-project-name&lt;/p&gt;
&lt;p&gt;7.安装依赖：&lt;/p&gt;
&lt;p&gt;cd  your-project-name&lt;/p&gt;
&lt;p&gt;npm install&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;运行&lt;br&gt;
npm run dev&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;构建&lt;br&gt;
npm build&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="什么意思" scheme="http://Scofieldsu.github.io/categories/%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D/"/>
    
    
      <category term="npm" scheme="http://Scofieldsu.github.io/tags/npm/"/>
    
      <category term="vue.js" scheme="http://Scofieldsu.github.io/tags/vue-js/"/>
    
      <category term="elementUI" scheme="http://Scofieldsu.github.io/tags/elementUI/"/>
    
      <category term="axios" scheme="http://Scofieldsu.github.io/tags/axios/"/>
    
      <category term="vuex" scheme="http://Scofieldsu.github.io/tags/vuex/"/>
    
  </entry>
  
  <entry>
    <title>npm 详解</title>
    <link href="http://Scofieldsu.github.io/2017/05/14/npm%E8%AF%A6%E8%A7%A3/"/>
    <id>http://Scofieldsu.github.io/2017/05/14/npm详解/</id>
    <published>2017-05-13T16:02:58.000Z</published>
    <updated>2018-08-21T18:28:41.384Z</updated>
    
    <content type="html"><![CDATA[<h4 id="npm相关知识"><a class="markdownIt-Anchor" href="#npm相关知识"></a> npm相关知识</h4><ul><li><p>NPM作为Node的模块管理和发布工具，作用与Ruby的gem、Python的pypl或setuptools、PHP的pear和.Net的Nuget一样。</p></li><li><p>包含文件内容符合规范package.json文件的目录或归档文件。并通过”package-name”@”version”来唯一标识每个包。</p></li></ul><h4 id="npm-init"><a class="markdownIt-Anchor" href="#npm-init"></a> npm init</h4><p>命令在当前工作目录下以用户引导的方式创建一个全新的package.json文件。然后通过</p><p>npm help json</p><p>命令打开帮助文档，并根据实际的项目需求自行初始化package.json的项目即可</p><p>dependencies、devDependencies</p><p>可选项，用于配置模块的生产环境依赖包和开发环境依赖包。当执行npm install时，npm会根据这两个配置项的值去下载安装相关的依赖包。两者的区别是devDependencies是模块开发过程的依赖包（如：grunt只在开发时有用的模块），并且当其他模块需要依赖当前模块时，当通过npm install “package-name”时会自动下载安装dependencies的包而不会下载devDependencies的包。</p><a id="more"></a><h4 id="查看配置"><a class="markdownIt-Anchor" href="#查看配置"></a> 查看配置</h4><p>查看部分配置信息——</p><p>npm config ls</p><p>查看所有配置信息——</p><p>npm config ls -l</p><p>修改配置信息的三种方式：</p><ol><li><p>直接修改配置文件<br>修改用户家目录的.npmrc文件（没有则新建一个）；</p></li><li><p>通过命令修改<br>npm config set “config” “config-value”</p></li></ol><p>命令；</p><p>npm config set registry <a href="http://registry.npm.taobao.org/" target="_blank" rel="noopener">http://registry.npm.taobao.org/</a><br>npm config set proxy <a href="http://proxy.com:8081/" target="_blank" rel="noopener">http://proxy.com:8081/</a></p><ol start="3"><li>通过追加命令<br>比如–registry=”registry-uri”等命令可选项临时配置。</li></ol><p>npm install grunt –registry=http://registry.npm.taobao.org</p><h4 id="包的种类"><a class="markdownIt-Anchor" href="#包的种类"></a> 包的种类</h4><p>全局包</p><p>用作在cli上直接调用，而无法在项目中通过require导入依赖包。如将grunt-cli安装到全局时，则可在cli中输入grunt调用了！</p><p>npm install -g grunt-cli</p><p>cmd或shell中直接调用</p><p>grunt<br>本地包</p><p>用作在项目中通过require导入依赖包，供项目使用。</p><p>那么全局和本地的依赖包到底是存放在哪里的呢？通过</p><p>npm root -g</p><p>和</p><p>npm root</p><p>可分别查看全局和本地的依赖包下载安装的绝对目录了。</p><h4 id="包的搜索"><a class="markdownIt-Anchor" href="#包的搜索"></a> 包的搜索</h4><p>搜索依赖包，</p><p>npm search “package-name”</p><p>查看依赖包的package.json信息，</p><p>npm view “package-name”</p><p>另外我们可以单独查看package.json某个配置。</p><p>查看包的依赖关系</p><p>npm view “package-name” dependencies</p><p>查看包的源文件地址</p><p>npm view “package-name” repository.url</p><p>查看包所依赖的node版本号</p><p>npm view “package-name” engines</p><p>查看本地包信息</p><p>查看当前项目的本地依赖包，</p><p>npm list</p><p>查看全局依赖包，</p><p>npm list -g</p><p>查看本地依赖包是否不是最新版</p><p>npm outdated “package-name”</p><h4 id="安装-卸载-更新包"><a class="markdownIt-Anchor" href="#安装-卸载-更新包"></a> 安装、卸载、更新包</h4><p>安装包</p><p>本地</p><p>npm install “package-name”</p><p>全局</p><p>npm install -g “package-name”</p><p>这样会安装最新版的包，若需要安装特定版本，则</p><p>npm install “package-name”@“version”</p><p>卸载包</p><p>卸载本地</p><p>npm uninstall “package-name”</p><p>卸载全局</p><p>npm uninstall -g “package-name”</p><p>更新包</p><p>更新本地</p><p>npm update “package-name”</p><p>更新全局</p><p>npm update -g “package-name”</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;npm相关知识&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#npm相关知识&quot;&gt;&lt;/a&gt; npm相关知识&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;NPM作为Node的模块管理和发布工具，作用与Ruby的gem、Python的pypl或setuptools、PHP的pear和.Net的Nuget一样。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;包含文件内容符合规范package.json文件的目录或归档文件。并通过”package-name”@”version”来唯一标识每个包。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;npm-init&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#npm-init&quot;&gt;&lt;/a&gt; npm init&lt;/h4&gt;
&lt;p&gt;命令在当前工作目录下以用户引导的方式创建一个全新的package.json文件。然后通过&lt;/p&gt;
&lt;p&gt;npm help json&lt;/p&gt;
&lt;p&gt;命令打开帮助文档，并根据实际的项目需求自行初始化package.json的项目即可&lt;/p&gt;
&lt;p&gt;dependencies、devDependencies&lt;/p&gt;
&lt;p&gt;可选项，用于配置模块的生产环境依赖包和开发环境依赖包。当执行npm install时，npm会根据这两个配置项的值去下载安装相关的依赖包。两者的区别是devDependencies是模块开发过程的依赖包（如：grunt只在开发时有用的模块），并且当其他模块需要依赖当前模块时，当通过npm install “package-name”时会自动下载安装dependencies的包而不会下载devDependencies的包。&lt;/p&gt;
    
    </summary>
    
      <category term="什么意思" scheme="http://Scofieldsu.github.io/categories/%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D/"/>
    
    
      <category term="npm" scheme="http://Scofieldsu.github.io/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>centos7 安装docker1.26</title>
    <link href="http://Scofieldsu.github.io/2017/05/08/centos7%E5%AE%89%E8%A3%85docker/"/>
    <id>http://Scofieldsu.github.io/2017/05/08/centos7安装docker/</id>
    <published>2017-05-08T12:47:23.000Z</published>
    <updated>2018-08-21T18:27:12.739Z</updated>
    
    <content type="html"><![CDATA[<ol><li>安装yum-utils，它提供yum-config-manager实用程序：</li></ol><p>sudo yum install -y yum-utils</p><ol start="2"><li>使用以下命令设置稳定版本库：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://docs.docker.com/v1.13/engine/installation/linux/repo_files/centos/docker.repo</span><br></pre></td></tr></table></figure><ol start="3"><li>更新yum包索引。</li></ol><p>sudo yum makecache fast</p><ol start="4"><li>安装特定版本</li></ol><p>yum list docker-engine.x86_64  --showduplicates |sort -r</p><p>sudo yum -y install docker-engine-1.12.6-1.el7.centos</p><ol start="5"><li>启动服务<br>sudo systemctl start docker</li></ol><p>systemctl enable docker</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;安装yum-utils，它提供yum-config-manager实用程序：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;sudo yum install -y yum-utils&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;使用以下命令设置稳定版本库：&lt;/li&gt;
&lt;/ol&gt;
      
    
    </summary>
    
      <category term="有点意思" scheme="http://Scofieldsu.github.io/categories/%E6%9C%89%E7%82%B9%E6%84%8F%E6%80%9D/"/>
    
    
      <category term="docker" scheme="http://Scofieldsu.github.io/tags/docker/"/>
    
      <category term="centos7" scheme="http://Scofieldsu.github.io/tags/centos7/"/>
    
      <category term="2048" scheme="http://Scofieldsu.github.io/tags/2048/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu安装odoo环境</title>
    <link href="http://Scofieldsu.github.io/2016/12/08/ubuntu%E5%AE%89%E8%A3%85odoo%E7%8E%AF%E5%A2%83/"/>
    <id>http://Scofieldsu.github.io/2016/12/08/ubuntu安装odoo环境/</id>
    <published>2016-12-08T13:13:45.000Z</published>
    <updated>2018-08-21T18:30:16.693Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ubuntu安装odoo环境"><a class="markdownIt-Anchor" href="#ubuntu安装odoo环境"></a> ubuntu安装odoo环境</h1><p>接触odoo几个月的期间，刚开始装环境也是缺东少西，按照文档一步一步来，后来慢慢理解了需要装什么，哪些是必要的。自己工作中使用了ubuntu系统，后来换成mac也在mac上装了环境，不同人安装可能遇到的问题也不一样，但只要知道我们需要什么，就万变不离其宗，我认为可以分为这几块：odoo源码；postgresql数据库；nodejs和less；运行odoo环境的python依赖包。<br>于是可以围绕这几点开始安装。第一，odoo源码。建议从github上clone下来 odoo9或odoo10源码。两者的目录结构有细微变动，而且在启动服务时运行的文件不一样。<a href="http://xn--odoo9odoo-ur6sg15lxu6bvou.py" target="_blank" rel="noopener">odoo9运行的是odoo.py</a>，其配置文件是odoo-9.0/debian/openerp-server.conf，odoo10运行的是odoo.bin,其配置文件是odoo10/debian/odoo.conf。第二安装postgresql数据库。ubuntu可以命令行安装，mac上可以下载postgresql.app比较方便。第三nodejs和lessc参照其他网上教程。第四安装运行需要的python依赖包，网上有个requirement.txt一次运行安装所有依赖包，对于没有安装成功的包，具体问题具体分析对待。</p><ul><li><p>安装postgresql：sudo  apt-get install postgresql  ;</p></li><li><p>检查安装：psql --version</p></li></ul><a id="more"></a><ul><li><p>安装pip: sudo apt-get install python-pip</p></li><li><p>切换postgres用户：sudo  su - postgres</p></li><li><p>创建新的数据库用户yuyuan：createuser --createdb --username postgres --no-createrole --no-superuser --pwprompt yuyuan</p></li><li><p>退出用户：exit</p></li><li><p>安装各个依赖包：sudo apt-get install python-dateutil python-docutils python-feedparser python-gdata</p></li><li><p>python-jinja2 python-ldap python-libxslt1 python-lxml python-mako python-mock python-openid</p></li><li><p>python-psycopg2 python-psutil python-pybabel python-pychart python-pydot python-pyparsing</p></li><li><p>python-reportlab python-simplejson python-tz python-unittest2 python-vatnumber python-vobject</p></li><li><p>python-webdav python-werkzeug python-xlwt python-yaml python-zsi python-pyPdf</p></li><li><p>python-decorator python-passlib python-requests</p></li><li><p>其中pypdf如不能安装，www.python.org下载pyPdf.tar.gz  解压  tar zxvf  pyPdf.tar.gz,进入文件夹，sudo python <a href="http://setup.py" target="_blank" rel="noopener">setup.py</a> install</p></li><li><p>安装nodes：sudo apt -get install nodes-legacy;sudo apt install -y npm;sudo npm install -g less less-plugin-clean-css;sudo ln -s /usr/bin/nodejs  /usr/bin/node</p></li><li><p>安装git ：sudo apt-get install git</p></li><li><p>进入某个目录：git clone -b 9.0 <a href="https://github.com/odoo/odoo.git" target="_blank" rel="noopener">https://github.com/odoo/odoo.git</a>  .</p></li><li><p>安装pgadmin3: sudo apt-get  install pgadmin3</p></li><li><p>安装sublime text3：sudo add-apt-repository ppa:webupd8team/sublime-text-3；sudo apt-get update ；sudo apt-get install sublime-text-installer</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ubuntu安装odoo环境&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#ubuntu安装odoo环境&quot;&gt;&lt;/a&gt; ubuntu安装odoo环境&lt;/h1&gt;
&lt;p&gt;接触odoo几个月的期间，刚开始装环境也是缺东少西，按照文档一步一步来，后来慢慢理解了需要装什么，哪些是必要的。自己工作中使用了ubuntu系统，后来换成mac也在mac上装了环境，不同人安装可能遇到的问题也不一样，但只要知道我们需要什么，就万变不离其宗，我认为可以分为这几块：odoo源码；postgresql数据库；nodejs和less；运行odoo环境的python依赖包。&lt;br&gt;
于是可以围绕这几点开始安装。第一，odoo源码。建议从github上clone下来 odoo9或odoo10源码。两者的目录结构有细微变动，而且在启动服务时运行的文件不一样。&lt;a href=&quot;http://xn--odoo9odoo-ur6sg15lxu6bvou.py&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;odoo9运行的是odoo.py&lt;/a&gt;，其配置文件是odoo-9.0/debian/openerp-server.conf，odoo10运行的是odoo.bin,其配置文件是odoo10/debian/odoo.conf。第二安装postgresql数据库。ubuntu可以命令行安装，mac上可以下载postgresql.app比较方便。第三nodejs和lessc参照其他网上教程。第四安装运行需要的python依赖包，网上有个requirement.txt一次运行安装所有依赖包，对于没有安装成功的包，具体问题具体分析对待。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;安装postgresql：sudo  apt-get install postgresql  ;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检查安装：psql --version&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="有点意思" scheme="http://Scofieldsu.github.io/categories/%E6%9C%89%E7%82%B9%E6%84%8F%E6%80%9D/"/>
    
    
      <category term="python" scheme="http://Scofieldsu.github.io/tags/python/"/>
    
      <category term="ubuntu" scheme="http://Scofieldsu.github.io/tags/ubuntu/"/>
    
      <category term="odoo" scheme="http://Scofieldsu.github.io/tags/odoo/"/>
    
      <category term="postgresql" scheme="http://Scofieldsu.github.io/tags/postgresql/"/>
    
  </entry>
  
  <entry>
    <title>python(3):内存管理机制</title>
    <link href="http://Scofieldsu.github.io/2016/08/01/python(3)-%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E6%9C%BA%E5%88%B6/"/>
    <id>http://Scofieldsu.github.io/2016/08/01/python(3)-内存管理机制/</id>
    <published>2016-08-01T14:01:27.000Z</published>
    <updated>2018-08-21T18:29:04.325Z</updated>
    
    <content type="html"><![CDATA[<h3 id="内存管理机制简要"><a class="markdownIt-Anchor" href="#内存管理机制简要"></a> 内存管理机制简要</h3><h3 id="内存池"><a class="markdownIt-Anchor" href="#内存池"></a> 内存池</h3><ul><li>Python的内存机制以金字塔行，-1，-2层主要有操作系统进行操作，<br>　　第0层是C中的malloc，free等内存分配和释放函数进行操作；<br>　　第1层和第2层是内存池，有Python的接口函数PyMem_Malloc函数实现，当对象小于256K时有该层直接分配内存；<br>　　第3层是最上层，也就是我们对Python对象的直接操作；</li><li>python的内存在底层也是由malloc和free的方式来分配和释放， 主要通过两种机制来实现，一个是引用计数，一个是垃圾回收。前者负责确定当前变量是否需要释放，后者解决前者解决不了的循环引用问题以及提供手动释放的接口。</li></ul><p>Python中所有小于256个字节的对象都使用pymalloc实现的分配器，而大的对象则使用系统的 malloc。</p><p>Python使用Pymalloc管理内存。在Python中，会频繁的创建和删除很多小对象，如果这些对象的内存申请和释放都使用malloc()和free()，将会带来严重的性能问题。因此，Pymalloc分配一系列256KB的内存块，称之为arena。每个arena分割为4KB大小的内存池Pool，每个Pool再切分为固定大小的Block。在内存分配时，分配给进程的就是这些Blocks。</p><h3 id="引用计数reference-counting"><a class="markdownIt-Anchor" href="#引用计数reference-counting"></a> 引用计数(reference counting)</h3><p>每个对象都有引用计数器count，为0的时候，且不在缓冲区则被释放。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">a=[]</span><br><span class="line">sys.getrefcount(a)</span><br><span class="line">&gt;&gt;<span class="number">2</span></span><br><span class="line">因为getrefcount参数a临时引用</span><br></pre></td></tr></table></figure><h3 id="垃圾回收garbage-collection"><a class="markdownIt-Anchor" href="#垃圾回收garbage-collection"></a> 垃圾回收(Garbage Collection)</h3><p>gc模块采用了<em>分代回收</em>方法，将对象根据存活的时间分为三“代”，所有新建的对象都是0代，当0代对象经过一次自动垃圾回收，没有被释放的对象会被归入1代，同理1代归入2代。每次当0代对象中引用数为0的对象超过700个时，启动一次0代对象扫描垃圾回收，经过10次的0代回收，就进行一次0代和1代回收，1代回收次数超过10次，就会进行一次0代、1代和2代回收。gc模块还提供了手动回收的函数，即gc.collect()。<br>gc.get_threshold()  返回（700,10,10）</p><p>垃圾回收还有一个重要功能是，解决循环引用的问题，通常发生在某个变量a引用了自己或者变量a与b互相引用。<br><strong>Python 的 GC 设计是，对于内部不包含指向其他对象的引用的对象（如字符串、数值类型等非容器对象），采用引用计数，因为这些对象根本不可能产生循环引用。对于 List、Map 等可能产生循环引用的对象，则采用 mark-sweep。（标记-清除)</strong></p><h3 id="标记-清除"><a class="markdownIt-Anchor" href="#标记-清除"></a> 标记-清除</h3><p>计算有效引用计数，为0可回收</p><a id="more"></a><p>【以下转自】<a href="http://chenrudan.github.io" target="_blank" rel="noopener">chenrudan.github.io</a></p><p>本文主要为了解释清楚python的内存管理机制，首先介绍了一下python关于内存使用的一些基本概念，然后介绍了引用计数和垃圾回收gc模块，并且解释了分代回收和“标记-清除”法，然后分析了一下各种操作会导致python变量和对象的变化，最后做了一下小结。本来是为了解决前几天遇到把服务器内存耗光的问题，结果后来检查发现并不是因为内存管理的问题…</p><ul><li><ol><li>Python变量、对象、引用、存储</li></ol></li><li><ol start="2"><li>Python内存管理机制和操作对变量的影响</li></ol><ul><li>2.1 内存管理机制</li><li>2.2 各种操作对变量地址的改变</li></ul></li><li><ol start="3"><li>小结</li></ol></li><li><ol start="4"><li>引用</li></ol></li></ul><ol><li>Python变量、对象、引用、存储</li></ol><p>python语言是一种解释性的编程语言，它不同于一些传统的编译语言，不是先编译成汇编再编程机器码，而是在运行的过程中，逐句将指令解释成机器码，所以造就了python语言一些特别的地方。例如a=1，其中a是变量，1是对象。这里所谓的变量，它的意义类似一个指针，它本身是没有类型的，只有它指向的那个对象是什么类型，它才是什么类型，一旦把它指到别的地方，它的类型就变了，现在指向的是1，它的类型可以认为是int，假如接下来执行a=2.5，那么变量的类型就变了。甚至当先给a=1，a=a+1时，a的地址也会改变。而这里的1,2.5或者一个list一个dict就是一个被实例化的对象，对象拥有真正的资源与取值，当一个变量指向某个对象，被称为这个对象的产生了一个引用，一个对象可以有多个变量指向它，有多个引用。而一个变量可以随时指向另外的对象。同时一个变量可以指向另外一个变量，那么它们指向的那个对象的引用就增加了一个。</p><p>Python有个特别的机制，它会在解释器启动的时候事先分配好一些缓冲区，这些缓冲区部分是固定好取值，例如整数[-5,256]的内存地址是固定的(这里的固定指这一次程序启动之后，这些数字在这个程序中的内存地址就不变了，但是启动新的python程序，两次的内存地址不一样)。有的缓冲区就可以重复利用。这样的机制就使得不需要python频繁的调用内存malloc和free。下面的id是取内存地址，hex是转成16进制表示。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#第一次启动解释器</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(<span class="number">1</span>))</span><br><span class="line"><span class="string">'0x14c5158'</span></span><br><span class="line"><span class="comment">#第二次启动解释器</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(<span class="number">1</span>))</span><br><span class="line"><span class="string">'0xe17158'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#缓冲区被重复利用</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(<span class="number">100000</span>))</span><br><span class="line"><span class="string">'0xe5be00'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(<span class="number">1000000</span>))</span><br><span class="line"><span class="string">'0xe5be00'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(<span class="number">10000000</span>))</span><br><span class="line"><span class="string">'0xe5be00'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(<span class="number">100000000</span>))</span><br><span class="line"><span class="string">'0xe5be00'</span></span><br></pre></td></tr></table></figure><p>针对整数对象，它的内存区域似乎是一个单独的区域，跟string、dict等的内存空间都不一样，从实验结果来看，它的地址大小只有’0xe5be00’，其他的是’0x7fe7e03c7698’。而存储整数对象的这块区域，有一块内存区域是事先分配好的，即[-5,256]范围内的整数。这块称为小整数缓冲池，静态分配，对某个变量赋值就是直接从里面取就行了，在python初始化时被创建。而另外的整数缓冲池称为大整数缓冲池，这块内存也是已经分配好了，只是要用的时候再赋值。可以从下面的例子中看到，针对257这个数字，虽然给a和b赋了相同的值，但是解释器实际上是先分配了不同的地址，再把这个地址给两个变量。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(a))</span><br><span class="line"><span class="string">'0xe17158'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(b))</span><br><span class="line"><span class="string">'0xe17158'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="number">257</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="number">257</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(a))</span><br><span class="line"><span class="string">'0xe5be00'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(b))</span><br><span class="line"><span class="string">'0xe5bdd0'</span></span><br></pre></td></tr></table></figure><p>针对string类型，它也有自己的缓冲区，也是分为固定缓冲区和可重复缓冲区，固定的是256个ASCII码字符。还发现一个有意思的现象，string中只要不出现除了字母和数字其他字符，那么对a和b赋同样的值，它们的内存地址都相同。但是如果string对象中有其他字符，那么对两个变量赋相同的string值，它们的内存地址还是不一样的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="string">'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(b))</span><br><span class="line"><span class="string">'0x7fe7e03af848'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="string">'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(a))</span><br><span class="line"><span class="string">'0x7fe7e03af848'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="string">'abcd%'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="string">'abcd%'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(a))</span><br><span class="line"><span class="string">'0x7fe7e02d4900'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(b))</span><br><span class="line"><span class="string">'0x7fe7e02d48d0'</span></span><br></pre></td></tr></table></figure><p>而另外的dict和list的缓冲区也是事先分配好，大小为80个对象。</p><p>因此变量的存储有三个区域，事先分配的静态内存、事先分配的可重复利用内存以及需要通过malloc和free来控制的自由内存。</p><ol start="2"><li>Python内存管理机制和操作对变量的影响</li></ol><p>2.1 内存管理机制</p><p>python的内存在底层也是由malloc和free的方式来分配和释放，只是它代替程序员决定什么时候分配什么时候释放，同时也提供接口让用户手动释放，因此它有自己的一套内存管理体系，主要通过两种机制来实现，一个是引用计数，一个是垃圾回收。前者负责确定当前变量是否需要释放，后者解决前者解决不了的循环引用问题以及提供手动释放的接口[2]。</p><p>引用计数(reference counting)，针对可以重复利用的内存缓冲区和内存，python使用了一种引用计数的方式来控制和判断某快内存是否已经没有再被使用。即每个对象都有一个计数器count，记住了有多少个变量指向这个对象，当这个对象的引用计数器为0时，假如这个对象在缓冲区内，那么它地址空间不会被释放，而是等待下一次被使用，而非缓冲区的该释放就释放。</p><p>这里通过sys包中的getrefcount()来获取当前对象有多少个引用。这里返回的引用个数分别是2和3，比预计的1和2多了一个，这是因为传递参数给getrefcount的时候产生了一个临时引用[1]。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>getrefcount(a)</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = a</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>getrefcount(a)</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><p>当一个变量通过另外一个变量赋值，那么它们的对象引用计数就增加1，当其中一个变量指向另外的地方，之前的对象计数就减少1。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>getrefcount(a)</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = a</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>getrefcount(a)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>getrefcount(b)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>getrefcount(a)</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>getrefcount(b)</span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><p><code>垃圾回收(Garbage Collection)</code>python提供了del方法来删除某个变量，它的作用是让某个对象引用数减少1。当某个对象引用数变为0时并不是直接将它从内存空间中清除掉，而是采用垃圾回收机制gc模块，当这些引用数为0的变量规模达到一定规模，就自动启动垃圾回收，将那些引用数为0的对象所占的内存空间释放。这里gc模块采用了分代回收方法，将对象根据存活的时间分为三“代”，所有新建的对象都是0代，当0代对象经过一次自动垃圾回收，没有被释放的对象会被归入1代，同理1代归入2代。每次当0代对象中引用数为0的对象超过700个时，启动一次0代对象扫描垃圾回收，经过10次的0代回收，就进行一次0代和1代回收，1代回收次数超过10次，就会进行一次0代、1代和2代回收。而这里的几个值是通过查询get_threshold()返回(700,10,10)得到的。此外，gc模块还提供了手动回收的函数，即gc.collect()。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = a</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>getrefcount(a)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">del</span> b</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>getrefcount(a)</span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><p>而垃圾回收还有一个重要功能是，解决循环引用的问题，通常发生在某个变量a引用了自己或者变量a与b互相引用。考虑引用自己的情况，可以从下面的例子中看到，a所指向的内存对象有3个引用，但是实际上只有两个变量，假如把这两个变量都del掉，对象引用个数还是1，没有变成0，这种情况下，如果只有引用计数的机制，那么这块没有用的内存会一直无法释放掉。因此python的gc模块利用了“标记-清除”法，即认为有效的对象之间能通过有向图连接起来，其中图的节点是对象，而边是引用，下图中obj代表对象，ref代表引用，从一些不能被释放的对象节点出发(称为root object，一些全局引用或者函数栈中的引用[5]，例如下图的obj_1，箭头表示obj_1引用了obj_2)遍历各代引用数不为0的对象。在python源码中，每个变量不仅有一个引用计数，还有一个有效引用计数gc_ref，后者一开始等于前者，但是启动标记清除法开始遍历对象时，从root object出发(初始图中的gc_ref为(1,1,1,1,1,1,1))，当对象i引用了对象j时，将对象j的有效引用个数减去1，这样下图中各个对象有效引用个数变为了(1, 0, 0, 0, 0, 0, 0)，接着将所有对象分配到两个表中，一个是reachable对象表，一个是unreachable对象表，root object和在图中能够直接或者间接与它们相连的对象就放入reachable，而不能通过root object访问到且有效引用个数变为0的对象作为放入unreachable，从而通过这种方式来消去循环引用的影响。</p><p>在人工调用gc.collect()的时候会有一个返回值，这个返回值就是这一次扫描unreachable的对象个数。在上面谈到的每一代的回收过程中，都会启用“标记-清除”法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = a</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>getrefcount(b)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.append(a)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>getrefcount(b)</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">del</span> a</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>getrefcount(b)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">del</span> b</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>unreachable = gc.collect()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>unreachable</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><p>图1 变量形成的有向图</p><p>2.2 各种操作对变量地址的改变</p><p>当处理赋值、加减乘除时，这些操作实际上导致变量指向的对象发生了改变，已经不是原来的那个对象了，并不是通过这个变量来改变它指向的对象的值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(a))</span><br><span class="line"><span class="string">'0xe17080'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = a - <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(a))</span><br><span class="line"><span class="string">'0xe17098'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = a + <span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(a))</span><br><span class="line"><span class="string">'0xe17080'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = a * <span class="number">10</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(a))</span><br><span class="line"><span class="string">'0xe177a0'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = a / <span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(a))</span><br><span class="line"><span class="string">'0xe17488'</span></span><br></pre></td></tr></table></figure><p>增加减少list、dict对象内容是在对对象本身进行操作，此时变量的指向并没有改变，它作为对象的一个别名/引用，通过操纵变量来改变对应的对象内容。但是一旦将变量赋值到别的地方去，那么变量地址就改变了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(a))</span><br><span class="line"><span class="string">'0x7fe7e02caef0'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.append(<span class="number">1</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(a))</span><br><span class="line"><span class="string">'0x7fe7e02caef0'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="number">1</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(a))</span><br><span class="line"><span class="string">'0x7fe7e02caea8'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">当把一个list变量赋值给另外一个变量时，这两个变量是等价的，它们都是原来对象的一个引用。</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = a</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.append(<span class="number">1</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[<span class="number">1</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(a))</span><br><span class="line"><span class="string">'0x7fe7e02caea8'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(b))</span><br><span class="line"><span class="string">'0x7fe7e02caea8'</span></span><br></pre></td></tr></table></figure><p>但是实际使用中，可能需要的是将里面的内容给复制出来到一个新的地址空间，这里可以使用python的copy模块，copy模块分为两种拷贝，一种是浅拷贝，一种是深拷贝。假设处理一个list对象，浅拷贝调用函数copy.copy()，产生了一块新的内存来存放list中的每个元素引用，也就是说每个元素的跟原来list中元素地址是一样的。所以从下面例子中可看出当原list中要是包含list对象，分别在a和b对list元素做操作时，两边都受到了影响。此外，通过b=list(a)来对变量b赋值时，也跟浅拷贝的效果一样。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="number">1</span>, <span class="number">1000</span>, [<span class="string">'a'</span>, <span class="string">'b'</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = copy.copy(a)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[<span class="number">1</span>, <span class="number">1000</span>, [<span class="string">'a'</span>, <span class="string">'b'</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(a))</span><br><span class="line"><span class="string">'0x7fe7e02e1368'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(b))</span><br><span class="line"><span class="string">'0x7fe7e02e1518'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(a[<span class="number">2</span>]))</span><br><span class="line"><span class="string">'0x7fe7e02caea8'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(b[<span class="number">2</span>]))</span><br><span class="line"><span class="string">'0x7fe7e02caea8'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">2</span>].append(<span class="string">'a+'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="number">1</span>, <span class="number">1000</span>, [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'a+'</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[<span class="number">1</span>, <span class="number">1000</span>, [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'a+'</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b[<span class="number">2</span>].append(<span class="string">'b+'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="number">1</span>, <span class="number">1000</span>, [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'a+'</span>, <span class="string">'b+'</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[<span class="number">1</span>, <span class="number">1000</span>, [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'a+'</span>, <span class="string">'b+'</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">0</span>] = <span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="number">2</span>, <span class="number">1000</span>, [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'a+'</span>, <span class="string">'b+'</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[<span class="number">1</span>, <span class="number">1000</span>, [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'a+'</span>, <span class="string">'b+'</span>]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">而深拷贝则调用copy.deepcopy()，它将原list中每个元素都复制了值到新的内存中去了，因此跟原来的元素地址不相同，那么再对a和b的元素做操作，就是互相不影响了。</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="number">1</span>, <span class="number">1000</span>, [<span class="string">'a'</span>, <span class="string">'b'</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = copy.deepcopy(a)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(a))</span><br><span class="line"><span class="string">'0x7fe7e02cae18'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(b))</span><br><span class="line"><span class="string">'0x7fe7e02e1368'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(a[<span class="number">2</span>]))</span><br><span class="line"><span class="string">'0x7fe7e02e14d0'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hex(id(b[<span class="number">2</span>]))</span><br><span class="line"><span class="string">'0x7fe7e02e1320'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">2</span>].append(<span class="string">'a+'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="number">1</span>, <span class="number">1000</span>, [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'a+'</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[<span class="number">1</span>, <span class="number">1000</span>, [<span class="string">'a'</span>, <span class="string">'b'</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b[<span class="number">2</span>].append(<span class="string">'b+'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="number">1</span>, <span class="number">1000</span>, [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'a+'</span>]]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">[<span class="number">1</span>, <span class="number">1000</span>, [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'b+'</span>]]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">当把一个变量传入一个函数时，它对应的对象引用个数增加<span class="number">2</span>。</span><br></pre></td></tr></table></figure><ol start="3"><li>小结</li></ol><p>本来是因为前天把128g的服务器用死机了，想搞清楚为什么会导致那个问题，写完这篇去检查了一下，发现并不是因为对内存的使用有误导致的，而是因为我用到了多次hist函数，这个函数占了内存，换成了numpy的histgram函数就好了。不过写完也觉得很有意思，特别是垃圾回收其实是一个比较重要的不仅局限于python语言的一个东西，看了不少博客直接拿源码过来分析也是好牛的感觉。而对于标记清除法，个人不是特别理解为什么要加有效引用计数，那些循环引用的一个对象或者两个三个对象不应该跟有效的对象本来就是隔离开的，既然在遍历的时候，就能知道哪些对象是访问不到的，那么这些对象不就应该形成了环么。</p><ol start="4"><li>引用</li></ol><p>[1] Python深入06 Python的内存管理</p><p>[2] Python Garbage Collection</p><p>[3] Python内存池管理与缓冲池设计</p><p>[4] Python垃圾回收机制:gc模块</p><p>[5] 《Python源码剖析》，陈儒著，2008</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;内存管理机制简要&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#内存管理机制简要&quot;&gt;&lt;/a&gt; 内存管理机制简要&lt;/h3&gt;
&lt;h3 id=&quot;内存池&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#内存池&quot;&gt;&lt;/a&gt; 内存池&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Python的内存机制以金字塔行，-1，-2层主要有操作系统进行操作，&lt;br&gt;
　　第0层是C中的malloc，free等内存分配和释放函数进行操作；&lt;br&gt;
　　第1层和第2层是内存池，有Python的接口函数PyMem_Malloc函数实现，当对象小于256K时有该层直接分配内存；&lt;br&gt;
　　第3层是最上层，也就是我们对Python对象的直接操作；&lt;/li&gt;
&lt;li&gt;python的内存在底层也是由malloc和free的方式来分配和释放， 主要通过两种机制来实现，一个是引用计数，一个是垃圾回收。前者负责确定当前变量是否需要释放，后者解决前者解决不了的循环引用问题以及提供手动释放的接口。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python中所有小于256个字节的对象都使用pymalloc实现的分配器，而大的对象则使用系统的 malloc。&lt;/p&gt;
&lt;p&gt;Python使用Pymalloc管理内存。在Python中，会频繁的创建和删除很多小对象，如果这些对象的内存申请和释放都使用malloc()和free()，将会带来严重的性能问题。因此，Pymalloc分配一系列256KB的内存块，称之为arena。每个arena分割为4KB大小的内存池Pool，每个Pool再切分为固定大小的Block。在内存分配时，分配给进程的就是这些Blocks。&lt;/p&gt;
&lt;h3 id=&quot;引用计数reference-counting&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#引用计数reference-counting&quot;&gt;&lt;/a&gt; 引用计数(reference counting)&lt;/h3&gt;
&lt;p&gt;每个对象都有引用计数器count，为0的时候，且不在缓冲区则被释放。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; sys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a=[]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sys.getrefcount(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;因为getrefcount参数a临时引用&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;垃圾回收garbage-collection&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#垃圾回收garbage-collection&quot;&gt;&lt;/a&gt; 垃圾回收(Garbage Collection)&lt;/h3&gt;
&lt;p&gt;gc模块采用了&lt;em&gt;分代回收&lt;/em&gt;方法，将对象根据存活的时间分为三“代”，所有新建的对象都是0代，当0代对象经过一次自动垃圾回收，没有被释放的对象会被归入1代，同理1代归入2代。每次当0代对象中引用数为0的对象超过700个时，启动一次0代对象扫描垃圾回收，经过10次的0代回收，就进行一次0代和1代回收，1代回收次数超过10次，就会进行一次0代、1代和2代回收。gc模块还提供了手动回收的函数，即gc.collect()。&lt;br&gt;
gc.get_threshold()  返回（700,10,10）&lt;/p&gt;
&lt;p&gt;垃圾回收还有一个重要功能是，解决循环引用的问题，通常发生在某个变量a引用了自己或者变量a与b互相引用。&lt;br&gt;
&lt;strong&gt;Python 的 GC 设计是，对于内部不包含指向其他对象的引用的对象（如字符串、数值类型等非容器对象），采用引用计数，因为这些对象根本不可能产生循环引用。对于 List、Map 等可能产生循环引用的对象，则采用 mark-sweep。（标记-清除)&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;标记-清除&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#标记-清除&quot;&gt;&lt;/a&gt; 标记-清除&lt;/h3&gt;
&lt;p&gt;计算有效引用计数，为0可回收&lt;/p&gt;
    
    </summary>
    
      <category term="什么意思" scheme="http://Scofieldsu.github.io/categories/%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D/"/>
    
    
      <category term="内存管理" scheme="http://Scofieldsu.github.io/tags/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
    
      <category term="gc" scheme="http://Scofieldsu.github.io/tags/gc/"/>
    
      <category term="引用计数" scheme="http://Scofieldsu.github.io/tags/%E5%BC%95%E7%94%A8%E8%AE%A1%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>When you are old</title>
    <link href="http://Scofieldsu.github.io/2016/07/15/When-you-are-old/"/>
    <id>http://Scofieldsu.github.io/2016/07/15/When-you-are-old/</id>
    <published>2016-07-14T17:46:58.000Z</published>
    <updated>2018-01-14T18:01:20.918Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">When you are old</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Yeats</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">When you are old and grey and full of sleep,</span><br><span class="line"></span><br><span class="line">And nodding by the fire, take down this book,</span><br><span class="line"></span><br><span class="line">And slowly read, and dream of the soft look</span><br><span class="line"></span><br><span class="line">Your eyes had once, and of their shadows deep;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">How many loved your moments of glad grace,</span><br><span class="line"></span><br><span class="line">And loved your beauty with love false or true,</span><br><span class="line"></span><br><span class="line">But one man loved the pilgrim Soul in you,</span><br><span class="line"></span><br><span class="line">And loved the sorrows of your changing face;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">And bending down beside the glowing bars,</span><br><span class="line"></span><br><span class="line">Murmur, a little sadly, how Love fled</span><br><span class="line"></span><br><span class="line">And paced upon the mountains overhead</span><br><span class="line"></span><br><span class="line">And hid his face amid a crowd of stars.</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="诗和小说以及文章" scheme="http://Scofieldsu.github.io/categories/%E8%AF%97%E5%92%8C%E5%B0%8F%E8%AF%B4%E4%BB%A5%E5%8F%8A%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="The_Life_You_Want" scheme="http://Scofieldsu.github.io/tags/The-Life-You-Want/"/>
    
  </entry>
  
  <entry>
    <title>百年孤独</title>
    <link href="http://Scofieldsu.github.io/2016/07/15/%E7%99%BE%E5%B9%B4%E5%AD%A4%E7%8B%AC/"/>
    <id>http://Scofieldsu.github.io/2016/07/15/百年孤独/</id>
    <published>2016-07-14T17:45:21.000Z</published>
    <updated>2018-01-14T17:57:54.562Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">心属于你的</span><br><span class="line">我借来寄托</span><br><span class="line">却变成我的心魔</span><br><span class="line"></span><br><span class="line">你属于谁的</span><br><span class="line">我刚好经过</span><br><span class="line">却带来潮起潮落</span><br><span class="line"></span><br><span class="line">都是因为一路上</span><br><span class="line">一路上</span><br><span class="line">大雨曾经滂沱</span><br><span class="line">证明你有来过</span><br><span class="line"></span><br><span class="line">可是当我闭上眼再睁开眼</span><br><span class="line">只看见沙漠</span><br><span class="line">哪里有什么骆驼</span><br><span class="line"></span><br><span class="line">背影是真的</span><br><span class="line">人是假的</span><br><span class="line">没什么执著</span><br><span class="line">一百年前你不是你我不是我</span><br><span class="line"></span><br><span class="line">悲哀是真的</span><br><span class="line">泪是假的</span><br><span class="line">本来没因果</span><br><span class="line">一百年后没有你也没有我</span><br><span class="line"></span><br><span class="line">风属于天的 </span><br><span class="line">我借来吹吹</span><br><span class="line">却吹起人间烟火</span><br><span class="line"></span><br><span class="line">天属于谁的</span><br><span class="line">我借来欣赏</span><br><span class="line">却看到你的轮廓</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="诗和小说以及文章" scheme="http://Scofieldsu.github.io/categories/%E8%AF%97%E5%92%8C%E5%B0%8F%E8%AF%B4%E4%BB%A5%E5%8F%8A%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="The_Life_You_Want" scheme="http://Scofieldsu.github.io/tags/The-Life-You-Want/"/>
    
  </entry>
  
  <entry>
    <title>热爱生命</title>
    <link href="http://Scofieldsu.github.io/2016/06/03/%E7%83%AD%E7%88%B1%E7%94%9F%E5%91%BD/"/>
    <id>http://Scofieldsu.github.io/2016/06/03/热爱生命/</id>
    <published>2016-06-03T14:54:04.000Z</published>
    <updated>2018-01-14T09:53:31.416Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="诗和小说以及文章" scheme="http://Scofieldsu.github.io/categories/%E8%AF%97%E5%92%8C%E5%B0%8F%E8%AF%B4%E4%BB%A5%E5%8F%8A%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="The_Life_You_Want" scheme="http://Scofieldsu.github.io/tags/The-Life-You-Want/"/>
    
  </entry>
  
  <entry>
    <title>初相遇</title>
    <link href="http://Scofieldsu.github.io/2016/05/18/%E5%88%9D%E7%9B%B8%E9%81%87/"/>
    <id>http://Scofieldsu.github.io/2016/05/18/初相遇/</id>
    <published>2016-05-18T15:44:23.000Z</published>
    <updated>2018-01-14T17:58:29.174Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">美丽的梦和美丽的诗一样，</span><br><span class="line"></span><br><span class="line">都是可遇而不可求的，</span><br><span class="line"></span><br><span class="line">常常在最没能料到的时刻里出现。</span><br><span class="line"></span><br><span class="line">我喜欢那样的梦，</span><br><span class="line"></span><br><span class="line">在梦里，一切都可以重新开始，</span><br><span class="line"></span><br><span class="line">一切都可以慢慢解释，</span><br><span class="line"></span><br><span class="line">心里甚至还能感觉到，</span><br><span class="line"></span><br><span class="line">所有被浪费的时光竟然都能重回时的狂喜与感激。</span><br><span class="line"></span><br><span class="line">胸怀中满溢着幸福，</span><br><span class="line"></span><br><span class="line">只因你就在我眼前，</span><br><span class="line"></span><br><span class="line">对我微笑，一如当年。</span><br><span class="line"></span><br><span class="line">我真喜欢那样的梦，</span><br><span class="line"></span><br><span class="line">明明知道你已为我拔涉千里，</span><br><span class="line"></span><br><span class="line">却又觉得芳草鲜美，落英缤纷，</span><br><span class="line"></span><br><span class="line">好象你我才初初相遇。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="诗和小说以及文章" scheme="http://Scofieldsu.github.io/categories/%E8%AF%97%E5%92%8C%E5%B0%8F%E8%AF%B4%E4%BB%A5%E5%8F%8A%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="The_Life_You_Want" scheme="http://Scofieldsu.github.io/tags/The-Life-You-Want/"/>
    
  </entry>
  
  <entry>
    <title>命若琴弦</title>
    <link href="http://Scofieldsu.github.io/2016/05/16/%E5%91%BD%E8%8B%A5%E7%90%B4%E5%BC%A6/"/>
    <id>http://Scofieldsu.github.io/2016/05/16/命若琴弦/</id>
    <published>2016-05-16T14:31:46.000Z</published>
    <updated>2018-01-14T18:03:05.229Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">命 若 琴 弦</span><br><span class="line">        *史铁生*</span><br><span class="line"></span><br><span class="line">莽莽苍苍的群山之中走着两个瞎子，一老一少，一前一后，两顶发了黑的黑帽起伏攒动，匆匆忙忙，象是随着一条不安静的河水在漂流。无所谓从哪儿来，也无所谓到哪儿去，每人带一把三弦琴，说书为生。</span><br><span class="line"></span><br><span class="line">方圆几百上千里这片大山中，峰峦叠嶂，沟壑纵横，人烟稀疏，走一天才能见一片开阔地，有几个村落。荒草丛中随时会飞起一对山鸡，跳出一只野兔、狐狸、或者其它小野兽。山谷中常有鹞鹰盘旋。寂静的群山没有一点阴影，太阳正热的凶。</span><br><span class="line"></span><br><span class="line">“把三弦子抓在手里。”老瞎子喊，在山间震起回声。 “抓在手里呢。”小瞎子回答。</span><br><span class="line"></span><br><span class="line">“操心身上的汗把三弦子弄湿了。弄湿了晚上弹你的肋条！”</span><br><span class="line"></span><br><span class="line">“抓在手里呢。”</span><br><span class="line"></span><br><span class="line">老少二人都赤着上身，各自拎了一条木棍探路，缠在腰间的粗布小褂已经被汗水湿润了一大片起来的黄土干的呛人。这正是说书的旺季。天长，村子里的人吃罢晚饭都不呆在家里；有的人晚饭也不在家吃，捧上碗至路边去，或者到场院里。老瞎子想赶着多说书，整个热季领着小瞎子一个村子紧走，一晚一晚紧说。老瞎子一天比一天紧张、激动，心理算定：弹断一千根琴弦的日子就在这个夏天了，说不定就在前面的野羊坳。</span><br><span class="line"></span><br><span class="line">暴躁了一整天的太阳这会儿正平静下来，光线开始变得深沉。远远近近的蝉鸣也舒缓了许多。</span><br><span class="line"></span><br><span class="line">“小子！你不能走快点吗？”老瞎子在前面喊，不回头也不放慢脚步。小瞎子紧跑几步，吊在屁股上的一 只大挎包叮啷哐啷地响，离老瞎子仍有几丈</span><br><span class="line"></span><br><span class="line">“野鸽子都在窝里飞啦。”</span><br><span class="line"></span><br><span class="line">“什么”小瞎子又紧走几步。</span><br><span class="line"></span><br><span class="line">“我说野鸽子都回窝了，你还不快走！”</span><br><span class="line"></span><br><span class="line">“噢。”</span><br><span class="line"></span><br><span class="line">“你又鼓捣我那 电匣子呢。”</span><br><span class="line"></span><br><span class="line">“噫――！鬼动来。”</span><br><span class="line"></span><br><span class="line">“那耳机子快让你鼓捣坏了。”</span><br><span class="line"></span><br><span class="line">“鬼动来！”</span><br><span class="line"></span><br><span class="line">老瞎子暗笑：你小子才活了几天？“蚂蚁打架我也听得着。”老瞎子说。</span><br><span class="line"></span><br><span class="line">小瞎子不争辩了，悄悄把耳机子塞到挎包里去，跟在师父身后闷闷地走路。无尽无休的无聊的 路。</span><br><span class="line"></span><br><span class="line">走了一阵子，小瞎子听见有只獾在地里啃庄稼，就使劲学狗叫，那只獾 连滚带爬地逃走了，他觉得有点开心，轻声哼了几句小调儿，哥哥呀妹妹的。师父不让他养狗，怕受村里的狗 欺负，也怕欺负了别人家的狗，误了生意。又走了一会小瞎子又听见不远处有条蛇在游动，弯腰摸了块石头砍过去，“哗啦啦”一阵子高梁叶子响。老瞎子有点可怜他了，停下来等他。</span><br><span class="line"></span><br><span class="line">“除了獾就是蛇。”小瞎子赶忙说，担心师父骂他。</span><br><span class="line"></span><br><span class="line">“有了庄稼地了，不远了。”老瞎子把一个水壶递给徒弟。</span><br><span class="line"></span><br><span class="line">“干咱们这营生的，一辈子就是走。”老瞎子又说，“累不？”小瞎子不回答，知道师父最讨厌他说累。</span><br><span class="line"></span><br><span class="line">“我师父才冤呢。就是你师爷，才冤呢。东奔西走一辈子，到了儿没弹够一千根琴弦。”</span><br><span class="line"></span><br><span class="line">小瞎子听出师父这会儿心绪好，就问：“什么上绿色的长乙（椅）？”</span><br><span class="line"></span><br><span class="line">“什么？噢，八成是一把椅子吧。”</span><br><span class="line"></span><br><span class="line">“曲折的油狼（游廊）呢？”</span><br><span class="line"></span><br><span class="line">“油狼？什么油狼？”</span><br><span class="line"></span><br><span class="line">“曲折的油狼。”</span><br><span class="line"></span><br><span class="line">“不知道。”</span><br><span class="line"></span><br><span class="line">“匣子里说的。”</span><br><span class="line"></span><br><span class="line">“你就爱瞎听那 些玩艺儿。听那些玩艺儿有什么用？天底下的好东西多啦，跟咱们有什么关系？”</span><br><span class="line"></span><br><span class="line">“我就没听您说过，什么跟咱们有关系。”小瞎子把“有”字说得重。</span><br><span class="line"></span><br><span class="line">“琴！三弦琴！你爹让你跟了我来，是为了让你弹好三弦子，学会说书。”</span><br><span class="line"></span><br><span class="line">小瞎子故意把水喝得咕噜响。</span><br><span class="line"></span><br><span class="line">再上路时小瞎子走在前头。</span><br><span class="line"></span><br><span class="line">大山的阴影在沟谷里铺开来。地势也 渐渐的平缓，开阔。</span><br><span class="line"></span><br><span class="line">接近村子的时候，老瞎子喊住小瞎子，在背阴的山脚下 找到一个小泉眼，细细的泉水从石缝里往外冒，淌下来，积成脸盆大小的水洼，周围的野草长的茂盛，水流出几十米便被干渴的土地吸干。</span><br><span class="line"></span><br><span class="line">“过来洗洗吧，洗洗你身臭汗味。”</span><br><span class="line"></span><br><span class="line">小瞎子拨开野草在水洼边蹲下，心里还猜想着“曲折的油狼”。</span><br><span class="line"></span><br><span class="line">“把浑身都洗洗。你那样儿准象个小叫花子。”</span><br><span class="line"></span><br><span class="line">“那你不就是个老叫花子了？”小瞎子把手按在水里，嘻嘻的笑。</span><br><span class="line"></span><br><span class="line">老瞎子也笑，双手捧起水来往脸上泼。“可咱们不是叫花子，咱们有手艺。”</span><br><span class="line"></span><br><span class="line">“这地方咱们好象来过。”小瞎子侧耳听着四周的动静。</span><br><span class="line"></span><br><span class="line">“可你的心思总不在学艺上。你这小子心太野。老人的话你从不着耳听。”</span><br><span class="line"></span><br><span class="line">“咱们准是来过这儿。”</span><br><span class="line"></span><br><span class="line">“别打岔！你那三弦子弹的还差着远呢。咱这命就在几根琴弦上，我师父当年就这么跟我说。”</span><br><span class="line"></span><br><span class="line">泉水清凉凉的。小瞎子又哥哥妹妹的哼起来。老瞎子挺来气：“我说什么你听见了吗？”</span><br><span class="line"></span><br><span class="line">“咱这命就在这几根琴弦上，您师父我师爷说的。我就听过八百遍了。您师父还给您留下一张药方，您得弹断一千根琴弦才能去抓那付药，吃了药您就能看见东西了。我听说过一千遍了。”</span><br><span class="line"></span><br><span class="line">“你信不信？”</span><br><span class="line"></span><br><span class="line">小瞎子不正面回答，说：“干嘛非得弹断一千根琴弦才能去抓那付药呢？”</span><br><span class="line"></span><br><span class="line">“那是药引子。机灵鬼儿，吃药得有药引子！”</span><br><span class="line"></span><br><span class="line">“一千根断了的琴弦还不好弄？”小瞎子忍不住嗤嗤地笑。</span><br><span class="line"></span><br><span class="line">“笑什么笑！你以为你懂得多少事？得真正是一根一根弹断了的才成。”小瞎子不敢吱声了，听出师父又要动气。每回就是这样，师父 容不得对这件事有怀疑。</span><br><span class="line"></span><br><span class="line">老瞎子也没再作声，显得有些激动，双手搭在膝盖上，两颗头一样的眼珠结着苍天，象是一根一根地回忆着那 些弹断的琴弦。盼了多少年了呀，老瞎子想，盼了五十年了！五十年中翻了多少架山，走了多少里路哇。挨了多少回晒，挨了多少回冻，心里受了多少委屈呀。一晚上一晚上地弹，心里总记着，得真正是一根一根尽心地弹断了才成。现在快盼到了，绝出不了这个夏天了。 老瞎子知道 自己又没什么 能要命的病，活过这个夏天一点不成问题。“我比我师父可运气多了，” 他说，“我师父到了儿没能睁开眼睛看一回。”</span><br><span class="line"></span><br><span class="line">“咳！我知道这地方是哪儿了！”小瞎子忽然喊起来。</span><br><span class="line"></span><br><span class="line">老瞎子这才动子动，抓起自己 的琴来摇了摇，叠好的纸片碰在蛇皮上发出细微的响声，那张药方就在琴槽里。</span><br><span class="line"></span><br><span class="line">“师父，这儿不是野羊岭吗？”小瞎子问。老瞎子没搭理他，听出这小子又不安稳了。</span><br><span class="line"></span><br><span class="line">“前头就是野羊坳，是不是，师父？”</span><br><span class="line"></span><br><span class="line">“小子，过来给我擦擦背。”老瞎子说，把弓一样的脊背弯给他。</span><br><span class="line"></span><br><span class="line">“是不是野羊坳，师父 ？”</span><br><span class="line"></span><br><span class="line">“是！干什么？你别又闹猫似的。”</span><br><span class="line"></span><br><span class="line">小瞎子的心扑通扑通跳，老老实实给师父擦背。老瞎子觉出他擦得很有劲。</span><br><span class="line"></span><br><span class="line">“野羊坳怎么了？你别又叫驴似的会闻味儿。”</span><br><span class="line"></span><br><span class="line">小瞎子心虚，不吭声，不让自己显出兴奋。</span><br><span class="line"></span><br><span class="line">“又想什么呢？别当我不知道你这心思。”</span><br><span class="line"></span><br><span class="line">“又怎么了，我？”</span><br><span class="line"></span><br><span class="line">“怎么了你？上回你在这儿疯得不够？那妮子是什么好货！”老瞎子心想，也许不该再带他到野羊坳来。可是野羊坳来。可是野羊坳是个大村子，年年在这儿生意都好，能说上半个多月。老瞎子恨不能立刻弹断最后几根琴弦。小瞎子嘴上嘟嘟囔囔的心却飘飘的，想着野羊坳里那个尖声细气的小妮子。</span><br><span class="line"></span><br><span class="line">“听我一句话，不害你。”老瞎子说，“那号事靠不住。”</span><br><span class="line"></span><br><span class="line">“什么事？”</span><br><span class="line"></span><br><span class="line">“少跟我贫嘴。你明白我说的什么事。”</span><br><span class="line"></span><br><span class="line">“我就没听您说过，什么事靠得住。”小瞎子又偷偷地笑。</span><br><span class="line"></span><br><span class="line">老瞎子没理他，骨头一样的眼珠又对着苍天。那儿，太阳正变成一汪血。</span><br><span class="line"></span><br><span class="line">两面脊背和山是一样的黄褐色。一座已经老了，嶙峋瘦骨象是山根下裸露的基石。另一座正年青。老瞎子七十岁，小瞎子才十七。小瞎子十四岁上父亲把他送到老瞎子这儿来，这是让他学说书，这辈子好有个本事，将来可以独自在世上活下去。</span><br><span class="line"></span><br><span class="line">老瞎子说书已经说了五十多年。这一片偏僻荒凉的大山里的人们都知道他：头发一天天变白，背一天天变驼，年年月月背一三弦琴满世界走，逢上有愿出钱的地方就动琴弦唱一晚上，给寂寞的山村带来欢乐。开头常是这么几句：“自从盘古分天地，三皇五帝到如今，有道君王害黎民。轻轻弹响三弦琴，慢慢稍停把歌论，歌有三千七百本，不知哪本动人心。”于是听书的众人喊起来，老的要听董永卖身葬父，小的要听武二郎夜走蜈蚣岭，女人们想听秦得莲。这是老瞎子最知足的一刻，身上的疲劳和心里的孤静全忘却，不慌不忙地喝几口水，待众人的吵嚷声鼎沸，便把琴弦一阵紧拨，唱到：“今日不把别人唱，单表公子小罗成。”或者：“茶也喝来烟也吸，唱一回哭倒长城的孟姜女。”满场立刻鸦雀无声，老瞎子也全心沉到自己所说的书中去。</span><br><span class="line"></span><br><span class="line">他会的老书数不尽。他还有一个电匣子， 据说是花了大价钱从一个山外人手里买来，为的是学些新词儿，编些新曲儿。其实山里人倒太在乎他说什么唱什么。人人都称赞他那 三弦子弹得讲究，轻轻漫漫的，飘飘洒洒的，疯颠狂放的，那里头有天上的日月，有地上的生灵。老瞎子的嗓子能学出世上所有的声音。男人、女人、刮风下雨、兽啼禽鸣。不知道他脑子里能呈现出什么景象，他一落生就瞎了眼睛，从没过这个世界。</span><br><span class="line"></span><br><span class="line">小瞎子可以算见过世界，但只有三年，那时还不懂事。他对说书和弹琴并无多少兴趣，父亲把他送来的时候费尽了唇舌，好说歹说连哄带骗，最后不如说是那个电匣子把他留住。他抱着电匣子听得入神，甚至发觉父亲以时候离去。</span><br><span class="line"></span><br><span class="line">这只神奇的匣子永远令他着迷，遥远的地方和稀奇古怪的事物使他幻想不绝，凭着三年朦胧的记忆，补充着万物的色彩和形象。譬如海，匣子里说蓝天就象大海，他记得蓝天，于是想象出满天排开的水锅。再譬如漂亮的姑娘，匣子里说就象盛开的花朵，他实在不相信会是那样，母亲的灵柩被抬到远山上去的时候，路上正开遍着野花，他永远记得却永远不愿意去想。但他愿意想姑娘，越来越愿意想；尤其是野羊坳的那个尖声细气的小妮子，总让他心里荡起波澜，直到有一回匣子里唱道 ，“姑娘的眼睛就象太阳”，这下他才找到了一个贴切的形象，想起母亲在红透的夕阳中向他走来的样子。其实人人都是根据自己的所知猜测着无穷的未知，以自己的感情勾画出世界。每个人的世界就都不同。</span><br><span class="line"></span><br><span class="line">也总有一些东西小瞎子无从想象，譬如“曲折的油狼”。</span><br><span class="line"></span><br><span class="line">这天晚上，小瞎子跟着师父在野羊坳说书。又听见那小妮子站在离他不远处尖声细气地说笑。书正说到紧要处――“罗成回马再交战，大胆苏烈又兴兵。苏烈大刀如流水，罗成长枪似腾云，好似海中龙吊宝，犹如深山虎争林。又战七日并牙夜，罗成清茶无点唇……”老瞎子把琴弹得如雨骤风疾，字字句句唱得铿锵，小瞎子却心猿意马，手底下早乱了套数……</span><br><span class="line"></span><br><span class="line">野羊岭上有一座小庙，离野羊坳村二里地，师徒二人就在这里住下。石头砌的院墙已经残断不全，几间小殿堂也歪斜欲倾百孔千疮，唯正中一间尚可遮蔽风雨，大约是因为这一间中毕竟还供奉着神灵。丰尊泥像早脱尽了尘世的彩饰，还一身黄土本色返朴归真了，认不出是佛是道。院里院外、房顶墙头都长满荒藤野草，蓊蓊郁郁倒有生气。老瞎子每日到野羊坳说书都住在这儿。</span><br><span class="line"></span><br><span class="line">散了书已经不早，老瞎子在下殿里安顿行李，小瞎子在侧殿的檐下生火烧水。去年砌下的灶火稍加修整就可以用。小瞎子蹶着屁股吹火，柴草不干呛得他满院里转着圈咳嗽。老瞎子在正殿里数叨他：“我看你能干好什么 。”</span><br><span class="line"></span><br><span class="line">“柴湿嘛。”</span><br><span class="line"></span><br><span class="line">“我没说这事。我说的是你的琴，今儿晚上的琴你弹成了什么。”</span><br><span class="line"></span><br><span class="line">小瞎子不敢接这话茬，吸足了几口气又跪到灶火前去，鼓着腮帮子一通猛吹。“你要是不想干这行，就趁早给你爹捎信把你领回去。老这么闹猫闹狗的可不行，要闹回家闹去。”</span><br><span class="line"></span><br><span class="line">小瞎子咳嗽从灶火边跳开，几步蹿到院子另一头，呼嗤呼嗤大喘气，嘴里一边骂。</span><br><span class="line"></span><br><span class="line">“说什么呢？”</span><br><span class="line"></span><br><span class="line">“我骂这火。”</span><br><span class="line"></span><br><span class="line">“有你那么吹火的？”</span><br><span class="line"></span><br><span class="line">“那怎么吹？”</span><br><span class="line"></span><br><span class="line">“怎么吹？哼，”老瞎子顿了顿，又说，“你就当这灶火是那妮子的脸！”</span><br><span class="line"></span><br><span class="line">小瞎子又不敢搭腔了， 跪到灶火前去再吹，心想：真的，不知道兰秀儿的脸什么样。那个尖声细气的小妮子叫兰秀儿。</span><br><span class="line"></span><br><span class="line">“那 要是妮子的脸，我看你不用教也会吹。”老瞎子说。</span><br><span class="line"></span><br><span class="line">小瞎子笑起来，越笑越咳嗽。</span><br><span class="line"></span><br><span class="line">“笑什么笑！”</span><br><span class="line"></span><br><span class="line">“您吹过妮子的脸？”</span><br><span class="line"></span><br><span class="line">老瞎子一时语塞。小瞎子笑得坐在地上。“日他妈。”老瞎子骂道，笑笑，然后变了脸色，再不言语。</span><br><span class="line"></span><br><span class="line">灶膛里腾的一声，火旺起来。小瞎子再去添柴，一心想着兰秀儿。才散了书的那会儿，兰秀儿挤到他跟前来小声说：“哎，上回你答应我什么来？”师父就在旁边，他没敢吭声。人群挤来挤去，一会儿又把兰秀儿挤到他身边。“噫，上回吃人家的煮鸡蛋倒白吃了？”兰秀儿说，声音比上回大。这时候师父正忙着跟几个老汉拉话。他赶紧说：“嘘――，我记着呢。”兰秀儿又把声音压低：“你答应给我听电匣子你还没给我听。”“嘘――我记着呢。”幸亏那会儿人声嘈杂。</span><br><span class="line"></span><br><span class="line">正殿里好半天没有动静。之后，琴声响了，老瞎子又上好了一根新弦，他本来应该高兴的，来野羊坳头一晚 就又弹断一根琴弦，可是那琴声却低沉、零乱。</span><br><span class="line"></span><br><span class="line">小瞎子渐渐听出琴声不对，在院里喊：“水开了，师父。”</span><br><span class="line"></span><br><span class="line">没有回答。琴声一阵紧似一阵了。</span><br><span class="line"></span><br><span class="line">小瞎子端了一盆热 水进来。放在师父跟前，故意嘻嘻笑着说：“您今儿晚还想弹断一根是怎么着？”</span><br><span class="line"></span><br><span class="line">老瞎了没听见，这会儿他自己的往事都在心中。琴声烦躁不安，象是年年旷野里的风雨，象是日夜山谷中的溪流，象是奔奔忙忙不知所归的脚步声。小瞎子有点害怕了：师父很久不这样了，师父一这样就要犯病，头疼、心口疼、浑身疼，会几个月爬 不起炕来。</span><br><span class="line"></span><br><span class="line">“师父，您先洗脚吧。”</span><br><span class="line"></span><br><span class="line">琴声不停。</span><br><span class="line"></span><br><span class="line">“师父，您该洗脚了。”小瞎子的声音发抖。</span><br><span class="line"></span><br><span class="line">琴声不停。</span><br><span class="line"></span><br><span class="line">“师父！”</span><br><span class="line"></span><br><span class="line">琴声戛然而止，老瞎子叹了口气。小瞎子松了口 气。老瞎子洗脚，小瞎子乖乖地坐在他身身边。</span><br><span class="line"></span><br><span class="line">“睡去吧，”老瞎子说，“今儿格够累的了。”</span><br><span class="line"></span><br><span class="line">“您呢？”</span><br><span class="line"></span><br><span class="line">“你先睡，我得好好泡泡脚。人上了岁数毛病多。”老瞎子故意说得轻松。</span><br><span class="line"></span><br><span class="line">“我等您 一块儿睡 。”</span><br><span class="line"></span><br><span class="line">山深夜静，有一点风，墙头的草叶子响。夜猫子在远处哀哀地叫。听得见野羊坳里偶尔有几声狗吠，又引得孩子哭。月亮升起来，白光透过残损的窗棂进了殿堂，照见两个瞎子和三尊神像。</span><br><span class="line"></span><br><span class="line">“等我干嘛，时候不早了。”</span><br><span class="line"></span><br><span class="line">“你甭担心我，我怎么也不怎么，”老瞎子又说。</span><br><span class="line"></span><br><span class="line">“听见没有，小子？”</span><br><span class="line"></span><br><span class="line">小瞎子到底年轻，已经睡着。老瞎子推推他让他躺好，他嘴里咕囔了几句倒头睡去。老瞎子给他盖被子时，从那身日渐发育的筋肉上觉出，这孩子到了要想那 些事的年龄，非得有一段苦日子过不可了。唉，这事谁也替不了谁。</span><br><span class="line"></span><br><span class="line">老瞎子再把琴抱在怀里，摩挲着根根绷紧的琴弦。心里使劲念叨：又断了一根了，又断了一根了。再摇摇琴槽，有轻微的纸和蛇皮的磨擦声，唯独这事能为他排忧解烦。一辈子的愿望。</span><br><span class="line"></span><br><span class="line">小瞎子作了一个好梦。醒来吓了一跳，鸡已经叫了。他一骨碌爬起来听听，师父下睡得香，心说还好。他摸到那个大挎包，悄悄地掏出电匣子，蹑手蹑脚出了门。</span><br><span class="line"></span><br><span class="line">往野羊坳方向走了一会儿，他才觉 出不对头，鸡叫声渐渐停歇，野羊坳里还是静静的没有人声。他愣了一会儿，鸡才叫头遍吗？灵机一动扭开电匣子。电匣子里也是静悄悄。现在是半夜。他半夜里听过匣子，什么都没有。这匣子对他来说还是个表。只要扭开一听，便知道是几点钟，什么时候有什么节目都是一定的。</span><br><span class="line"></span><br><span class="line">小瞎子回到庙里，老瞎子正翻身。</span><br><span class="line"></span><br><span class="line">“干嘛哪？”</span><br><span class="line"></span><br><span class="line">“撒尿去了。”小瞎子说。</span><br><span class="line"></span><br><span class="line">一上午，师父逼着他练琴。直到响午饭后，小瞎子才瞅机会溜出庙来，溜进野羊坳。鸡也在树荫下打盹，猪也在墙根下说着梦话，太阳又热得凶，村子里很安静。</span><br><span class="line"></span><br><span class="line">小瞎子踩着磨盘，扒着兰秀儿家的墙头轻声喊：“兰秀儿――兰秀儿――”</span><br><span class="line"></span><br><span class="line">屋里传出雷似的鼾声。</span><br><span class="line"></span><br><span class="line">他犹豫了片刻，把声音稍稍抬高：“兰秀儿――！兰秀儿！”</span><br><span class="line"></span><br><span class="line">狗叫起来。屋里鼾声停了，一个闷声闷气的声音问：“谁呀？”</span><br><span class="line"></span><br><span class="line">小瞎子不敢回答，把脑袋从墙 头上缩下来。屋里吧唧了一阵嘴，又响起鼾声。</span><br><span class="line"></span><br><span class="line">他叹口气，从靡盘上下来怏怏地往回走。忽听见身后嘎吱一声院门响，随即一阵细碎的脚步声向他跑来。</span><br><span class="line"></span><br><span class="line">“猜是谁？”尖声细气。小瞎子的眼睛被一双柔软的小手捂上了。――这才多余呢。兰秀儿不到十五岁，认真说还是孩子。</span><br><span class="line"></span><br><span class="line">“兰秀儿！”</span><br><span class="line"></span><br><span class="line">“电匣子拿来没？”</span><br><span class="line"></span><br><span class="line">小瞎子掀开衣襟，匣子挂在腰上。“嘘――，别在这儿，找个没人的地方听去。”</span><br><span class="line"></span><br><span class="line">“咋啦？”</span><br><span class="line"></span><br><span class="line">“回头招好些人。”</span><br><span class="line"></span><br><span class="line">“咋啦？”</span><br><span class="line"></span><br><span class="line">“那么多人听，费电。”</span><br><span class="line"></span><br><span class="line">两个人东拐西弯，来到山背后那 眼小泉边。小瞎子忽然 想起件事，问兰秀儿：“你见过曲折的油狼吗？”</span><br><span class="line"></span><br><span class="line">“啥？”</span><br><span class="line"></span><br><span class="line">“曲折的油狼。”</span><br><span class="line"></span><br><span class="line">“曲折的油狼？”</span><br><span class="line"></span><br><span class="line">“知道吗？”</span><br><span class="line"></span><br><span class="line">“你知道？”</span><br><span class="line"></span><br><span class="line">“当然。还有绿色的长椅。就一把椅子。”“椅子谁不知道。”</span><br><span class="line"></span><br><span class="line">“那曲折的油狼呢？”</span><br><span class="line"></span><br><span class="line">兰秀儿摇摇头，有点崇拜小瞎子了。小瞎子这才郑重其事地扭开电匣子，一支欢快的乐曲在山沟里飘荡。</span><br><span class="line"></span><br><span class="line">地方又凉快又没有人来打扰。</span><br><span class="line"></span><br><span class="line">“这是‘步步高’。”小瞎子说，跳着哼。一会儿又换了支曲子，叫“旱天雷”，小瞎子还能跟着哼。兰秀儿觉得很惭愧。</span><br><span class="line"></span><br><span class="line">“这曲子也叫‘和尚思妻’。”</span><br><span class="line"></span><br><span class="line">兰秀儿笑起来：瞎骗人！“</span><br><span class="line"></span><br><span class="line">“你信不信？”</span><br><span class="line"></span><br><span class="line">“不信。”</span><br><span class="line"></span><br><span class="line">“爱信不信。这匣子里说的古怪事多啦。”小瞎子玩着凉凉的泉水，想了一会儿。“你知道什么叫接吻吗？”</span><br><span class="line"></span><br><span class="line">“你说什么叫？”</span><br><span class="line"></span><br><span class="line">这回轮到小瞎子笑，光笑不答。兰秀儿明白准不是好话，红着脸不再问。</span><br><span class="line"></span><br><span class="line">音乐播完了一个女人说，“现在是讲卫生节目。”</span><br><span class="line"></span><br><span class="line">“啥？”兰秀儿没听清。</span><br><span class="line"></span><br><span class="line">“讲卫生。”</span><br><span class="line"></span><br><span class="line">“是什么？”</span><br><span class="line"></span><br><span class="line">“嗯――，你头发上有虱子吗？”</span><br><span class="line"></span><br><span class="line">“去――，别动！”</span><br><span class="line"></span><br><span class="line">小瞎子赶忙缩回手来，赶忙解释：“要有就是不讲卫生。”</span><br><span class="line"></span><br><span class="line">“我才没有。”兰秀儿抓抓 头，觉得有些刺立，“噫――瞧你自个儿吧！”兰秀儿一把搬过小瞎子的头。“看我捉几个大的。”</span><br><span class="line"></span><br><span class="line">这时候听见老瞎子在半山上喊：“小子，还不给我回来！该做饭了，吃罢饭还得去说书！”他已经站在那儿听了好一会儿了。</span><br><span class="line"></span><br><span class="line">野羊坳里已经昏暗，羊叫、驴叫、狗叫、孩子们叫， 处处起了炊烟，野羊岭上还有一线残阳，小庙正在那淡薄的光中，没有声响。</span><br><span class="line"></span><br><span class="line">小瞎子又蹶着屁股烧火。老瞎子坐在一旁淘米，凭着听觉他能把米中的砂子捡出来。</span><br><span class="line"></span><br><span class="line">“今天的柴挺干。”小瞎了说。</span><br><span class="line"></span><br><span class="line">“嗯。”</span><br><span class="line"></span><br><span class="line">“还是焖饭？”</span><br><span class="line"></span><br><span class="line">“嗯。”</span><br><span class="line"></span><br><span class="line">小瞎子这会儿精神百倍，很想找些话说，但是知道师父的气还没消，心说还是少找骂。两个人默默地干着自己的事，又默默地一块儿把饭做熟。岭上也没了阳光。</span><br><span class="line"></span><br><span class="line">小瞎子盛了一碗小米饭 ，先给师父：“您吃吧。”声音怯怯的，无比驯顺。</span><br><span class="line"></span><br><span class="line">老瞎子终于开了腔：“小子，你听我一句行不？”</span><br><span class="line"></span><br><span class="line">“嗯 。”小瞎子往嘴里扒拉饭，回答得含糊。</span><br><span class="line"></span><br><span class="line">“你要是不愿意听，我就不说。”</span><br><span class="line"></span><br><span class="line">“谁说不愿意听了？我说‘嗯’！”</span><br><span class="line"></span><br><span class="line">“我是过来人，总比你知道的多。”</span><br><span class="line"></span><br><span class="line">小瞎子闷头扒拉饭。</span><br><span class="line"></span><br><span class="line">“我经过那 号事。”</span><br><span class="line"></span><br><span class="line">“什么事？”</span><br><span class="line"></span><br><span class="line">“又跟我贫嘴！”老瞎子把筷子往灶台上一摔。</span><br><span class="line"></span><br><span class="line">“兰秀儿光是想听听电匣子。我们光是一块儿听电匣子来。”</span><br><span class="line"></span><br><span class="line">“还有呢？”</span><br><span class="line"></span><br><span class="line">“没有了。”</span><br><span class="line"></span><br><span class="line">“没有了？”</span><br><span class="line"></span><br><span class="line">“我还问她见过曲折的油狼。”</span><br><span class="line"></span><br><span class="line">“我没问你这个。”</span><br><span class="line"></span><br><span class="line">“后来，后来，”小瞎子不那么气壮了，“不知怎么一下就说起了虱子……”</span><br><span class="line"></span><br><span class="line">“还有呢？”</span><br><span class="line"></span><br><span class="line">“没了，真没了！”</span><br><span class="line"></span><br><span class="line">两个人又默默地吃饭 。老瞎子带了这徒弟好几年，知道这孩子不会撒谎，这孩子最让人放心的地方就是诚实、厚道。</span><br><span class="line"></span><br><span class="line">“听我一句话，保准对你没坏处。以后离她远点好。早年你师爷这么跟我说，我也不相信……”</span><br><span class="line"></span><br><span class="line">“师爷？说兰秀儿？”</span><br><span class="line"></span><br><span class="line">“什么兰秀儿，那 会儿还没她呢，那会儿有你们呢……”老瞎子阴郁的脸又转向暮色浓重的天际，骨头一样白色的眼珠不住地转动，不知道在那儿他想能“看”见什么。许久，小瞎子说：“今儿晚上您多半又能弹断一根琴弦，”想让师父高兴些。</span><br><span class="line"></span><br><span class="line">这天晚上师徒在野羊坳说书。“上回说到罗成死，三魂七魄赴幽冥，听歌君子莫嘈 嚷，列位蝗我道下文。罗成阴魂出地府，一阵旋风就起身，旋风一阵来得快，长安不远面前存……”老瞎子的琴声也乱，小瞎子的琴声也乱，小瞎子回忆着那比柔软的小手捂在自己脸上的感觉，还有自己 的头被兰秀儿搬过去的滋味。老瞎子想起的事情更多……</span><br><span class="line"></span><br><span class="line">夜里老瞎子翻来覆去睡不安稳，多少往事在他耳边喧器，在他心头动荡，身体里仿佛有什么东西要爆炸。坏了，要犯病，他想。头昏，胸口憋闷，浑身紧巴巴的难受。他坐起来，对自己叨咕：“可别犯病，一犯病今年不甭想弹够那 些琴弦了。”他又摸到琴。要能叮叮当当随心所欲地疯弹一阵，心头的忧伤或许就能平息耳边的往事或许 就会消散。可是小瞎子正睡得香甜。</span><br><span class="line"></span><br><span class="line">他只好再全力去想那 张药方和琴弦：还剩下几根，还只剩最后几根了。那时就可以去抓药了，然后就能看见这个世界――他无数次爬过的山，无数次走过的路，无数次感到过她的温暖和炽热的太阳 ，无数次梦想着的蓝天和月亮和星星……还有呢？还有什么？他朦胧中所盼望的东西似乎比这要多得多……</span><br><span class="line"></span><br><span class="line">夜风在山里游荡。</span><br><span class="line"></span><br><span class="line">猫头鹰又在凄哀地叫。</span><br><span class="line"></span><br><span class="line">不过现在他老了，无论如何没年活头了，失去的，已经永远失去了，他象是刚刚意识到这一点。七十年中所受的全部辛苦就为了最后能看一眼世界，这值得吗？他问自己。</span><br><span class="line"></span><br><span class="line">小瞎子在梦里笑，在梦里说：“那是一把椅子，兰秀儿……”</span><br><span class="line"></span><br><span class="line">老瞎子静静地坐着，静静地坐着的还有那三尊分不清是佛是道的泥像。</span><br><span class="line"></span><br><span class="line">鸡叫头遍的时候老瞎子决定，天一亮就带这孩子离开野羊坳。否则这孩子受不了，他自己也受不了。兰秀儿不坏，可这事会怎么结局，老瞎子比谁都“看”得清楚。鸡叫二遍，老瞎子开始收拾行李。</span><br><span class="line"></span><br><span class="line">可是一早起来小瞎子病了，肚子疼，随即又发烧。老瞎子只好把行期推迟。</span><br><span class="line"></span><br><span class="line">一连好几天，老瞎子无论是烧火、淘米、捡柴，还是给小瞎子挖药、煎药，心里总在说：“值得，当然值得。”要是不这么反反复复对自己说身上的力气几乎就要垮掉。“我非要最后看一眼不可。”“要不怎么着？就这么死了去？”“再说就只剩下最后几根了。”后面三句都是理由。老瞎子又冷静下来，天天晚还到野羊坳去说书。</span><br><span class="line"></span><br><span class="line">这一下小瞎子倒来了福气。每天晚上师父到岭下去了，兰秀儿就猫似的轻轻跳进庙里来听匣子。兰秀儿还带来熟的鸡蛋，条件是得让她亲手去扭那匣子的开关。“往哪边扭？”“往右”“扭不动。”“往右，笨货，不知道哪边是右哇？”？“咔哒”一下，无论是什么便响起来，无论是什么俩人都爱听。</span><br><span class="line"></span><br><span class="line">又过了几天，老瞎子又弹断了三根弦。</span><br><span class="line"></span><br><span class="line">这一晚，老瞎子在野羊坳里自弹自唱：“不表罗成投胎事，又唱秦王李世民。秦王一听双泪流，可怜 爱卿丧残身，你死一乘风破浪 打紧，缺少扶朝上将军……”</span><br><span class="line"></span><br><span class="line">野羊坳上的小庙里这时更热闹。电匣子的音量开得挺大，又是孩子哭，又是大人喊，轰隆隆地又响炮，嘀嘀哒吹地又吹号。月光照进正殿，小瞎子躺着啃鸡蛋，兰秀儿坐在他旁边。两个人都听得兴奋，时而大笑，时而稀里糊涂莫名其妙。</span><br><span class="line"></span><br><span class="line">“这匣子你师父哪卖来？”</span><br><span class="line"></span><br><span class="line">“从一个山外头的人手里。”</span><br><span class="line"></span><br><span class="line">“你们到山外头去过？”兰秀儿问。</span><br><span class="line"></span><br><span class="line">“没。我早晚要去一回就是，坐坐火车。”</span><br><span class="line"></span><br><span class="line">“火车？”</span><br><span class="line"></span><br><span class="line">“火车你也不知道？笨货。”</span><br><span class="line"></span><br><span class="line">“噢，知道知道，冒烟哩是不是？”</span><br><span class="line"></span><br><span class="line">过了一会儿兰秀儿又说：“保不准我就得到山外头去。”语调有些惶。</span><br><span class="line"></span><br><span class="line">“是吗？”小瞎子一挺坐起来，“那你到底瞧瞧曲折的油狼是什么。”</span><br><span class="line"></span><br><span class="line">“你说是不是山外头的人都有电匣子？”</span><br><span class="line"></span><br><span class="line">“谁知道。我说你听清楚没有？曲、折、的、油、狼，这东西就在山外头。”</span><br><span class="line"></span><br><span class="line">“那我得跟他们要一个电匣子。”兰秀儿自言自语地想心事。</span><br><span class="line"></span><br><span class="line">“要一个？”小瞎子笑两声，然后住气，然后大笑：“你干嘛不要俩？你可真本事大。你知道这匣子几千块钱一个？把你卖了吧，怕也换不来。”</span><br><span class="line"></span><br><span class="line">兰秀儿心里正委屈，一把揪住小瞎子的耳朵使劲拧，骂道：“好你死瞎子。”</span><br><span class="line"></span><br><span class="line">两个人在堂殿里扭打起来。三尊泥像袖手旁观帮不上忙，两个年青的正在发育的身体碰撞在一起 ，纠缠在一起，一个把一个压进身下，一会儿又颠倒过来，骂声变成笑声。匣子在一边唱。</span><br><span class="line"></span><br><span class="line">打了好一阵子，两个人都累得住手，心怦怦跳，躺着喘气，不言声儿，谁却也不愿意再拉开距离，兰秀儿呼出的气吹在小瞎子的脸上，小瞎子感到了诱惑，并且想起那天吹火时师父说的话，就往兰秀儿脸上吹气。兰秀儿并不躲。</span><br><span class="line"></span><br><span class="line">“嘿，”小瞎子小声说，“你知道接吻是什么了吗？”</span><br><span class="line"></span><br><span class="line">“是什么？”兰秀儿的声音也小。</span><br><span class="line"></span><br><span class="line">小瞎子对着兰秀儿的耳朵告诉她。兰秀儿不说话。老瞎子回来之前，他们试着亲了嘴儿，滋味真不坏……</span><br><span class="line"></span><br><span class="line">就是这天晚上，老瞎子弹断了最后两根琴弦。两根弦一齐断了。他没料到。他几乎是连跑带爬地上了野羊岭，回到小庙里。小瞎子吓了一跳：“怎么了，师父？”</span><br><span class="line"></span><br><span class="line">老瞎子喘吁吁地坐在那儿，说不出话。小瞎子有些犯嘀咕：莫非是他和兰秀儿干的事让师父知道了？</span><br><span class="line"></span><br><span class="line">老瞎子这才相信一切都是值得的。一辈子的辛苦是值得的。能看一回，好好看一回，怎么都是值得的。</span><br><span class="line"></span><br><span class="line">“小子，明天我就去抓药。”</span><br><span class="line"></span><br><span class="line">“明天？”</span><br><span class="line"></span><br><span class="line">“明天。”</span><br><span class="line"></span><br><span class="line">“又断了一根了？”</span><br><span class="line"></span><br><span class="line">“两根。两根都断了。”</span><br><span class="line"></span><br><span class="line">老瞎子把那 两根弦卸下来，放在手里揉搓了一会儿，然后把他们并到另外的九百九十八根去，绑成一捆。</span><br><span class="line"></span><br><span class="line">“明天就走？”</span><br><span class="line"></span><br><span class="line">“天一亮就动身。”</span><br><span class="line"></span><br><span class="line">小瞎子心里一阵发凉。老瞎子开始剥琴槽上的蛇皮。</span><br><span class="line"></span><br><span class="line">“可我的病还没好利索。”小瞎子小声叨咕。</span><br><span class="line"></span><br><span class="line">“噢，我想过了，你就先留在这儿，我用不了十天就回来。”</span><br><span class="line"></span><br><span class="line">小瞎子喜出望外。</span><br><span class="line"></span><br><span class="line">“你一个人行不？”</span><br><span class="line"></span><br><span class="line">“行！”小瞎子紧忙说。</span><br><span class="line"></span><br><span class="line">老瞎子早忘了兰秀儿的事。“吃的、喝的、烧的全有。你要是病好利索了，也该学着自个儿出去说回书。行吗？”</span><br><span class="line"></span><br><span class="line">“行。”小瞎子觉得有点对不住师父。</span><br><span class="line"></span><br><span class="line">蛇皮剥开了，老瞎子人琴槽中取出一张叠得方方正正的纸条。他想起这药方进琴槽时，自己才二十岁，便觉得浑身上下都好象冷。</span><br><span class="line"></span><br><span class="line">小瞎子也把那药方放在手里摸了一会儿，也有了几分肃穆。</span><br><span class="line"></span><br><span class="line">“你师爷一辈子才冤呢。”</span><br><span class="line"></span><br><span class="line">“他弹断了多少根？”</span><br><span class="line"></span><br><span class="line">“他本来能弹够一千根，可他记成了八百。要不然他能弹断一千根。”</span><br><span class="line"></span><br><span class="line">天不亮老瞎子就上路了。他说最多十天就回来。谁也没想到他竟去了那么久。</span><br><span class="line"></span><br><span class="line">老瞎子回到羊坳时已经是冬天。漫 天大雪，灰暗的天空连接着白色的群山。没有声息，处处也没有生气，空旷而沉寂。所以老瞎子那顶发了黑的草帽就尤其躜动得显著。他蹒蹒跚跚地爬上野羊岭，庙院中衰草瑟瑟，窜出一只狐狸，仓惶逃远。</span><br><span class="line"></span><br><span class="line">村里人告诉他，小瞎子已经走了些日子。</span><br><span class="line"></span><br><span class="line">“我告诉他等我回来。”</span><br><span class="line"></span><br><span class="line">“不知道他干嘛就走了。”</span><br><span class="line"></span><br><span class="line">“他没说去哪儿，留下什么话没？”</span><br><span class="line"></span><br><span class="line">“他说让您甭找他。”</span><br><span class="line"></span><br><span class="line">“什么时候走的？”</span><br><span class="line"></span><br><span class="line">人们想了好久，都说是在兰秀儿嫁到山外去的那天。老瞎子心里便一切全明白。</span><br><span class="line"></span><br><span class="line">众人劝老瞎子留下来，这么冰天雪地的上哪去？不如在野羊坳说一冬天书。 老瞎子指指他的琴，人们见琴柄上空荡荡已经没了琴弦。老瞎子面容也憔悴，呼吸也孱弱，嗓音也沙哑了，完全变了个人。他说得去找他的徒弟。</span><br><span class="line"></span><br><span class="line">若不是还想着他的徒弟，老瞎子就回不到野羊坳。那张他保存了五十年的药方原来是一张无字的白纸。他不信，请了多少识字而又诚实的人帮他看，人人都说那果真是一张无字的白纸。老瞎子在药铺前的台阶上坐了一会儿，他以为是一会儿，其实已经几天几夜，骨头一样的眼珠在询问苍天，脸色也变成骨头一样的苍白。有人以为他是疯了，安慰他，劝他。老瞎子苦笑：七十岁了再疯还有什么意思？他只是再不想动弹，吸引着他活下去、走下去、唱下去的东西骤然间消失干净。就象一根不能拉紧的琴弦，再难弹出悦耳的曲子。老瞎子的心弦断了，准确地说，是有一端空无所系了。一根琴弦需要两个点才能拉紧。心弦也要两 个点――一头是追求，一头是目的――你才能在中间这紧绷绷的过程上弹响心曲。现在发现那目的原来是空的。老瞎子在一个小客店里住了很久，觉得身体里的一切都在熄灭。他整天躺在炕上，不弹也不唱，一天天迅速地衰老。直到花光了身上所有的钱，直到忽然想起他的徒弟，他知道自己的死期将至，可那孩子在等他回去。</span><br><span class="line"></span><br><span class="line">茫茫雪野，皑皑群山，在地之间躜动着一个黑点。走近时，老瞎子的身身影弯得如一痤桥。他去找他的徒弟。他知道那孩子目前的心情、处境。</span><br><span class="line"></span><br><span class="line">他想自己先得振作起来，但是不行，前面明明没有了目标。</span><br><span class="line"></span><br><span class="line">他一路走，便怀恋起过去的日子，才知道以往那些奔奔忙忙兴致勃勃的翻山、走路、弹琴，乃至心焦、忧虑都是多么欢乐！那时有个东西把心弦扯紧，虽然那东西原是虚设。老瞎妇想起他师父临终时的情景。他师父把那张自己没用上的药方封进他的琴槽。“您别死，再活几年，您就能睁眼看一回了。”说这话时他还是个孩子。他师父久久不言语，最后说：“记住，人的命就象这琴弦，拉紧了才能弹好，弹好了就够了。”……不错，那意思就是说：目的本来没有。不错，他的一辈子都被那虚设的目的拉紧，于是生活中叮叮当当才有了生气。重要的是从那绷紧的过程中得到欢乐，老瞎子知道怎么对自己的徒弟说了。可是他又想：能把一切都告诉小瞎子吗？老瞎子又试着振作起来，可还是不行，总摆脱不掉那无字的白纸……</span><br><span class="line"></span><br><span class="line">在深山里，老瞎子找到了小瞎子。</span><br><span class="line"></span><br><span class="line">小瞎子正跌倒在雪地里，一动不动，想那么等死。老瞎子懂得那绝不是装出来的悲衰。老瞎子把他拖进一个山洞，他已无力反抗。老瞎子捡了些柴，打起一堆火。</span><br><span class="line"></span><br><span class="line">小瞎子渐渐有了哭声。老瞎子放了心，任他尽情尽意地哭 。只要还能哭就还有救，只要还能哭就有哭够的时候。</span><br><span class="line"></span><br><span class="line">小瞎子哭了几天几夜，老瞎子就那么一声不吭地守着。火光和哭声惊动了野免子、山鸡、野羊和狐狸和鹞鹰……</span><br><span class="line"></span><br><span class="line">终于小瞎子说话了：“干嘛咱们是瞎子！”</span><br><span class="line"></span><br><span class="line">“就因为咱们是瞎子。”老瞎子回答。</span><br><span class="line"></span><br><span class="line">终于小瞎子又说：“我想睁开眼看看，师父，我想睁开眼看看！哪怕就看一回。”</span><br><span class="line"></span><br><span class="line">“你真那么想吗？”</span><br><span class="line"></span><br><span class="line">“真想，真想――”</span><br><span class="line"></span><br><span class="line">老瞎子把篝火拨得更旺些。</span><br><span class="line"></span><br><span class="line">雪停了。铅灰色的天空中，太阳象一面闪光的小镜子，鹞鹰在平稳地滑翔。</span><br><span class="line"></span><br><span class="line">“那就弹你的琴弦，”老瞎子说，“一根一根尽力地弹吧。”</span><br><span class="line"></span><br><span class="line">“师父，您的药抓来了？”小瞎子如梦方醒。</span><br><span class="line"></span><br><span class="line">“记住，得真正是弹断的才成。”</span><br><span class="line"></span><br><span class="line">“您已经看见了吗？师父，您现在看得见了？”</span><br><span class="line"></span><br><span class="line">小瞎子挣扎着起来，伸手去摸师父的眼窝。老瞎子把他的手抓住。</span><br><span class="line"></span><br><span class="line">“记住，得弹断一千二百根。</span><br><span class="line"></span><br><span class="line">“一千二？”</span><br><span class="line"></span><br><span class="line">“把你的琴给我，我把这药方给你封在琴槽里。”老瞎子现在才懂了师父当年对他说的话――你的命就在这琴弦上。</span><br><span class="line"></span><br><span class="line">目的虽是虚设的，可非得有不行，不然琴弦怎么拉紧，拉不紧就弹不响。</span><br><span class="line"></span><br><span class="line">“怎么是一千二，师父？”</span><br><span class="line"></span><br><span class="line">“是一千二。我没弹够，我记成了一千。”老瞎子想：这孩子再怎么弹吧，还能弹断一千二百根？永远扯紧欢跳的琴弦，不必去看那无字的白纸……</span><br><span class="line"></span><br><span class="line">这地方偏僻荒凉，群山不断。荒草丛中随时会飞起一对山鸡，跳出一只野免、狐狸，或者其它小野兽。山谷中鹞鹰在盘旋。</span><br><span class="line"></span><br><span class="line">现在让我们回到开始：</span><br><span class="line"></span><br><span class="line">莽莽苍苍的群山之中走着两个瞎子，一老一少，一前一后，两顶发了黑的草帽起伏躜动，匆匆忙忙，象是随着一条不安静的河水在漂流。无所谓从哪儿来、到哪儿去，也无所谓谁是谁……</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/sp
      
    
    </summary>
    
      <category term="诗和小说以及文章" scheme="http://Scofieldsu.github.io/categories/%E8%AF%97%E5%92%8C%E5%B0%8F%E8%AF%B4%E4%BB%A5%E5%8F%8A%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="The_Life_You_Want" scheme="http://Scofieldsu.github.io/tags/The-Life-You-Want/"/>
    
  </entry>
  
  <entry>
    <title>致橡树</title>
    <link href="http://Scofieldsu.github.io/2016/05/12/%E8%87%B4%E6%A9%A1%E6%A0%91/"/>
    <id>http://Scofieldsu.github.io/2016/05/12/致橡树/</id>
    <published>2016-05-11T16:23:21.000Z</published>
    <updated>2018-01-14T18:00:36.380Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">致橡树</span><br><span class="line"></span><br><span class="line">     --舒婷</span><br><span class="line"></span><br><span class="line">　　我如果爱你——</span><br><span class="line"></span><br><span class="line">　　绝不像攀援的凌霄花，</span><br><span class="line"></span><br><span class="line">　　借你的高枝炫耀自己；</span><br><span class="line"></span><br><span class="line">　　我如果爱你——</span><br><span class="line"></span><br><span class="line">　　绝不学痴情的鸟儿</span><br><span class="line"></span><br><span class="line">　　为绿荫重复单调的歌曲；</span><br><span class="line"></span><br><span class="line">　　也不止像泉源</span><br><span class="line"></span><br><span class="line">　　长年送来清凉的慰藉；</span><br><span class="line"></span><br><span class="line">　　也不止像险峰</span><br><span class="line"></span><br><span class="line">　　增加你的高度，衬托你的威仪。</span><br><span class="line"></span><br><span class="line">　　甚至日光。</span><br><span class="line"></span><br><span class="line">　　甚至春雨。</span><br><span class="line"></span><br><span class="line">　　不，这些都还不够！</span><br><span class="line"></span><br><span class="line">　　我必须是你近旁的一株木棉，</span><br><span class="line"></span><br><span class="line">　　作为树的形象和你站在一起。</span><br><span class="line"></span><br><span class="line">　　根，紧握在地下</span><br><span class="line"></span><br><span class="line">　　叶，相触在云里。</span><br><span class="line"></span><br><span class="line">　　每一阵风吹过</span><br><span class="line"></span><br><span class="line">　　我们都互相致意，</span><br><span class="line"></span><br><span class="line">　　但没有人</span><br><span class="line"></span><br><span class="line">　　听懂我们的言语。</span><br><span class="line"></span><br><span class="line">　　你有你的铜枝铁干，</span><br><span class="line"></span><br><span class="line">　　像刀、像剑</span><br><span class="line"></span><br><span class="line">　　也像戟；</span><br><span class="line"></span><br><span class="line">　　我有我红硕的花朵</span><br><span class="line"></span><br><span class="line">　　像沉重的叹息，</span><br><span class="line"></span><br><span class="line">　　又像英勇的火炬。</span><br><span class="line"></span><br><span class="line">　　我们分担寒潮、风雷、霹雳；</span><br><span class="line"></span><br><span class="line">　　我们共享雾霭、流岚、虹霓。</span><br><span class="line"></span><br><span class="line">　　仿佛永远分离，</span><br><span class="line"></span><br><span class="line">　　却又终身相依。</span><br><span class="line"></span><br><span class="line">　　这才是伟大的爱情，</span><br><span class="line"></span><br><span class="line">　　坚贞就在这里：不仅爱你伟岸的身躯，</span><br><span class="line"></span><br><span class="line">　　也爱你坚持的位置，脚下的土地。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="诗和小说以及文章" scheme="http://Scofieldsu.github.io/categories/%E8%AF%97%E5%92%8C%E5%B0%8F%E8%AF%B4%E4%BB%A5%E5%8F%8A%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="The_Life_You_Want" scheme="http://Scofieldsu.github.io/tags/The-Life-You-Want/"/>
    
  </entry>
  
  <entry>
    <title>一颗开花的树</title>
    <link href="http://Scofieldsu.github.io/2016/05/08/%E4%B8%80%E9%A2%97%E5%BC%80%E8%8A%B1%E7%9A%84%E6%A0%91/"/>
    <id>http://Scofieldsu.github.io/2016/05/08/一颗开花的树/</id>
    <published>2016-05-08T15:02:10.000Z</published>
    <updated>2018-01-14T17:59:48.040Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">一棵开花的树</span><br><span class="line"></span><br><span class="line">        -- 席慕容</span><br><span class="line"></span><br><span class="line">如何让你遇见我</span><br><span class="line"></span><br><span class="line">在我最美丽的时刻</span><br><span class="line"></span><br><span class="line">为这</span><br><span class="line"></span><br><span class="line">我已在佛前求了五百年</span><br><span class="line"></span><br><span class="line">求它让我们结一段尘缘</span><br><span class="line"></span><br><span class="line">佛于是把我化作一棵树</span><br><span class="line"></span><br><span class="line">长在你必经的路旁</span><br><span class="line"></span><br><span class="line">阳光下慎重地开满了花</span><br><span class="line"></span><br><span class="line">朵朵都是我前世的盼望</span><br><span class="line"></span><br><span class="line">当你走近</span><br><span class="line"></span><br><span class="line">请你细听</span><br><span class="line"></span><br><span class="line">颤抖的叶是我等待的热情</span><br><span class="line"></span><br><span class="line">而你终于无视地走过</span><br><span class="line"></span><br><span class="line">在你身后落了一地的</span><br><span class="line"></span><br><span class="line">朋友啊 那不是花瓣</span><br><span class="line"></span><br><span class="line">是我凋零的心</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="诗和小说以及文章" scheme="http://Scofieldsu.github.io/categories/%E8%AF%97%E5%92%8C%E5%B0%8F%E8%AF%B4%E4%BB%A5%E5%8F%8A%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="The_Life_You_Want" scheme="http://Scofieldsu.github.io/tags/The-Life-You-Want/"/>
    
  </entry>
  
  <entry>
    <title>socket(1)</title>
    <link href="http://Scofieldsu.github.io/2016/04/28/socket(1)/"/>
    <id>http://Scofieldsu.github.io/2016/04/28/socket(1)/</id>
    <published>2016-04-28T12:49:56.000Z</published>
    <updated>2018-08-21T18:29:53.726Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网络编程"><a class="markdownIt-Anchor" href="#网络编程"></a> 网络编程</h1><ul><li><p>创建通信端点，它使服务器监听请求，一旦一个通信端点已经建立，监听服务可以进入无线循环中，等待客户端的连接并响应他们的请求。</p></li><li><p>套接字最初始为同一主机上的应用程序所创建，使得主机上运行的一个程序与另一个运行的程序进行通信，这就是所谓的进程间的通信。</p></li><li><p>有两种类型的套接字：基于文件的 和面向网络的</p></li><li><p>基于文件的：AF_UNIX  基于网络的：AF_INET     python2.5引入了对特殊类型的linux套接字支持，AF_NETLINK     python2.6中支持透明的进程间通信（TIPC）协议 AF_TIPC</p></li><li><p>有效端口范围0~65535  （小于1024的为系统预留）</p></li><li><p>面向连接的套接字 （虚拟电路或者流套接字）：提供序列化的、可靠的不重复的数据交付，没有记录边界。传输控制协议（TCP）实现，使用SOCK_STREAM作为套接字类型。</p></li><li><p>面向无连接的套接字（数据报类型的套接字）：用户数据报协议（UDP）实现，使用SOCK_DGRAM作为套接字类型。</p></li></ul><h2 id="套接字对象方法"><a class="markdownIt-Anchor" href="#套接字对象方法"></a> 套接字对象方法</h2><h3 id="服务器端套接字函数"><a class="markdownIt-Anchor" href="#服务器端套接字函数"></a> 服务器端套接字函数</h3><table><thead><tr><th>socket类型</th><th>描述</th></tr></thead><tbody><tr><td>s.bind()</td><td>绑定地址（主机号 端口号对）到套接字</td></tr><tr><td>s.listen()</td><td>开始TCP监听</td></tr><tr><td>s.accept()</td><td>被动接受TCP客户端连接，（阻塞式）等待连续的到来</td></tr></tbody></table><h3 id="客户端套接字函数"><a class="markdownIt-Anchor" href="#客户端套接字函数"></a> 客户端套接字函数</h3><table><thead><tr><th>socket类型</th><th>描述</th></tr></thead><tbody><tr><td>s.connect()</td><td>主动初始化TCP服务器连接</td></tr><tr><td>s.connect_ex()</td><td>connect()函数扩展版本，出错时返回出错码而不是跑出异常</td></tr></tbody></table><h3 id="公共用途的套接字函数"><a class="markdownIt-Anchor" href="#公共用途的套接字函数"></a> 公共用途的套接字函数</h3><table><thead><tr><th>socket类型</th><th>描述</th></tr></thead><tbody><tr><td>s.recv()</td><td>接受TCP数据</td></tr><tr><td>s.send()</td><td>发送TCP数据</td></tr><tr><td>s.sendall()</td><td>完整发送TCP数据</td></tr><tr><td>s.recvfrom()</td><td>接受UDP数据</td></tr><tr><td>s.sendto()</td><td>发送UDP数据</td></tr><tr><td>s.getpeername()</td><td>连接到当前套接字的远端地址（TCP连接）</td></tr><tr><td>s.getsockname()</td><td>获取当前套接字的地址</td></tr><tr><td>s.getsockopt()</td><td>返回指定套接字的参数</td></tr><tr><td>s.setsockopt()</td><td>设置指定套接字的参数</td></tr><tr><td>s.close()</td><td>关闭套接字</td></tr></tbody></table><h3 id="面向模块的套接字函数"><a class="markdownIt-Anchor" href="#面向模块的套接字函数"></a> 面向模块的套接字函数</h3><table><thead><tr><th>socket类型</th><th>描述</th></tr></thead><tbody><tr><td>s.setblocking()</td><td>设置套接字的阻塞与非阻塞模式</td></tr><tr><td>s.settimeout()</td><td>设置阻塞套接字操作的超时时间</td></tr><tr><td>s.gettimeout()</td><td>得到阻塞套接字操作的超时时间</td></tr></tbody></table><h3 id="面向文件的套接字函数"><a class="markdownIt-Anchor" href="#面向文件的套接字函数"></a> 面向文件的套接字函数</h3><table><thead><tr><th>socket类型</th><th>描述</th></tr></thead><tbody><tr><td>s.fileno()</td><td>套接字的文件描述符</td></tr><tr><td>s.makefile()</td><td>创建一个与套接字关联的文件对象</td></tr></tbody></table><h2 id="创建tcp服务器的伪代码"><a class="markdownIt-Anchor" href="#创建tcp服务器的伪代码"></a> 创建TCP服务器的伪代码：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">服务器 tcpSerSock.py</span><br><span class="line">    核心操作如下：</span><br><span class="line">  　　ss = socket()                <span class="comment"># 创建服务器套接字</span></span><br><span class="line">  　　ss.bind()   　　              <span class="comment"># 地址绑定到套接字上</span></span><br><span class="line">  　　ss.listen()                      <span class="comment"># 监听连接</span></span><br><span class="line">         inf_loop:                       <span class="comment"># 服务器无限循环</span></span><br><span class="line">              cs = ss.accept()       <span class="comment"># 接受客户端连接 阻塞式:程序连接之前处于挂起状态</span></span><br><span class="line">         comm_loop:                 <span class="comment"># 通信循环</span></span><br><span class="line">              cs.recv()/cs.send()   <span class="comment"># 对话 接受与发送数据</span></span><br><span class="line">         cs.close()                      <span class="comment"># 关闭客户端套接字</span></span><br><span class="line">         ss.close()                      <span class="comment"># 关闭服务器套接字 (可选)</span></span><br></pre></td></tr></table></figure><h2 id="创建tcp服务器"><a class="markdownIt-Anchor" href="#创建tcp服务器"></a> 创建tcp服务器</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> ctime</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">'localhost'</span>          <span class="comment">#主机名</span></span><br><span class="line">PORT =  <span class="number">21567</span>               <span class="comment">#端口号</span></span><br><span class="line">BUFSIZE = <span class="number">1024</span>              <span class="comment">#缓冲区大小1K</span></span><br><span class="line">ADDR = (HOST,PORT)</span><br><span class="line"></span><br><span class="line">tcpSerSock = socket(AF_INET, SOCK_STREAM)</span><br><span class="line">tcpSerSock.bind(ADDR)       <span class="comment">#绑定地址到套接字</span></span><br><span class="line">tcpSerSock.listen(<span class="number">5</span>)        <span class="comment">#监听 最多同时5个连接进来</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:                 <span class="comment">#无限循环等待连接到来</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Waiting for connection ....'</span></span><br><span class="line"></span><br><span class="line">        tcpCliSock, addr = tcpSerSock.accept()  <span class="comment">#被动接受客户端连接</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">u'Connected client from : '</span>, addr</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">            data = tcpCliSock.recv(BUFSIZE)     <span class="comment">#接受数据</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">print</span> <span class="string">'Client: '</span>,data</span><br><span class="line">            tcpCliSock.send(<span class="string">'[%s] %s'</span> %(ctime(),data)) <span class="comment">#时间戳</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception,e:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Error: '</span>,e</span><br><span class="line">tcpSerSock.close()          <span class="comment">#关闭服务器</span></span><br></pre></td></tr></table></figure><h2 id="创建tcp客户端的伪代码"><a class="markdownIt-Anchor" href="#创建tcp客户端的伪代码"></a> 创建tcp客户端的伪代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">客户端 tcpCliSock.py</span><br><span class="line">        核心操作如下：</span><br><span class="line">      　　cs = socket()                 <span class="comment"># 创建客户端套接字</span></span><br><span class="line">             cs.connect()                  <span class="comment"># 尝试连接服务器</span></span><br><span class="line">             comm_loop:                 <span class="comment"># 通讯循环</span></span><br><span class="line">                  cs.send()/cs.recv()    <span class="comment"># 对话 发送接受数据</span></span><br><span class="line">             cs.close()                       <span class="comment"># 关闭客户端套接字</span></span><br></pre></td></tr></table></figure><h2 id="创建tcp客户端"><a class="markdownIt-Anchor" href="#创建tcp客户端"></a> 创建tcp客户端</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">'localhost'</span>          <span class="comment">#主机名</span></span><br><span class="line">PORT =  <span class="number">21567</span>               <span class="comment">#端口号 与服务器一致</span></span><br><span class="line">BUFSIZE = <span class="number">1024</span>              <span class="comment">#缓冲区大小1K</span></span><br><span class="line">ADDR = (HOST,PORT)</span><br><span class="line"></span><br><span class="line">tcpCliSock = socket(AF_INET, SOCK_STREAM)</span><br><span class="line">tcpCliSock.connect(ADDR)    <span class="comment">#连接服务器</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:                 <span class="comment">#无限循环等待连接到来</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        data = raw_input(<span class="string">'&gt;'</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        tcpCliSock.send(data)            <span class="comment">#发送数据</span></span><br><span class="line">        data = tcpCliSock.recv(BUFSIZE)  <span class="comment">#接受数据</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Server: '</span>, data</span><br><span class="line">    <span class="keyword">except</span> Exception,e:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Error: '</span>,e</span><br><span class="line"></span><br><span class="line">tcpCliSock.close()          <span class="comment">#关闭客户端</span></span><br></pre></td></tr></table></figure><h2 id="创建udp服务端的伪代码"><a class="markdownIt-Anchor" href="#创建udp服务端的伪代码"></a> 创建udp服务端的伪代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">服务器 udpSerSock.py</span><br><span class="line">        核心操作如下：</span><br><span class="line">      　　ss = socket()                <span class="comment"># 创建服务器套接字</span></span><br><span class="line">      　　ss.bind()   　　              <span class="comment"># 绑定服务器套接字</span></span><br><span class="line">             inf_loop:                       <span class="comment"># 服务器无限循环</span></span><br><span class="line">                  cs = ss.recvfrom()/ss.sendto()</span><br><span class="line">                                                  <span class="comment"># 对话 接受与发送数据</span></span><br><span class="line">             ss.close()                      <span class="comment"># 关闭服务器套接字</span></span><br></pre></td></tr></table></figure><h2 id="创建udp服务端"><a class="markdownIt-Anchor" href="#创建udp服务端"></a> 创建udp服务端</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> ctime</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">''</span>                   <span class="comment">#主机名</span></span><br><span class="line">PORT =  <span class="number">21567</span>               <span class="comment">#端口号</span></span><br><span class="line">BUFSIZE = <span class="number">1024</span>              <span class="comment">#缓冲区大小1K</span></span><br><span class="line">ADDR = (HOST,PORT)</span><br><span class="line"></span><br><span class="line">udpSerSock = socket(AF_INET, SOCK_DGRAM)</span><br><span class="line">udpSerSock.bind(ADDR)       <span class="comment">#绑定地址到套接字</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:                 <span class="comment">#无限循环等待连接到来</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Waiting for message ....'</span></span><br><span class="line">        data, addr = udpSerSock.recvfrom(BUFSIZE)          <span class="comment">#接受UDP</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Get client msg is: '</span>, data</span><br><span class="line">        udpSerSock.sendto(<span class="string">'[%s] %s'</span> %(ctime(),data), addr) <span class="comment">#发送UDP</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Received from and returned to: '</span>,addr</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception,e:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Error: '</span>,e</span><br><span class="line">udpSerSock.close()          <span class="comment">#关闭服务器</span></span><br></pre></td></tr></table></figure><h2 id="创建udp客户端的伪代码"><a class="markdownIt-Anchor" href="#创建udp客户端的伪代码"></a> 创建udp客户端的伪代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">客户端 udpCliSock.py</span><br><span class="line">        核心操作如下：</span><br><span class="line">      　　cs = socket()                            <span class="comment"># 创建客户端套接字</span></span><br><span class="line">             inf_loop:                                  <span class="comment"># 服务器无限循环</span></span><br><span class="line">                  cs.sendto()/cs.recvfrom()   <span class="comment"># 对话 接受与发送数据</span></span><br><span class="line">             cs.close()                                 <span class="comment"># 关闭客户端套接字</span></span><br></pre></td></tr></table></figure><h2 id="创建udp客户端"><a class="markdownIt-Anchor" href="#创建udp客户端"></a> 创建udp客户端</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">'localhost'</span>          <span class="comment">#主机名</span></span><br><span class="line">PORT =  <span class="number">21567</span>               <span class="comment">#端口号 与服务器一致</span></span><br><span class="line">BUFSIZE = <span class="number">1024</span>              <span class="comment">#缓冲区大小1K</span></span><br><span class="line">ADDR = (HOST,PORT)</span><br><span class="line"></span><br><span class="line">udpCliSock = socket(AF_INET, SOCK_DGRAM)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:                 <span class="comment">#无限循环等待连接到来</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        data = raw_input(<span class="string">'&gt;'</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        udpCliSock.sendto(data, ADDR)            <span class="comment">#发送数据</span></span><br><span class="line">        data,ADDR = udpCliSock.recvfrom(BUFSIZE)  <span class="comment">#接受数据</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Server : '</span>, data</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception,e:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Error: '</span>,e</span><br><span class="line"></span><br><span class="line">udpCliSock.close()          <span class="comment">#关闭客户端</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;网络编程&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#网络编程&quot;&gt;&lt;/a&gt; 网络编程&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;创建通信端点，它使服务器监听请求，一旦一个通信端点已经建立，监听服务可以进入无线循环中，等待客户端的连接并响应他
      
    
    </summary>
    
      <category term="什么意思" scheme="http://Scofieldsu.github.io/categories/%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D/"/>
    
    
      <category term="socket，tcp，udp" scheme="http://Scofieldsu.github.io/tags/socket%EF%BC%8Ctcp%EF%BC%8Cudp/"/>
    
  </entry>
  
  <entry>
    <title>获取mac地址</title>
    <link href="http://Scofieldsu.github.io/2015/08/28/%E8%8E%B7%E5%8F%96mac%E5%9C%B0%E5%9D%80/"/>
    <id>http://Scofieldsu.github.io/2015/08/28/获取mac地址/</id>
    <published>2015-08-28T08:18:20.000Z</published>
    <updated>2018-08-21T18:57:58.795Z</updated>
    
    <content type="html"><![CDATA[<p>##获取mac地址的比较</p><p><strong>方法1</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_mac</span><span class="params">(self)</span>:</span></span><br><span class="line">        sd=os.popen(<span class="string">"ipconfig/all"</span>).read()</span><br><span class="line">        lans= sd.split(<span class="string">"\r\n\r\n"</span>)</span><br><span class="line">        lns=[]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> lans:</span><br><span class="line">            ln=[str(s).strip() <span class="keyword">for</span> s <span class="keyword">in</span> i.split(<span class="string">"\r\n"</span>)]</span><br><span class="line">            lns.append(ln)</span><br><span class="line">        dip=socket.gethostbyname(socket.gethostname())<span class="comment">#获取主机IP地址</span></span><br><span class="line">        <span class="keyword">import</span> re</span><br><span class="line">        mac=<span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> lns:<span class="comment">#获取MAC地址</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> i:</span><br><span class="line">                <span class="keyword">if</span> j.strip().find(dip)!=<span class="number">-1</span>:</span><br><span class="line">                    <span class="keyword">for</span> m <span class="keyword">in</span> i:</span><br><span class="line">                        L = re.findall(<span class="string">'([0-9,A-F]&#123;2&#125;-[0-9,A-F]&#123;2&#125;-[0-9,A-F]&#123;2&#125;-[0-9,A-F]&#123;2&#125;-[0-9,A-F]&#123;2&#125;-[0-9,A-F]&#123;2&#125;)'</span>, m)</span><br><span class="line">                        <span class="keyword">if</span> L:</span><br><span class="line">                            mac=L[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">return</span> mac</span><br></pre></td></tr></table></figure><p><strong>方法2</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_mac_address</span><span class="params">()</span>:</span></span><br><span class="line">    mac=uuid.UUID(int = uuid.getnode()).hex[<span class="number">-12</span>:]</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"-"</span>.join([mac[e:e+<span class="number">2</span>] <span class="keyword">for</span> e <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">11</span>,<span class="number">2</span>)])</span><br></pre></td></tr></table></figure><ul><li><em>当电脑有多个网卡时，例如开启虚拟机，方法2获取的为最后一个网卡的物理地址,故方法1更合理</em></li></ul><blockquote><p>MAC（Media Access Control或者Medium Access Control）地址，意译为媒体访问控制，或称为物理地址、硬件地址，用来定义网络设备的位置。在OSI模型中，第三层网络层负责 IP地址，第二层数据链路层则负责 MAC地址。因此一个主机会有一个MAC地址，而每个网络位置会有一个专属于它的IP地址。</p><p>MAC地址是网卡决定的，是固定的。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;##获取mac地址的比较&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方法1&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/sp
      
    
    </summary>
    
      <category term="意思意思" scheme="http://Scofieldsu.github.io/categories/%E6%84%8F%E6%80%9D%E6%84%8F%E6%80%9D/"/>
    
    
      <category term="mac" scheme="http://Scofieldsu.github.io/tags/mac/"/>
    
      <category term="socket" scheme="http://Scofieldsu.github.io/tags/socket/"/>
    
  </entry>
  
  <entry>
    <title>网络协议</title>
    <link href="http://Scofieldsu.github.io/2015/08/15/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/"/>
    <id>http://Scofieldsu.github.io/2015/08/15/网络协议/</id>
    <published>2015-08-15T15:34:15.000Z</published>
    <updated>2018-08-21T18:31:23.726Z</updated>
    
    <content type="html"><![CDATA[<p>OSI：开放式系统互联(open system interconnection),参考模型，不是强制标准。<br>网络通信分为7层：<strong>物理层，数据链路层，网络层，传输层，会话层，表示层，应用层。</strong></p><p>Tcp/IP：应用层，传输层，internet层，网络访问层。<br>TCP协议：传输控制协议，Transmission Control Potocol.</p><ul><li><p>建立连接：三次握手SYN</p></li><li><p>关闭连接：四次挥手FIN</p></li><li><p>保证连接的可靠：</p></li></ul><p>UDP协议：User Diagram Potocol.(可靠性差，性能好)<br>Wireshark工具。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;OSI：开放式系统互联(open system interconnection),参考模型，不是强制标准。&lt;br&gt;
网络通信分为7层：&lt;strong&gt;物理层，数据链路层，网络层，传输层，会话层，表示层，应用层。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Tcp/IP：应用层，传输层，
      
    
    </summary>
    
      <category term="什么意思" scheme="http://Scofieldsu.github.io/categories/%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D/"/>
    
    
      <category term="http，tcp，udp" scheme="http://Scofieldsu.github.io/tags/http%EF%BC%8Ctcp%EF%BC%8Cudp/"/>
    
  </entry>
  
  <entry>
    <title>python(2):进程vs线程</title>
    <link href="http://Scofieldsu.github.io/2015/08/10/python(2)-%E7%BA%BF%E7%A8%8Bvs%E8%BF%9B%E7%A8%8B/"/>
    <id>http://Scofieldsu.github.io/2015/08/10/python(2)-线程vs进程/</id>
    <published>2015-08-10T14:01:27.000Z</published>
    <updated>2018-08-21T18:28:57.587Z</updated>
    
    <content type="html"><![CDATA[<ul><li>实现多任务，设计Master-Worker模式。通常是1个Master，多个worker。</li></ul><p><strong>多进程（multiprocessing）</strong></p><ul><li>多进程稳定性高，一个子进程崩溃了，不会影响主进程和其他子进程。Apache最早就是采用多进程。</li><li>多进程缺点就是创建进程代价大，在Unix/Linux系统下，用<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**多线程（multithreading）**</span><br><span class="line">- 多线程效率比多进程高，微软的IIS服务器默认采用多线程。但稳定性不够，致命的缺点就是任何一个线程挂掉都可能直接造成整个进程崩溃，因为所有线程共享进程的内存。</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line">### 任务类型：计算密集型和IO密集型。</span><br><span class="line"></span><br><span class="line">**计算密集型**</span><br><span class="line"></span><br><span class="line">- 由于主要消耗CPU资源，最好用C语言编写。</span><br><span class="line"></span><br><span class="line">**IO密集型**</span><br><span class="line">- 涉及到网络、磁盘IO的任务都是IO密集型任务，这类任务的特点是CPU消耗很少，任务的大部分时间都在等待IO操作完成（因为IO的速度远远低于CPU和内存的速度）。对于IO密集型任务，任务越多，CPU效率越高，但也有一个限度。常见的大部分任务都是IO密集型任务，比如Web应用。</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">### 异步IO</span><br><span class="line">- 如果充分利用操作系统提供的异步IO支持，就可以用单进程单线程模型来执行多任务，这种全新的模型称为事件驱动模型，**Nginx就是支持异步IO的Web服务器**，它在单核CPU上采用单进程模型就可以高效地支持多任务。在多核CPU上，可以运行多个进程（数量与CPU核心数相同），充分利用多核CPU。由于系统总的进程数量十分有限，因此操作系统调度非常高效。用异步IO编程模型来实现多任务是一个主要的趋势。</span><br><span class="line"></span><br><span class="line">对应到Python语言，```单进程的异步编程模型称为协程```，有了协程的支持，就可以基于事件驱动编写高效的多任务程序。</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">## 多进程</span><br><span class="line">```python</span><br><span class="line"></span><br><span class="line">from multiprocessing import Process</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line"> # 子进程要执行的代码</span><br><span class="line">def run_proc(name):</span><br><span class="line">    print &apos;Run child process %s (%s)...&apos; % (name, os.getpid())</span><br><span class="line"></span><br><span class="line">if __name__==&apos;__main__&apos;:</span><br><span class="line">    print &apos;Parent process %s.&apos; % os.getpid()</span><br><span class="line">    p = Process(target=run_proc, args=(&apos;test&apos;,))</span><br><span class="line">    print &apos;Process will start.&apos;</span><br><span class="line">    p.start()</span><br><span class="line">    p.join()</span><br><span class="line">    print &apos;Process end.</span><br></pre></td></tr></table></figure></li></ul><p>创建子进程时，只需要传入一个执行函数和函数的参数，创建一个Process实例，用start()方法启动，这样创建进程比fork()还要简单。</p><p>join()方法可以等待子进程结束后再继续往下运行，通常用于进程间的同步。</p><h3 id="pool"><a class="markdownIt-Anchor" href="#pool"></a> Pool</h3><p>如果要启动大量的子进程，可以用<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">```python</span><br><span class="line"></span><br><span class="line">from multiprocessing import Pool</span><br><span class="line">import os, time, random</span><br><span class="line"></span><br><span class="line">def long_time_task(name):</span><br><span class="line">    print &apos;Run task %s (%s)...&apos; % (name, os.getpid())</span><br><span class="line">    start = time.time()</span><br><span class="line">    time.sleep(random.random() * 3)</span><br><span class="line">    end = time.time()</span><br><span class="line">    print &apos;Task %s runs %0.2f seconds.&apos; % (name, (end - start))</span><br><span class="line"></span><br><span class="line">if __name__==&apos;__main__&apos;:</span><br><span class="line">    print &apos;Parent process %s.&apos; % os.getpid()</span><br><span class="line">    p = Pool()</span><br><span class="line">    for i in range(5):</span><br><span class="line">        p.apply_async(long_time_task, args=(i,))</span><br><span class="line">    print &apos;Waiting for all subprocesses done...&apos;</span><br><span class="line">    p.close()</span><br><span class="line">    p.join()</span><br><span class="line">    print &apos;All subprocesses done.&apos;</span><br></pre></td></tr></table></figure></p><p>对Pool对象调用join()方法会等待所有子进程执行完毕，调用join()之前必须先调用close()，调用close()之后就不能继续添加新的Process了。</p><p>请注意输出的结果，task 0，1，2，3是立刻执行的，而task 4要等待前面某个task完成后才执行，这是因为Pool的默认大小在我的电脑上是4，因此，最多同时执行4个进程,Pool的默认大小是CPU的核数。</p><h3 id="进程间通信"><a class="markdownIt-Anchor" href="#进程间通信"></a> 进程间通信</h3><ul><li>Process之间肯定是需要通信的，操作系统提供了很多机制来实现进程间的通信。Python的multiprocessing模块包装了底层的机制，提供了<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 分布式进程</span><br><span class="line">优选Process，因为Process更稳定，而且，Process可以分布到多台机器上，而Thread最多只能分布到同一台机器的多个CPU上。</span><br><span class="line">Python的multiprocessing模块不但支持多进程，其中managers子模块还支持把多进程分布到多台机器上。一个服务进程可以作为调度者，将任务分布到其他多个进程中，依靠网络通信。由于managers模块封装很好，不必了解网络通信的细节，就可以很容易地编写分布式多进程程序。</span><br><span class="line"></span><br><span class="line">举个例子：如果我们已经有一个通过Queue通信的多进程程序在同一台机器上运行，现在，由于处理任务的进程任务繁重，希望把发送任务的进程和处理任务的进程分布到两台机器上。怎么用分布式进程实现？</span><br><span class="line"></span><br><span class="line">原有的Queue可以继续使用，但是，通过managers模块把Queue通过网络暴露出去，就可以让其他机器的进程访问Queue了。</span><br><span class="line"></span><br><span class="line">我们先看服务进程，服务进程负责启动Queue，把Queue注册到网络上，然后往Queue里面写入任务：</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line"></span><br><span class="line"> # taskmanager.py</span><br><span class="line"></span><br><span class="line">import random, time, Queue</span><br><span class="line">from multiprocessing.managers import BaseManager</span><br><span class="line"></span><br><span class="line"> # 发送任务的队列:</span><br><span class="line">task_queue = Queue.Queue()</span><br><span class="line"> # 接收结果的队列:</span><br><span class="line">result_queue = Queue.Queue()</span><br><span class="line"></span><br><span class="line"> # 从BaseManager继承的QueueManager:</span><br><span class="line">class QueueManager(BaseManager):</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line"> # 把两个Queue都注册到网络上, callable参数关联了Queue对象:</span><br><span class="line">QueueManager.register(&apos;get_task_queue&apos;, callable=lambda: task_queue)</span><br><span class="line">QueueManager.register(&apos;get_result_queue&apos;, callable=lambda: result_queue)</span><br><span class="line"> # 绑定端口5000, 设置验证码&apos;abc&apos;:</span><br><span class="line">manager = QueueManager(address=(&apos;&apos;, 5000), authkey=&apos;abc&apos;)</span><br><span class="line"> # 启动Queue:</span><br><span class="line">manager.start()</span><br><span class="line"> # 获得通过网络访问的Queue对象:</span><br><span class="line">task = manager.get_task_queue()</span><br><span class="line">result = manager.get_result_queue()</span><br><span class="line"> # 放几个任务进去:</span><br><span class="line">for i in range(10):</span><br><span class="line">    n = random.randint(0, 10000)</span><br><span class="line">    print(&apos;Put task %d...&apos; % n)</span><br><span class="line">    task.put(n)</span><br><span class="line"> # 从result队列读取结果:</span><br><span class="line">print(&apos;Try get results...&apos;)</span><br><span class="line">for i in range(10):</span><br><span class="line">    r = result.get(timeout=10)</span><br><span class="line">    print(&apos;Result: %s&apos; % r)</span><br><span class="line"> # 关闭:</span><br><span class="line">manager.shutdown()</span><br></pre></td></tr></table></figure></li></ul><p>请注意，当我们在一台机器上写多进程程序时，创建的Queue可以直接拿来用，但是，在分布式多进程环境下，添加任务到Queue不可以直接对原始的task_queue进行操作，那样就绕过了QueueManager的封装，必须通过manager.get_task_queue()获得的Queue接口添加。</p><p>然后，在另一台机器上启动任务进程（本机上启动也可以）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># taskworker.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time, sys, Queue</span><br><span class="line"><span class="keyword">from</span> multiprocessing.managers <span class="keyword">import</span> BaseManager</span><br><span class="line"></span><br><span class="line"> <span class="comment"># 创建类似的QueueManager:</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QueueManager</span><span class="params">(BaseManager)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"> <span class="comment"># 由于这个QueueManager只从网络上获取Queue，所以注册时只提供名字:</span></span><br><span class="line">QueueManager.register(<span class="string">'get_task_queue'</span>)</span><br><span class="line">QueueManager.register(<span class="string">'get_result_queue'</span>)</span><br><span class="line"></span><br><span class="line"> <span class="comment"># 连接到服务器，也就是运行taskmanager.py的机器:</span></span><br><span class="line">server_addr = <span class="string">'127.0.0.1'</span></span><br><span class="line">print(<span class="string">'Connect to server %s...'</span> % server_addr)</span><br><span class="line"> <span class="comment"># 端口和验证码注意保持与taskmanager.py设置的完全一致:</span></span><br><span class="line">m = QueueManager(address=(server_addr, <span class="number">5000</span>), authkey=<span class="string">'abc'</span>)</span><br><span class="line"> <span class="comment"># 从网络连接:</span></span><br><span class="line">m.connect()</span><br><span class="line"> <span class="comment"># 获取Queue的对象:</span></span><br><span class="line">task = m.get_task_queue()</span><br><span class="line">result = m.get_result_queue()</span><br><span class="line"> <span class="comment"># 从task队列取任务,并把结果写入result队列:</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        n = task.get(timeout=<span class="number">1</span>)</span><br><span class="line">        print(<span class="string">'run task %d * %d...'</span> % (n, n))</span><br><span class="line">        r = <span class="string">'%d * %d = %d'</span> % (n, n, n*n)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        result.put(r)</span><br><span class="line">    <span class="keyword">except</span> Queue.Empty:</span><br><span class="line">        print(<span class="string">'task queue is empty.'</span>)</span><br><span class="line"> <span class="comment"># 处理结束:</span></span><br><span class="line">print(<span class="string">'worker exit.'</span>)</span><br></pre></td></tr></table></figure><p>Queue之所以能通过网络访问，就是通过QueueManager实现的。由于QueueManager管理的不止一个Queue，所以，要给每个Queue的网络调用接口起个名字，比如get_task_queue。</p><p>authkey有什么用？这是为了保证两台机器正常通信，不被其他机器恶意干扰。如果taskworker.py的authkey和taskmanager.py的authkey不一致，肯定连接不上。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Python的分布式进程接口简单，封装良好，适合需要把繁重任务分布到多台机器的环境下。</span><br><span class="line"></span><br><span class="line">注意Queue的作用是用来传递任务和接收结果，每个任务的描述数据量要尽量小。比如发送一个处理日志文件的任务，就不要发送几百兆的日志文件本身，而是发送日志文件存放的完整路径，由Worker进程再去共享的磁盘上读取文件。</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">## 多线程</span><br><span class="line">Python的标准库提供了两个模块：thread和threading，```thread```是低级模块，```threading```是高级模块，对thread进行了封装。绝大多数情况下，我们只需要使用threading这个高级模块。</span><br><span class="line"></span><br><span class="line">启动一个线程就是把一个函数传入并创建Thread实例，然后调用start()开始执行：</span><br><span class="line">```python</span><br><span class="line"></span><br><span class="line">import time, threading</span><br><span class="line"></span><br><span class="line"> # 新线程执行的代码:</span><br><span class="line">def loop():</span><br><span class="line">    print &apos;thread %s is running...&apos; % threading.current_thread().name</span><br><span class="line">    n = 0</span><br><span class="line">    while n &lt; 5:</span><br><span class="line">        n = n + 1</span><br><span class="line">        print &apos;thread %s &gt;&gt;&gt; %s&apos; % (threading.current_thread().name, n)</span><br><span class="line">        time.sleep(1)</span><br><span class="line">    print &apos;thread %s ended.&apos; % threading.current_thread().name</span><br><span class="line"></span><br><span class="line">print &apos;thread %s is running...&apos; % threading.current_thread().name</span><br><span class="line">t = threading.Thread(target=loop, name=&apos;LoopThread&apos;)</span><br><span class="line">t.start()</span><br><span class="line">t.join()</span><br><span class="line">print &apos;thread %s ended.&apos; % threading.current_thread().name</span><br></pre></td></tr></table></figure><p>任何进程默认就会启动一个线程，我们把该线程称为主线程，主线程又可以启动新的线程，Python的threading模块有个current_thread()函数，它永远返回当前线程的实例。主线程实例的名字叫MainThread，子线程的名字在创建时指定，我们用LoopThread命名子线程。名字仅仅在打印时用来显示，完全没有其他意义，如果不起名字Python就自动给线程命名为Thread-1，Thread-2……</p><h3 id="lock"><a class="markdownIt-Anchor" href="#lock"></a> Lock</h3><ul><li><p>多线程和多进程最大的不同在于，<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">- 锁的好处就是确保了某段关键代码只能由一个线程从头到尾完整地执行，坏处当然也很多，首先是阻止了多线程并发执行，包含锁的某段代码实际上只能以单线程模式执行，效率就大大地下降了。其次，由于可以存在多个锁，不同的线程持有不同的锁，并试图获取对方持有的锁时，可能会造成死锁，导致多个线程全部挂起，既不能执行，也无法结束，只能靠操作系统强制终止。</span><br><span class="line">&gt; 启动与CPU核心数量相同的N个线程，在4核CPU上可以监控到CPU占用率仅有160%，也就是使用不到两核。</span><br><span class="line"></span><br><span class="line">&gt; 即使启动100个线程，使用率也就170%左右，仍然不到两核。</span><br><span class="line"></span><br><span class="line">&gt; 但是用C、C++或Java来改写相同的死循环，直接可以把全部核心跑满，4核就跑到400%，8核就跑到800%，为什么Python不行呢？</span><br><span class="line"></span><br><span class="line">&gt; 因为Python的线程虽然是真正的线程，但解释器执行代码时，有一个GIL锁：```Global Interpreter Lock```，任何Python线程执行前，必须先获得GIL锁，然后，每执行100条字节码，解释器就自动释放GIL锁，让别的线程有机会执行。这个GIL全局锁实际上把所有线程的执行代码都给上了锁，所以，多线程在Python中只能交替执行，即使100个线程跑在100核CPU上，也只能用到1个核。</span><br><span class="line"></span><br><span class="line">&gt; GIL是Python解释器设计的历史遗留问题，通常我们用的解释器是官方实现的```CPython```，要真正利用多核，除非重写一个不带GIL的解释器。</span><br><span class="line"></span><br><span class="line">&gt; 所以，```在Python中，可以使用多线程，但不要指望能有效利用多核。```如果一定要通过多线程利用多核，那只能通过C扩展来实现，不过这样就失去了Python简单易用的特点。</span><br><span class="line"></span><br><span class="line">&gt; 不过，也不用过于担心，Python虽然不能利用多线程实现多核任务，但```可以通过多进程实现多核任务。多个Python进程有各自独立的GIL锁，互不影响```。</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">## ThreadLocal</span><br><span class="line">- 在多线程环境下，每个线程都有自己的数据。一个线程使用自己的局部变量比使用全局变量好，因为局部变量只有线程自己能看见，不会影响其他线程，而全局变量的修改必须加锁。</span><br><span class="line">```python</span><br><span class="line"></span><br><span class="line">import threading</span><br><span class="line"></span><br><span class="line"> # 创建全局ThreadLocal对象:</span><br><span class="line">local_school = threading.local()</span><br><span class="line"></span><br><span class="line">def process_student():</span><br><span class="line">    print &apos;Hello, %s (in %s)&apos; % (local_school.student, threading.current_thread().name)</span><br><span class="line"></span><br><span class="line">def process_thread(name):</span><br><span class="line">    # 绑定ThreadLocal的student:</span><br><span class="line">    local_school.student = name</span><br><span class="line">    process_student()</span><br><span class="line"></span><br><span class="line">t1 = threading.Thread(target= process_thread, args=(&apos;Alice&apos;,), name=&apos;Thread-A&apos;)</span><br><span class="line">t2 = threading.Thread(target= process_thread, args=(&apos;Bob&apos;,), name=&apos;Thread-B&apos;)</span><br><span class="line">t1.start()</span><br><span class="line">t2.start()</span><br><span class="line">t1.join()</span><br><span class="line">t2.join()</span><br></pre></td></tr></table></figure></p></li><li><p>全局变量local_school就是一个ThreadLocal对象，每个Thread对它都可以读写student属性，但互不影响。你可以把local_school看成全局变量，但每个属性如local_school.student都是线程的局部变量，可以任意读写而互不干扰，也不用管理锁的问题，ThreadLocal内部会处理。</p></li><li><p>可以理解为全局变量local_school是一个dict，不但可以用local_school.student，还可以绑定其他变量，如local_school.teacher等等。</p></li><li><p>ThreadLocal最常用的地方就是为每个线程绑定一个数据库连接，HTTP请求，用户身份信息等，这样一个线程的所有调用到的处理函数都可以非常方便地访问这些资源。</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;实现多任务，设计Master-Worker模式。通常是1个Master，多个worker。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;多进程（multiprocessing）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;多进程稳定性高，一个子进程崩溃了，不会影
      
    
    </summary>
    
      <category term="什么意思" scheme="http://Scofieldsu.github.io/categories/%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D/"/>
    
    
      <category term="python" scheme="http://Scofieldsu.github.io/tags/python/"/>
    
      <category term="进程" scheme="http://Scofieldsu.github.io/tags/%E8%BF%9B%E7%A8%8B/"/>
    
      <category term="线程" scheme="http://Scofieldsu.github.io/tags/%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>python(1):正则表达式</title>
    <link href="http://Scofieldsu.github.io/2015/08/08/python(1):%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://Scofieldsu.github.io/2015/08/08/python(1):正则表达式/</id>
    <published>2015-08-08T13:13:45.000Z</published>
    <updated>2018-08-21T18:28:48.336Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python1正则表达式"><a class="markdownIt-Anchor" href="#python1正则表达式"></a> python(1):正则表达式</h1><h3 id="1择一匹配符"><a class="markdownIt-Anchor" href="#1择一匹配符"></a> 1.择一匹配符  |</h3><p><em>例如：</em>  ab|home|you  匹配：at,home,you</p><h3 id="2匹配任意单个字符"><a class="markdownIt-Anchor" href="#2匹配任意单个字符"></a> 2.匹配任意单个字符  .</h3><p><em>例如：</em><br>f.o  匹配   fao，f9o，f#9等<br>…  匹配 任意两个字符</p><p><strong>注：</strong></p><ul><li>匹配除了换行符\n 以外的任意字符(python正则表达式有一个编译标记[s 或者DOTALL]，该标记能使点号匹配换行符)</li><li>匹配句点字符使用\.</li></ul><h3 id="3字符串起始-结尾-单词边界匹配"><a class="markdownIt-Anchor" href="#3字符串起始-结尾-单词边界匹配"></a> 3.字符串起始、结尾、单词边界匹配</h3><p>起始：^  或者 \A  (用于没有脱字符^的国际键盘)<br>结尾：$ 或者\Z<br>单词边界匹配：\b  或者 \B<br><em>例如：</em></p><ul><li>\b    匹配   任何以the开始的字符串</li><li>\bthe\b    仅仅匹配单词the</li><li>\Bthe     热恩和包含但并不以the作为起始的字符串</li></ul><h3 id="4创建字符集"><a class="markdownIt-Anchor" href="#4创建字符集"></a> 4.创建字符集</h3><p><em>例如：</em>   b[aiu]t      匹配   bat、bit、but</p><a id="more"></a><h3 id="5限定范围和否定"><a class="markdownIt-Anchor" href="#5限定范围和否定"></a> 5.限定范围和否定</h3><p><em>例如：</em>  z.[0-9] 、[r-u][env-y][us]、非元音[<sup>aeiou]、不匹配制表符或者\n[</sup>\t\n]、</p><h3 id="6使用闭包操作符实现存在性和频数匹配"><a class="markdownIt-Anchor" href="#6使用闭包操作符实现存在性和频数匹配"></a> 6.使用闭包操作符实现存在性和频数匹配  *  + ？</h3><p><em>例如：</em></p><ul><li>[dn]ot?    匹配  do、no、dot、not</li><li>0？[1-9]  匹配   一系列可能前置0的1～9的数值</li><li>[0~9]{15,16} 匹配15或者16个数字</li><li>&lt;/?[^&gt;]+&gt; 匹配全部有效的（和无效的）HTML标签</li></ul><h3 id="7字符集的特殊字符"><a class="markdownIt-Anchor" href="#7字符集的特殊字符"></a> 7.字符集的特殊字符</h3><p><em>例如：</em></p><ul><li>\d{3,4}-\d{7}  匹配区号为3或4位的电话号码</li><li>\w+@\<a href="http://w+.com" target="_blank" rel="noopener">w+.com</a>   匹配xxx@yyy.com</li></ul><h3 id="8使用圆括号指定分组"><a class="markdownIt-Anchor" href="#8使用圆括号指定分组"></a> 8.使用圆括号指定分组</h3><p>模式描述<br>^匹配字符串的开头<br>$匹配字符串的末尾。<br>.匹配任意字符，除了换行符，当re.DOTALL标记被指定时，则可以匹配包括换行符的任意字符。<br>[…]用来表示一组字符,单独列出：[amk] 匹配 ‘a’，‘m’或’k’<br>[^…]不在[]中的字符：[^abc] 匹配除了a,b,c之外的字符。<br>re*匹配0个或多个的表达式。<br>re+匹配1个或多个的表达式。<br>re?匹配0个或1个由前面的正则表达式定义的片段，非贪婪方式<br>re{ n}<br>re{ n,}精确匹配n个前面表达式。<br>re{ n, m}匹配 n 到 m 次由前面的正则表达式定义的片段，贪婪方式<br>a| b匹配a或b<br>(re)G匹配括号内的表达式，也表示一个组<br>(?imx)正则表达式包含三种可选标志：i, m, 或 x 。只影响括号中的区域。<br>(?-imx)正则表达式关闭 i, m, 或 x 可选标志。只影响括号中的区域。<br>(?: re)类似 (…), 但是不表示一个组<br>(?imx: re)在括号中使用i, m, 或 x 可选标志<br>(?-imx: re)在括号中不使用i, m, 或 x 可选标志<br>(?#…)注释.<br>(?= re)前向肯定界定符。如果所含正则表达式，以 … 表示，在当前位置成功匹配时成功，否则失败。但一旦所含表达式已经尝试，匹配引擎根本没有提高；模式的剩余部分还要尝试界定符的右边。<br>(?! re)前向否定界定符。与肯定界定符相反；当所含表达式不能在字符串当前位置匹配时成功<br>(?&gt; re)匹配的独立模式，省去回溯。<br>\w匹配字母数字及下划线<br>\W匹配非字母数字及下划线<br>\s匹配任意空白字符，等价于 [\t\n\r\f].<br>\S匹配任意非空字符<br>\d匹配任意数字，等价于 [0-9].<br>\D匹配任意非数字<br>\A匹配字符串开始<br>\Z匹配字符串结束，如果是存在换行，只匹配到换行前的结束字符串。c<br>\z匹配字符串结束<br>\G匹配最后匹配完成的位置。<br>\b匹配一个单词边界，也就是指单词和空格间的位置。例如， ‘er\b’ 可以匹配&quot;never&quot; 中的 ‘er’，但不能匹配 “verb” 中的 ‘er’。<br>\B匹配非单词边界。‘er\B’ 能匹配 “verb” 中的 ‘er’，但不能匹配 “never” 中的 ‘er’。<br>\n, \t, 等.匹配一个换行符。匹配一个制表符。等<br>\1…\9匹配第n个分组的子表达式。<br>\10匹配第n个分组的子表达式，如果它经匹配。否则指的是八进制字符码的表达式。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;python1正则表达式&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#python1正则表达式&quot;&gt;&lt;/a&gt; python(1):正则表达式&lt;/h1&gt;
&lt;h3 id=&quot;1择一匹配符&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1择一匹配符&quot;&gt;&lt;/a&gt; 1.择一匹配符  |&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;例如：&lt;/em&gt;  ab|home|you  匹配：at,home,you&lt;/p&gt;
&lt;h3 id=&quot;2匹配任意单个字符&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#2匹配任意单个字符&quot;&gt;&lt;/a&gt; 2.匹配任意单个字符  .&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;例如：&lt;/em&gt;&lt;br&gt;
f.o  匹配   fao，f9o，f#9等&lt;br&gt;
…  匹配 任意两个字符&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;匹配除了换行符\n 以外的任意字符(python正则表达式有一个编译标记[s 或者DOTALL]，该标记能使点号匹配换行符)&lt;/li&gt;
&lt;li&gt;匹配句点字符使用\.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;3字符串起始-结尾-单词边界匹配&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#3字符串起始-结尾-单词边界匹配&quot;&gt;&lt;/a&gt; 3.字符串起始、结尾、单词边界匹配&lt;/h3&gt;
&lt;p&gt;起始：^  或者 \A  (用于没有脱字符^的国际键盘)&lt;br&gt;
结尾：$ 或者\Z&lt;br&gt;
单词边界匹配：\b  或者 \B&lt;br&gt;
&lt;em&gt;例如：&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;\b    匹配   任何以the开始的字符串&lt;/li&gt;
&lt;li&gt;\bthe\b    仅仅匹配单词the&lt;/li&gt;
&lt;li&gt;\Bthe     热恩和包含但并不以the作为起始的字符串&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;4创建字符集&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#4创建字符集&quot;&gt;&lt;/a&gt; 4.创建字符集&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;例如：&lt;/em&gt;   b[aiu]t      匹配   bat、bit、but&lt;/p&gt;
    
    </summary>
    
      <category term="什么意思" scheme="http://Scofieldsu.github.io/categories/%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D/"/>
    
    
      <category term="正则表达式" scheme="http://Scofieldsu.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>安装node.js和hexo</title>
    <link href="http://Scofieldsu.github.io/2015/07/15/%E5%AE%89%E8%A3%85node-js%E5%92%8Chexo/"/>
    <id>http://Scofieldsu.github.io/2015/07/15/安装node-js和hexo/</id>
    <published>2015-07-14T17:28:42.000Z</published>
    <updated>2018-08-21T18:31:15.486Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装nodejs之前如果没有安装g及-libssl-dev则先要安装好安装方法如下"><a class="markdownIt-Anchor" href="#安装nodejs之前如果没有安装g及-libssl-dev则先要安装好安装方法如下"></a> 安装nodeJS之前，如果没有安装g++及 libssl-dev，则先要安装好，安装方法如下：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install g++</span><br><span class="line">sudo apt-get install libssl-dev</span><br></pre></td></tr></table></figure><h3 id="接下来就可以下载安装nodejs了目前稳定版本为-nodejs-0618下面是安装步骤"><a class="markdownIt-Anchor" href="#接下来就可以下载安装nodejs了目前稳定版本为-nodejs-0618下面是安装步骤"></a> 接下来，就可以下载安装nodeJS了，目前稳定版本为 Node.js 0.6.18，下面是安装步骤：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http://nodejs.org/dist/v0.8.16/node-v0.8.16.tar.gz</span><br><span class="line">tar zxvf node-v0.8.16.tar.gz</span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h3 id="安装好后在-控制台下输入"><a class="markdownIt-Anchor" href="#安装好后在-控制台下输入"></a> 安装好后，在 控制台下输入：</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">v0.8.16</span><br><span class="line">即可看到安装好的nodeJS版本号</span><br></pre></td></tr></table></figure><hr><a id="more"></a><h3 id="更新版本"><a class="markdownIt-Anchor" href="#更新版本"></a> 更新版本</h3><p>node有一个模块叫n，是专门用来管理node.js的版本的。</p><ul><li>首先安装n模块：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g n</span><br></pre></td></tr></table></figure><ul><li>第二步：<br>升级node.js到最新稳定版</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo n stable</span><br></pre></td></tr></table></figure><ol><li>安装Hexo</li></ol><p>Hexo是基于 NodeJS ，所以需要先安装NodeJS。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><ol start="2"><li>初始化框架</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;yourFolder&gt;</span><br><span class="line">cd &lt;yourFolder&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>安装依赖</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><ol start="4"><li>初始化完成大概的目录：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml //网站的`配置`信息，您可以在此配置大部分的参数。</span><br><span class="line">├── package.json</span><br><span class="line">├── db.json // json格式的静态常量数据库</span><br><span class="line">├── node_modules // Hexo的功能JavaScript文件</span><br><span class="line">├── public // 生成静态网页文件</span><br><span class="line">├── scaffolds //模版文件夹。当您新建文章时，Hexo会根据scaffold来建立文件。</span><br><span class="line">├── source //资源文件夹是存放用户资源的地方。</span><br><span class="line">| ├── _drafts // 草稿文件夹</span><br><span class="line">| └── _posts // 文章文件夹</span><br><span class="line">└── themes //主题文件夹。Hexo会根据主题来生成静态页面。</span><br></pre></td></tr></table></figure><ol start="5"><li>新建文章（创建一个Hello World）</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &lt;title&gt; for example: "Hello World"</span><br></pre></td></tr></table></figure><ul><li><p>在/source/_post里添加hello-world.md文件，之后新建的文章都将存放在此目录下。</p></li><li><p>如果要删除，直接在此文件夹下删除对应的文件即可。</p></li></ul><ol start="6"><li>生成网站</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p>此时会将/source的.md文件生成到/public中，形成网站的静态文件。</p><ol start="7"><li>服务器</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server -p 3000</span><br></pre></td></tr></table></figure><p>输入 http://localhost:3000即可查看网站。</p><ol start="8"><li>部署网站</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>该操作会将hexo生成的静态内容部署到配置的仓库中，请看下面介绍。</p><p>部署网站之前需要生成静态文件，即可以用 $ hexo generate -d 直接生成并部署。</p><p>此时需要在 _config.yml 中配置你所要部署的站点：</p><h2 id="docs-httphexoiodocsdeploymenthtml"><a class="markdownIt-Anchor" href="#docs-httphexoiodocsdeploymenthtml"></a> Docs: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="noopener">http://hexo.io/docs/deployment.html</a></h2><p>deploy:<br>type: git<br>repo: <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:YourRepository.git<br>branch: master<br>如果没有意外，部署就成功了，可以打开 http://&lt;用户名&gt;.github.io 查看。</p><h3 id="常用hexo命令"><a class="markdownIt-Anchor" href="#常用hexo命令"></a> 常用Hexo命令</h3><p>清除生成内容</p><blockquote><p>hexo c == hexo clean<br>执行此操作会删除 public 文件夹中的内容。</p></blockquote><blockquote><p>hexo g == hexo generate<br>hexo s == hexo server</p></blockquote><h3 id="五-使用next主题让站点更酷炫"><a class="markdownIt-Anchor" href="#五-使用next主题让站点更酷炫"></a> 五、使用Next主题让站点更酷炫</h3><ol><li>使用NexT Theme</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd your-hexo-site</span><br><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>从Next的Gihub仓库中获取最新版本。</p><ol start="2"><li>Hexo NexT主题的文档结构</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">/languages #用来配置国际化语言版本，里边包含各种个配置像的文本翻译。</span><br><span class="line">/layout #以swig文件来定义各种含有配置信息调用的布局</span><br><span class="line">/scripts #一些JS脚本</span><br><span class="line">/source</span><br><span class="line">/css #用来修改自定义样式，需要掌握一定的css语法。</span><br><span class="line">/fonts #定义字体文件，可以修改博客字体</span><br><span class="line">/images #一些svg图片</span><br><span class="line">/js #一些js脚本</span><br><span class="line">/vendors</span><br><span class="line">/404.html #自定义的公益404页面</span><br><span class="line">/test #用于测试</span><br></pre></td></tr></table></figure><ol start="3"><li>启用NexT主题</li></ol><p>需要修改/root/_config.yml配置项theme：</p><h1 id="extensions"><a class="markdownIt-Anchor" href="#extensions"></a> Extensions</h1><h2 id="plugins-httphexoioplugins"><a class="markdownIt-Anchor" href="#plugins-httphexoioplugins"></a> Plugins: <a href="http://hexo.io/plugins/" target="_blank" rel="noopener">http://hexo.io/plugins/</a></h2><h2 id="themes-httphexoiothemes"><a class="markdownIt-Anchor" href="#themes-httphexoiothemes"></a> Themes: <a href="http://hexo.io/themes/" target="_blank" rel="noopener">http://hexo.io/themes/</a></h2><p>theme: next</p><ol start="4"><li>验证是否启用</li></ol><blockquote><p>hexo s --debug</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装nodejs之前如果没有安装g及-libssl-dev则先要安装好安装方法如下&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#安装nodejs之前如果没有安装g及-libssl-dev则先要安装好安装方法如下&quot;&gt;&lt;/a&gt; 安装nodeJS之前，如果没有安装g++及 libssl-dev，则先要安装好，安装方法如下：&lt;/h3&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install g++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install libssl-dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;接下来就可以下载安装nodejs了目前稳定版本为-nodejs-0618下面是安装步骤&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#接下来就可以下载安装nodejs了目前稳定版本为-nodejs-0618下面是安装步骤&quot;&gt;&lt;/a&gt; 接下来，就可以下载安装nodeJS了，目前稳定版本为 Node.js 0.6.18，下面是安装步骤：&lt;/h3&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget http://nodejs.org/dist/v0.8.16/node-v0.8.16.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar zxvf node-v0.8.16.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./configure&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make &amp;amp;&amp;amp; make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;安装好后在-控制台下输入&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#安装好后在-控制台下输入&quot;&gt;&lt;/a&gt; 安装好后，在 控制台下输入：&lt;/h3&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;node -v&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;v0.8.16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;即可看到安装好的nodeJS版本号&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="有点意思" scheme="http://Scofieldsu.github.io/categories/%E6%9C%89%E7%82%B9%E6%84%8F%E6%80%9D/"/>
    
    
      <category term="node.js" scheme="http://Scofieldsu.github.io/tags/node-js/"/>
    
      <category term="hexo" scheme="http://Scofieldsu.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
