<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Scofieldyu</title>
  
  <subtitle>高筑墙-广积粮-缓称王</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://Scofieldsu.github.io/"/>
  <updated>2022-01-17T05:41:54.644Z</updated>
  <id>http://Scofieldsu.github.io/</id>
  
  <author>
    <name>俞 元</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于画图那些事儿</title>
    <link href="http://Scofieldsu.github.io/2018/11/02/%E5%85%B3%E4%BA%8E%E7%94%BB%E5%9B%BE%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/"/>
    <id>http://Scofieldsu.github.io/2018/11/02/关于画图那些事儿/</id>
    <published>2018-11-01T19:09:23.000Z</published>
    <updated>2022-01-17T05:41:54.644Z</updated>
    
    <content type="html"><![CDATA[<p>作为一个程序员要画啥图？UML类图？时序图？流程图？系统架构图？<br />不仅仅如此，有时候我还会用思维导图记录一些东西</p><ul><li>大学时期画的一个类图😷</li></ul><p><img src="https://github.com/Scofieldsu/Image_hosting/blob/master/blog/psb.jpeg?raw=true" alt="不知道是什么系统的类图" /></p><p>画图工具千千万，在此分享我常用的几个画图工具，大家有更好的工具分享可以留言补充。</p><ul><li><p><a href="https://www.processon.com/">processon</a> 是一个可以在线画图的网站,包括但不限于流程图/时序图/架构图。</p></li><li><p><a href="https://www.draw.io/">draw.io</a> 也可以在线画图。</p><ul><li><p>代码开源：<a href="https://github.com/jgraph/drawio">github-drawio</a></p></li><li><p>客户端下载：<a href="https://github.com/jgraph/drawio-desktop/releases">drawio-desktop</a></p></li><li><p>drawio默认没有aliyun的icon，但可以在<a href="http://iconfont.cn/home/index">iconfont</a>找到aliyun的icon，先和icon版权作者联系。这个<a href="https://github.com/jgraph/drawio/issues/326">issue</a>里有提到。</p></li></ul></li><li><p>xmind 思维导图客户端。</p><ul><li><p>思维导图用于整理需求功能点比较方便。</p></li><li><p>xmind个人版只能导出图片和svg file。 pro版本可以导出pdf，excel，word，而且pro版本风格更多。</p></li></ul></li><li><p><a href="https://coggle.it/">coggle</a> 在线思维导图</p><p>示例：<br /><img src="https://github.com/Scofieldsu/Image_hosting/blob/master/blog/Snip20181102_1.png?raw=true" alt="coggle" /></p></li><li><p>visio使用过，但不习惯。 axure试用了一下，临时想画原型图，但因素材组件不合适放弃，改用xmind描述功能点。</p></li></ul><hr /><h3 id="搭建你自己的在线画图应用"><a class="markdownIt-Anchor" href="#搭建你自己的在线画图应用"></a> 搭建你自己的在线画图应用</h3><ul><li>出于收费软件还是开源软件，在线还是离线，个人还是办公，安全规定等等因素,我们选用了开源的drawio,两种方式搭建任选。</li></ul><h4 id="1-编译部署-在此不介绍有兴趣网上查询"><a class="markdownIt-Anchor" href="#1-编译部署-在此不介绍有兴趣网上查询"></a> 1. 编译部署 在此不介绍，有兴趣网上查询</h4><h4 id="2-docker部署"><a class="markdownIt-Anchor" href="#2-docker部署"></a> 2. docker部署</h4><p>关于docker环境安装 参考我的另一篇<a href="https://hush-1.info/2017/05/08/%E7%8E%A9%E4%B8%80%E7%8E%A9docker/">玩一玩docker</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">git clone https://github.com/jgraph/drawio.git</span><br><span class="line"></span><br><span class="line">2</span><br><span class="line">cd drawio</span><br><span class="line">docker build -t drawio -f etc/docker/Dockerfile .</span><br><span class="line"></span><br><span class="line">3</span><br><span class="line">docker run -d -p 8080:8080 --restart=always --hostname=drawio --name drawio drawio</span><br><span class="line"></span><br><span class="line">即可访问http://xxxx:8080/draw</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;作为一个程序员要画啥图？UML类图？时序图？流程图？系统架构图？&lt;br /&gt;
不仅仅如此，有时候我还会用思维导图记录一些东西&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;大学时期画的一个类图😷&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/Scofi
      
    
    </summary>
    
      <category term="编程" scheme="http://Scofieldsu.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="流程图" scheme="http://Scofieldsu.github.io/tags/%E6%B5%81%E7%A8%8B%E5%9B%BE/"/>
    
      <category term="架构图" scheme="http://Scofieldsu.github.io/tags/%E6%9E%B6%E6%9E%84%E5%9B%BE/"/>
    
      <category term="思维导图" scheme="http://Scofieldsu.github.io/tags/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>关于黎曼猜想&amp;哥德巴赫猜想&amp;质数的神秘</title>
    <link href="http://Scofieldsu.github.io/2018/11/01/%E5%85%B3%E4%BA%8E%E9%BB%8E%E6%9B%BC%E7%8C%9C%E6%83%B3&amp;%E5%93%A5%E5%BE%B7%E5%B7%B4%E8%B5%AB%E7%8C%9C%E6%83%B3&amp;%E8%B4%A8%E6%95%B0%E7%9A%84%E7%A5%9E%E7%A7%98/"/>
    <id>http://Scofieldsu.github.io/2018/11/01/关于黎曼猜想&amp;哥德巴赫猜想&amp;质数的神秘/</id>
    <published>2018-10-31T17:00:29.000Z</published>
    <updated>2022-01-17T05:46:08.536Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">黎曼猜想</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="-code1-"><a class="markdownIt-Anchor" href="#-code1-"></a> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">哥德巴赫猜想</span><br><span class="line"></span><br><span class="line">任一大于2的偶数，都可表示成两个素数之和。</span><br><span class="line"></span><br></pre></td></tr></table></figure></h2><p>从欧拉乘积<br />到调和级数<br />再到黎曼函数。</p><p>为什么<br />当s=-1时，</p><p>当s=2时，</p><hr /><ul><li><p>欧式几何</p></li><li><p>罗氏几何</p></li><li><p>黎曼几何</p></li></ul> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">23条定义</span><br><span class="line">1. 点是没有部分的东西</span><br><span class="line">2.线只有长度而没有宽度</span><br><span class="line">3.一线的两端是点</span><br><span class="line">4.直线是它上面的点一样地平放着的线</span><br><span class="line">5.面只有长度和宽度</span><br><span class="line">6.面的边缘是线</span><br><span class="line">7.平面是它上面的线一样地平放着的面</span><br><span class="line">8. 平面角是在一平面内但不在一条直线上的两条相交线相互的倾斜度.</span><br><span class="line">9. 当包含角的两条线都是直线时，这个角叫做直线角.</span><br><span class="line">10. 当一条直线和另一条直线交成邻角彼此相等时，这些角每一个被叫做直角，而且称这一条直线垂直于另一条直线。</span><br><span class="line">11. 大于直角的角称为钝角。</span><br><span class="line">12. 小于直角的角称为锐角</span><br><span class="line">13. 边界是物体的边缘</span><br><span class="line">14. 图形是一个边界或者几个边界所围成的</span><br><span class="line">15. 圆：由一条线包围着的平面图形，其内有一点与这条线上任何一个点所连成的线段都相等。</span><br><span class="line">16. 这个点（指定义15中提到的那个点）叫做圆心。</span><br><span class="line">17. 圆的直径是任意一条经过圆心的直线在两个方向被圆截得的线段，且把圆二等分。</span><br><span class="line">18.半圆是直径与被它切割的圆弧所围成的图形，半圆的圆心与原圆心相同。（暂无注释）</span><br><span class="line">19.直线形是由直线围成的.三边形是由三条直线围成的,四边形是由四条直线围成的,多边形是由四条以上直线围成的.</span><br><span class="line">20.在三边形中,三条边相等的,叫做等边三角形;只有两条边相等的,叫做等腰三角形;各边不等的,叫做不等边三角形.</span><br><span class="line">21.此外,在三边形中,有一个角是直角的,叫做直角三角形;有一个角是钝角的,叫做钝角三角形;各边不等的,叫做不等边三角形.</span><br><span class="line">22.在四边形中,四边相等且四个角是直角的,叫做正方形;角是直角,但四边不全相等的,叫做长方形;四边相等,但角不是直角的,叫做菱形;对角相等且对边相等,但边不全相等且角不是直角的,叫做斜方形;其余的四边形叫做不规则四边形.</span><br><span class="line">23.平行直线是在同一个平面内向两端无限延长不能相交的直线.</span><br><span class="line">五条公理</span><br><span class="line">1.等于同量的量彼此相等；</span><br><span class="line">2.等量加等量，其和相等；</span><br><span class="line">3.等量减等量，其差相等；</span><br><span class="line">4.彼此能重合的物体是全等的；</span><br><span class="line">5.整体大于部分。</span><br><span class="line">五条公设　　</span><br><span class="line">1.过两点能作且只能作一直线；</span><br><span class="line">2.线段(有限直线)可以无限地延长；</span><br><span class="line">3.以任一点为圆心,任意长为半径,可作一圆；</span><br><span class="line">4.凡是直角都相等；</span><br><span class="line">5.同平面内一条直线和另外两条直线相交，若在直线同侧的两个内角之和小于180°，则这两条直线经无限延长后在这一侧一定相交。（近代数学不区分公设，公理，统一称为公理）</span><br><span class="line">最后一条公设就是著名的平行公设，或者叫做第五公设。它引发了几何史上最著名的长达两千多年的关于“平行线理论”的讨论，并最终诞生了非欧几何。值得注意的是，第五公设既不能说是正确也不能说是错误，它所概括的是一种情况。非欧几何则在推翻第五公设的前提下进行了另外情况的讨论。</span><br><span class="line">——以上选自《几何原本》 第一卷《几何基础》</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c
      
    
    </summary>
    
      <category term="探索" scheme="http://Scofieldsu.github.io/categories/%E6%8E%A2%E7%B4%A2/"/>
    
    
      <category term="黎曼猜想" scheme="http://Scofieldsu.github.io/tags/%E9%BB%8E%E6%9B%BC%E7%8C%9C%E6%83%B3/"/>
    
      <category term="欧拉" scheme="http://Scofieldsu.github.io/tags/%E6%AC%A7%E6%8B%89/"/>
    
      <category term="哥德巴赫猜想" scheme="http://Scofieldsu.github.io/tags/%E5%93%A5%E5%BE%B7%E5%B7%B4%E8%B5%AB%E7%8C%9C%E6%83%B3/"/>
    
      <category term="陈景润" scheme="http://Scofieldsu.github.io/tags/%E9%99%88%E6%99%AF%E6%B6%A6/"/>
    
      <category term="质数" scheme="http://Scofieldsu.github.io/tags/%E8%B4%A8%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>感同身受的造梦空间</title>
    <link href="http://Scofieldsu.github.io/2018/10/23/%E6%84%9F%E5%90%8C%E8%BA%AB%E5%8F%97%E7%9A%84%E9%80%A0%E6%A2%A6%E7%A9%BA%E9%97%B4/"/>
    <id>http://Scofieldsu.github.io/2018/10/23/感同身受的造梦空间/</id>
    <published>2018-10-22T16:01:40.000Z</published>
    <updated>2022-01-17T05:43:17.722Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">把所有的懒于写作都归咎于那件事 --《我最好的朋友死了》。</span><br><span class="line"></span><br><span class="line">对曾经的我来说，写作是一件让我快乐的事情，不同于现在记笔记的快乐，</span><br><span class="line">笔记在于记录，写作在于创作。</span><br><span class="line">从某种意义上来说，写作也属于记录，记录你的思想和属于你的那一瞬间的灵感。</span><br><span class="line"></span><br><span class="line">大学的时候写过几万字的流水账随笔，那时很迷畅销文学读物，</span><br><span class="line">比如光线传媒刘同的《你的孤独虽败犹荣》，《谁的青春不迷茫》。</span><br><span class="line">那时候觉得他写的很多话都戳中我心里的相同的感受。</span><br><span class="line">也是从他书中了解到一本书的几十万字是从他长年累月的几百万字的写作中挑选出来的。</span><br><span class="line"></span><br><span class="line">我不写了，因为纠结和愤怒。</span><br><span class="line">我看辩论赛会觉得双方都对，自己说出的话会经常被自己从另一个方面切入的观点反驳，</span><br><span class="line">该如何把一些想表述的观点说清楚呢。</span><br><span class="line">显然能力不够的我连把一个观点阐述清楚都不能，索性不写。</span><br><span class="line">因为“最好的朋友死了”，我带着一种天然的愤怒，</span><br><span class="line">在看待一些事情时，已经先入为主的有了想法，</span><br><span class="line">有失公正，也索性不写，甚至不要发表任何观点，自带反驳自己的这种被动技能，</span><br><span class="line">再加上愤怒的不公正，会无限循环下去。</span><br><span class="line">一但发表不公正的观点，就会被自己抓到把柄进行反驳自己。</span><br><span class="line"></span><br><span class="line">只是不写而已，但火花还是会时不时的冒出来。该如何保存呢？文字有时是乏力的。</span><br><span class="line">虽然有时你听到一句歌词而感动，因为它写出了你的感受；</span><br><span class="line">有时候看一本小说而开心，因为它带给你前所未有的震撼的体验。</span><br><span class="line">但有时你也会因为与人沟通不合而头疼。</span><br><span class="line">每个人都有自己的沟通频率，但日常生活中的沟通不需要完全匹配。</span><br><span class="line">知己则是频率完全匹配的人。</span><br><span class="line"></span><br><span class="line">但我仍然觉得不够。我很贪婪，我希望有一种造梦的技能。</span><br><span class="line">我用这种技能生产一个个的梦，是我的不同感受。</span><br><span class="line">再让接受者直接身临其境的体验梦中的情景，亲身经历，感同身受。</span><br><span class="line">这不同于所谓的“意识交流”，如果意识交流真的普遍存在的话。</span><br><span class="line">这似乎比意识交流低级一点，</span><br><span class="line">需要一个中间产物（你用自身感受造出的梦）来传递，但能够完全保真。</span><br><span class="line"></span><br><span class="line">如果真有感同身受的造梦能力，是不是可以少一些沟通障碍，</span><br><span class="line">对于频率不匹配的人，你要清楚的描述一个东西，一个想法，立刻造一个梦给他。</span><br><span class="line">又或是洗澡时迸发出来的一个灵感，不用纸笔文字记录，造一个梦保存。</span><br><span class="line">这样你在看自己曾经的日记时就不会觉得幼稚了，因为日记只是文字记录，</span><br><span class="line">但如果当时保存了一个梦，你再次回顾时，是以那个年龄和经历去感同身受的。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
      <category term="写作" scheme="http://Scofieldsu.github.io/categories/%E5%86%99%E4%BD%9C/"/>
    
    
      <category term="感同身受" scheme="http://Scofieldsu.github.io/tags/%E6%84%9F%E5%90%8C%E8%BA%AB%E5%8F%97/"/>
    
  </entry>
  
  <entry>
    <title>字节序的大小端模式-字节与基础类型的转换</title>
    <link href="http://Scofieldsu.github.io/2018/10/20/%E5%85%B3%E4%BA%8E%E5%AD%97%E8%8A%82%E5%BA%8F%E7%9A%84%E5%A4%A7%E5%B0%8F%E7%AB%AF%E6%A8%A1%E5%BC%8F-%E5%AD%97%E8%8A%82%E4%B8%8E%E5%9F%BA%E7%A1%80%E7%B1%BB%E5%9E%8B%E7%9A%84%E8%BD%AC%E6%8D%A2/"/>
    <id>http://Scofieldsu.github.io/2018/10/20/关于字节序的大小端模式-字节与基础类型的转换/</id>
    <published>2018-10-19T18:13:45.000Z</published>
    <updated>2022-01-17T05:41:12.289Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>字节序 与 字节对齐</p></li><li><p>java基础类型与字节类型转换</p><ul><li><p>2.1 struct ==》 字节类型</p></li><li><p>2.2 基础类型  ==》 字节类型</p></li><li><p>2.3 字节类型  ==》 基础类型</p></li></ul></li><li><p>python使用ctypes调用c处理字节</p></li></ol><hr /><p>1.1  字节序</p><ul><li><p><strong>大端字节序(Big-Endian)</strong>：高位字节在内存的低地址，低位字节在内存的高地址，这是人类读写数值的方法。</p></li><li><p><strong>小端字节序(Little-Endian)</strong>：低位字节在内存的低地址，高位字节在内存的高地址，计算机的内部处理大部分是小端字节序。计算机电路先处理低位字节，效率比较高，因为计算都是从低位开始的。</p></li></ul>   <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">示例： 0x01234567</span><br><span class="line"></span><br><span class="line"> 大端模式：</span><br><span class="line">    地址： 0x0001    0x0002   0x0003   0x0004</span><br><span class="line">    数据： 01         23        45       67</span><br><span class="line"></span><br><span class="line"> 小端模式：</span><br><span class="line">    地址： 0x0001    0x0002   0x0003   0x0004</span><br><span class="line">    数据： 67         45        23       01</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>在C语言中，默认是小端（但在一些对于单片机的实现中却是基于大端，比如Keil 51C），Java是平台无关的，默认是大端。在网络上传输数据普遍采用的都是大端。</p></blockquote><p>1.2 字节对齐</p><blockquote><p>对于char型数据，其自身对齐值为1，对于short型为2，对于int,float类型，其自身对齐值为4，对于double型，其自身对齐值为8，单位字节。</p></blockquote><blockquote><p>需要字节对齐的根本原因在于CPU访问数据的效率问题.</p></blockquote><blockquote><p>gcc中结构体默认是4个字节对齐，即为32的倍数</p></blockquote><p>先看个简单的例子(32位，X86处理器，GCC编译器)：</p>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">A</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span>    a;</span><br><span class="line">    <span class="keyword">char</span>   b;</span><br><span class="line">    <span class="keyword">short</span>  c;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">B</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span>   b;</span><br><span class="line">    <span class="keyword">int</span>    a;</span><br><span class="line">    <span class="keyword">short</span>  c;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>结果是：sizeof(strcut A)值为8；sizeof(struct B)的值却是12。</p><p>结构体A中包含一个4字节的int数据，一个1字节char数据和一个2字节short数据；B也一样。按理说A和B大小应该都是7字节。之所以出现上述结果，就是因为编译器要对数据成员在空间上进行对齐。</p><p>对于标准数据类型，它的地址只要是它的长度的整数倍就行了，而非标准数据类型按下面的原则对齐：</p><ul><li><p>数组 ：按照基本数据类型对齐，第一个对齐了后面的自然也就对齐了。</p></li><li><p>联合 ：按其包含的长度最大的数据类型对齐。</p></li><li><p>结构体： 结构体中每个数据类型都要对齐。</p></li></ul><pre><code>__attribute((aligned (n)))，让所作用的结构成员对齐在n字节自然边界上。如果结构中有成员的长度大于n，则按照最大成员的长度来对齐。__attribute__ ((packed))，取消结构在编译过程中的优化对齐，按照实际占用字节数进行对齐。</code></pre><hr /><p>2.1  java 使用struct的ByteBuffer转换为字节</p><h2 id="-code2-这里使用struct的无符号类型unsigned然后用bytebuffer获取对应位置的字节存储到byte-中-但对于需要动态生成struct的地方不太适合于是使用下面的方法依次获取数据的字节数组然后按照顺序连接为一个byte"><a class="markdownIt-Anchor" href="#-code2-这里使用struct的无符号类型unsigned然后用bytebuffer获取对应位置的字节存储到byte-中-但对于需要动态生成struct的地方不太适合于是使用下面的方法依次获取数据的字节数组然后按照顺序连接为一个byte"></a> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoStruct</span> <span class="keyword">extends</span> <span class="title">Struct</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    Unsigned8 a = <span class="keyword">new</span> Unsigned8();</span><br><span class="line">    Unsigned16 b = <span class="keyword">new</span> Unsigned16();</span><br><span class="line">    Unsigned32 c = <span class="keyword">new</span> Unsigned32();</span><br><span class="line">    UTF8String d = <span class="keyword">new</span> UTF8String(<span class="number">12</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 取消优化对齐</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPacked</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置为小端数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ByteOrder <span class="title">byteOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ByteOrder.LITTLE_ENDIAN;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">byte</span>[] getBytes()&#123;</span><br><span class="line">        <span class="keyword">this</span>.isPacked();</span><br><span class="line">        ByteBuffer buff = <span class="keyword">this</span>.getByteBuffer();</span><br><span class="line">        buff.order(<span class="keyword">this</span>.byteOrder());</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[buff.capacity()];</span><br><span class="line">        IntStream.range(<span class="number">0</span>, buff.capacity()).forEach(i -&gt; bytes[i] = buff.get(i));</span><br><span class="line">        <span class="comment">// Base64.getEncoder().encodeToString(bytes)</span></span><br><span class="line">        <span class="keyword">return</span> bytes;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br />- 这里使用struct的无符号类型(unsigned)，然后用ByteBuffer获取对应位置的字节，存储到byte[] 中。<br />- 但对于需要动态生成struct的地方不太适合，于是使用下面的方法依次获取数据的字节数组，然后按照顺序连接为一个byte[]。</h2><p>2.2  基础类型 转换 byte[]</p><ul><li>String 转换byte[]，可以使用String的getBytes()</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] getStringBytes(String data,<span class="keyword">int</span> length)&#123;</span><br><span class="line">    <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[length];</span><br><span class="line">    <span class="keyword">byte</span>[] srcByte = data.getBytes();</span><br><span class="line">    byteCopy(srcByte,bytes);</span><br><span class="line">    <span class="keyword">return</span> bytes;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>对于其他没有getBytes()方法的基本数据类型，例如：大端序 int转换byte[]</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] getIntBytes(<span class="keyword">int</span> data) &#123;</span><br><span class="line">ByteBuffer buffer = ByteBuffer.allocate(<span class="number">4</span>);</span><br><span class="line">buffer.order(ByteOrder.BIG_ENDIAN);</span><br><span class="line">buffer.putInt(data);</span><br><span class="line"><span class="keyword">byte</span>[] bytes = buffer.array();</span><br><span class="line"><span class="keyword">return</span> bytes;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>java文档中java.nio.ByteBuffer 有putInt,putChar,putShort,putFloat,putDouble,putLong等方法，但在使用过程中遇到问题:</li></ul><blockquote><p>对于定义的unsigned32的数据，需要获取4个字节的byte[]. unsigned32最大值(2^32)-1 =4294967295大于int的取值范围(-(2^31 ),(2^31 )-1)，于是转换为Long使用putLong.但putLong默认写入8个byte. 当ByteBuffer.allocate(4)，再putLong时报错 buffer overflow exception。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> ByteBuffer <span class="title">putLong</span><span class="params">(<span class="keyword">long</span> value)</span></span></span><br><span class="line"><span class="function">Relative put method <span class="keyword">for</span> writing a <span class="keyword">long</span> <span class="title">value</span>  <span class="params">(optional operation)</span>.</span></span><br><span class="line"><span class="function">Writes eight bytes containing the given <span class="keyword">long</span> value, in the current <span class="keyword">byte</span> order,</span></span><br><span class="line"><span class="function">into <span class="keyword">this</span> buffer at the current position, and then increments the position by eight.</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">Parameters:</span></span><br><span class="line"><span class="function">value - The <span class="keyword">long</span> value to be written</span></span><br><span class="line"><span class="function">Returns:</span></span><br><span class="line"><span class="function">This buffer</span></span><br><span class="line"><span class="function">Throws:</span></span><br><span class="line"><span class="function">BufferOverflowException - If there are fewer than eight bytes remaining in <span class="keyword">this</span> buffer</span></span><br><span class="line"><span class="function">ReadOnlyBufferException - If <span class="keyword">this</span> buffer is read-only</span></span><br></pre></td></tr></table></figure><p>于是采用二进制移位运算：</p><h2 id="-code6-"><a class="markdownIt-Anchor" href="#-code6-"></a> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 小端序</span></span><br><span class="line"><span class="comment">//内存的低地址 存储 数据的低位字节</span></span><br><span class="line"><span class="comment">// 则bytes[0] 存储 data &amp; (1111 1111)</span></span><br><span class="line"><span class="comment">// bytes[1]  存储  data 右移8位 再 &amp;1111 1111</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] getLongBytesBig(<span class="keyword">long</span> data,<span class="keyword">int</span> length) &#123;</span><br><span class="line">   <span class="comment">// 设置length=4</span></span><br><span class="line">    <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[length];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">        bytes[i] = (<span class="keyword">byte</span>) ((data &gt;&gt; (i*<span class="number">8</span>)) &amp; <span class="number">0xff</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> bytes;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//大端序</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] getLongBytesLittle(<span class="keyword">long</span> data,<span class="keyword">int</span> length) &#123;</span><br><span class="line">   <span class="comment">// 设置length=4</span></span><br><span class="line">    <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[length];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">        bytes[i] = (<span class="keyword">byte</span>) ((data &gt;&gt; ((length-<span class="number">1</span>-i)*<span class="number">8</span>)) &amp; <span class="number">0xff</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> bytes;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></h2><p>2.3  字节流 转换java 基本数据类型</p><p>2.3.1  使用ByteBuffer自带的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getInt</span><span class="params">(<span class="keyword">byte</span>[] bytes)</span> </span>&#123;</span><br><span class="line">ByteBuffer buffer = ByteBuffer.allocate(bytes.length);</span><br><span class="line">buffer.order(ByteOrder.BIG_ENDIAN);</span><br><span class="line">buffer.put(bytes);</span><br><span class="line"><span class="keyword">int</span> result = buffer.getInt(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.3.2 移位运算</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getInt</span><span class="params">(<span class="keyword">byte</span>[] bytes)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> result = (<span class="keyword">int</span>) ((<span class="number">0xff</span> &amp; bytes[<span class="number">0</span>])</span><br><span class="line">| ((<span class="number">0xff</span> &amp; bytes[<span class="number">1</span>]) &lt;&lt; <span class="number">8</span>)</span><br><span class="line">| ((<span class="number">0xff</span> &amp; bytes[<span class="number">2</span>]) &lt;&lt; <span class="number">16</span>)</span><br><span class="line">| ((<span class="number">0xff</span> &amp; bytes[<span class="number">3</span>]) &lt;&lt; <span class="number">24</span>));</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr /><ol start="3"><li>python 使用ctypes 调用c 处理字节</li></ol><ul><li>demodata.c</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> __<span class="title">attribute__</span>((<span class="title">packed</span>)) <span class="title">DemoData</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">uint8_t</span> a;        </span><br><span class="line"><span class="keyword">uint16_t</span> b;    </span><br><span class="line"><span class="keyword">uint32_t</span> c;      </span><br><span class="line"><span class="keyword">char</span> d[<span class="number">12</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span> * <span class="title">get_data</span><span class="params">(<span class="keyword">int</span> int_param[<span class="number">3</span>],<span class="keyword">char</span> * str_param[<span class="number">1</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> * data_result;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">DemoData</span> *<span class="title">t</span> =</span> (struct DemoData*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct DemoData));</span><br><span class="line">bzero(t, <span class="keyword">sizeof</span>(struct DemoData));</span><br><span class="line"></span><br><span class="line"><span class="comment">//init</span></span><br><span class="line">t-&gt;a = int_param[<span class="number">0</span>];</span><br><span class="line">t-&gt;b = int_param[<span class="number">1</span>];</span><br><span class="line">t-&gt;c = int_param[<span class="number">2</span>];</span><br><span class="line"><span class="built_in">strncpy</span>(t-&gt;d, str_param[<span class="number">0</span>],<span class="number">12</span>);</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> bindata[<span class="number">4096</span>];</span><br><span class="line"><span class="keyword">char</span> base64[<span class="number">4096</span>];</span><br><span class="line"><span class="built_in">memcpy</span>(bindata, t, <span class="keyword">sizeof</span>(struct DemoData));</span><br><span class="line"><span class="keyword">return</span> bindata;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">freeme</span><span class="params">(<span class="keyword">char</span> *ptr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">free</span>(ptr);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在linux上编译，gcc -shared -Wl,-soname,demodata -o <a href="http://demodata.so">demodata.so</a> -fPIC demodata.c</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line">demo = CDLL(<span class="string">&#x27;./demodata.so&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取base64</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_data</span>(<span class="params">demo</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">      int_param：</span></span><br><span class="line"><span class="string">      0   a</span></span><br><span class="line"><span class="string">    1   b</span></span><br><span class="line"><span class="string">    2   c</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">      str_param:</span></span><br><span class="line"><span class="string">      0  d  12</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    INT_PARAMS = c_int*<span class="number">3</span></span><br><span class="line">    STR_PARAMS = c_char_p*<span class="number">1</span></span><br><span class="line">    int_param = INT_PARAMS(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">    str_param = STR_PARAMS(<span class="string">&quot;demo&quot;</span>)</span><br><span class="line">    demo.freeme.argtypes = c_void_p,</span><br><span class="line">    demo.freeme.restype = <span class="literal">None</span></span><br><span class="line">    demo.get_data.restype = c_char_p</span><br><span class="line">    result = demo.get_data(int_param,str_param)</span><br><span class="line">    <span class="built_in">print</span> result</span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;
&lt;p&gt;字节序 与 字节对齐&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;java基础类型与字节类型转换&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;2.1 struct ==》 字节类型&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2.2 基础类型  ==》 字节类型&lt;/p&gt;
&lt;/li
      
    
    </summary>
    
      <category term="编程" scheme="http://Scofieldsu.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="字节序" scheme="http://Scofieldsu.github.io/tags/%E5%AD%97%E8%8A%82%E5%BA%8F/"/>
    
      <category term="大小端" scheme="http://Scofieldsu.github.io/tags/%E5%A4%A7%E5%B0%8F%E7%AB%AF/"/>
    
      <category term="字节对齐" scheme="http://Scofieldsu.github.io/tags/%E5%AD%97%E8%8A%82%E5%AF%B9%E9%BD%90/"/>
    
      <category term="ByteBuffer" scheme="http://Scofieldsu.github.io/tags/ByteBuffer/"/>
    
      <category term="ctypes" scheme="http://Scofieldsu.github.io/tags/ctypes/"/>
    
  </entry>
  
  <entry>
    <title>我们仍未知道那天所看见的花的名字(未闻花名)</title>
    <link href="http://Scofieldsu.github.io/2018/10/10/%E6%88%91%E4%BB%AC%E4%BB%8D%E6%9C%AA%E7%9F%A5%E9%81%93%E9%82%A3%E5%A4%A9%E6%89%80%E7%9C%8B%E8%A7%81%E7%9A%84%E8%8A%B1%E7%9A%84%E5%90%8D%E5%AD%97(%E6%9C%AA%E9%97%BB%E8%8A%B1%E5%90%8D)/"/>
    <id>http://Scofieldsu.github.io/2018/10/10/我们仍未知道那天所看见的花的名字(未闻花名)/</id>
    <published>2018-10-10T13:44:23.000Z</published>
    <updated>2022-01-17T05:43:27.594Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">Secret Base ~君がくれたもの~（秘密基地~你给的东西~）</span><br><span class="line"></span><br><span class="line">  --动漫《我们仍未知道那天所看见的花的名字》ED</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  君と夏の終わり 将来の夢</span><br><span class="line">  这个与你共度的夏天完结 将来的梦想</span><br><span class="line"></span><br><span class="line">  大きな希望 忘れない</span><br><span class="line">  满满的希望 我永远难忘</span><br><span class="line"></span><br><span class="line">  10年後の8月 また出会えるのを 信じて</span><br><span class="line">  十年后的八月 请相信我们一定能再见</span><br><span class="line"></span><br><span class="line">  最高の思い出を…</span><br><span class="line">  将这最美好的回忆追念</span><br><span class="line"></span><br><span class="line">  出会いは ふっとした 瞬間</span><br><span class="line">  初次邂逅 是个不经意的瞬间</span><br><span class="line"></span><br><span class="line">  帰り道の交差点で</span><br><span class="line">  在放学归途的十字路边</span><br><span class="line"></span><br><span class="line">  声をかけてくれたね 「一緒に帰ろう」</span><br><span class="line">  听见你的一声「一起回家吧」</span><br><span class="line"></span><br><span class="line">  僕は 照れくさそうに カバンで顔を隠しながら</span><br><span class="line">  我害羞得手忙脚乱 把脸藏在书包后面</span><br><span class="line"></span><br><span class="line">  本当は とても とても 嬉しかったよ</span><br><span class="line">  其实心理 从未如此雀跃欣欢</span><br><span class="line"></span><br><span class="line">  あぁ 花火が夜空 きれいに咲いて ちょっとセツナク</span><br><span class="line">  啊 烟花在夜空绽放 几许感伤</span><br><span class="line"></span><br><span class="line">  あぁ 風が時間とともに 流れる</span><br><span class="line">  啊 时间像风儿一样 静静流淌</span><br><span class="line"></span><br><span class="line">  嬉しくって 楽しくって 冒険も いろいろしたね</span><br><span class="line">  多少开心的相伴 多少欢快的冒险</span><br><span class="line"></span><br><span class="line">  二人の 秘密の 基地の中</span><br><span class="line">  都在属于你我的 秘密的基地乐园</span><br><span class="line"></span><br><span class="line">  君と夏の終わり 将来の夢</span><br><span class="line">  这个与你共度的夏天完结 将来的梦想</span><br><span class="line"></span><br><span class="line">  大きな希望 忘れない</span><br><span class="line">  满满的希望 我永远难忘</span><br><span class="line"></span><br><span class="line">  10年後の8月 また出会えるのを 信じて</span><br><span class="line">  十年后的八月 请相信我们一定能再见</span><br><span class="line"></span><br><span class="line">  君が最後まで 心から 「ありがとう」叫んでいたこと 知っていたよ</span><br><span class="line">  我知道 直到最后 你都由衷地在心底喊着「谢谢」</span><br><span class="line"></span><br><span class="line">  涙をこらえて 笑顔でさようなら せつないよね</span><br><span class="line">  强忍着泪滴 微笑着告别 多么伤心</span><br><span class="line"></span><br><span class="line">  最高の思い出を…</span><br><span class="line">  这是我们最美好的回忆</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c
      
    
    </summary>
    
      <category term="分享" scheme="http://Scofieldsu.github.io/categories/%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="诗词文章" scheme="http://Scofieldsu.github.io/tags/%E8%AF%97%E8%AF%8D%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title>常用与有趣的工具推荐</title>
    <link href="http://Scofieldsu.github.io/2018/09/08/%E5%B8%B8%E7%94%A8%E4%B8%8E%E6%9C%89%E8%B6%A3%E7%9A%84%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    <id>http://Scofieldsu.github.io/2018/09/08/常用与有趣的工具推荐/</id>
    <published>2018-09-08T13:13:45.000Z</published>
    <updated>2022-01-17T05:46:18.250Z</updated>
    
    <content type="html"><![CDATA[<p>windows系统重装之后整理需要安装软件和环境：</p><ol><li>环境</li></ol><ul><li><p>python2.7  目前暂不用virtualenv管理多版本python环境，安装python2.7时勾选add to path省去配置环境变量过程。</p></li><li><p>java1.8    下载jdk安装后，配置环境变量</p></li></ul>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME = C:\Program Files\Java\jdk1.8.0_91  #实际路径</span><br><span class="line">PATH = %JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;</span><br><span class="line">CLASSPATH = .;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;</span><br></pre></td></tr></table></figure><ul><li><p>nodejs 安装时默认勾选add to path</p></li><li><p>git</p></li></ul><ol start="2"><li><p>代码器</p><ul><li>IDEA，Pycharm，notepad++，Atom</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">atom 插件列表：</span><br><span class="line">主题：atom-monkai</span><br><span class="line">扩展：</span><br><span class="line">active-power-mode</span><br><span class="line">markdown-preview-plus</span><br><span class="line">platformio-ide-terminal</span><br><span class="line">simplified-chinese-menu</span><br><span class="line">file-icons</span><br><span class="line">edit-background</span><br></pre></td></tr></table></figure></li><li><p>其他工具</p></li></ol><h2 id="-code2-"><a class="markdownIt-Anchor" href="#-code2-"></a> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- heidiSQL （数据库客户端）</span><br><span class="line"></span><br><span class="line">- mobaXterm （终端工具）</span><br><span class="line"></span><br><span class="line">- PDman （数据库建模工具）</span><br></pre></td></tr></table></figure></h2><ol start="4"><li>mac app推荐</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">- Termius  （ssh client）</span><br><span class="line"></span><br><span class="line">- Viper FTP （sftp client）</span><br><span class="line"></span><br><span class="line">- PAW （http client）</span><br><span class="line"></span><br><span class="line">- postico （postgresql client）</span><br><span class="line"></span><br><span class="line">- tickeys （键盘音效）</span><br><span class="line"></span><br><span class="line">- LiceCap （gif tool）</span><br><span class="line"></span><br><span class="line">- snip （截图）</span><br><span class="line"></span><br><span class="line">- pap.er (壁纸)</span><br></pre></td></tr></table></figure><ol start="5"><li>chrome插件推荐</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- Tampermonkey（脚本扩展）</span><br><span class="line"></span><br><span class="line">- fireshot （截图）</span><br><span class="line"></span><br><span class="line">- xPath finder， chropath  （xpath选择器）</span><br><span class="line"></span><br><span class="line">- octotree （github代码在线树状结构）</span><br><span class="line"></span><br><span class="line">- onetab （tab收集器）</span><br></pre></td></tr></table></figure><ol start="6"><li>一些好玩的</li></ol> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- 在线协作画板  https://witeboard.com/</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr />]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;windows系统重装之后整理需要安装软件和环境：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;环境&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;python2.7  目前暂不用virtualenv管理多版本python环境，安装python2.7时勾选add to path省去配置环境
      
    
    </summary>
    
      <category term="编程" scheme="http://Scofieldsu.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="python" scheme="http://Scofieldsu.github.io/tags/python/"/>
    
      <category term="重装系统" scheme="http://Scofieldsu.github.io/tags/%E9%87%8D%E8%A3%85%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="环境搭建" scheme="http://Scofieldsu.github.io/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
      <category term="Java" scheme="http://Scofieldsu.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>关于特斯拉线圈</title>
    <link href="http://Scofieldsu.github.io/2018/09/02/%E5%85%B3%E4%BA%8E%E7%89%B9%E6%96%AF%E6%8B%89%E7%BA%BF%E5%9C%88/"/>
    <id>http://Scofieldsu.github.io/2018/09/02/关于特斯拉线圈/</id>
    <published>2018-09-02T15:08:58.000Z</published>
    <updated>2022-01-17T05:46:01.252Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="探索" scheme="http://Scofieldsu.github.io/categories/%E6%8E%A2%E7%B4%A2/"/>
    
    
      <category term="科学技术" scheme="http://Scofieldsu.github.io/tags/%E7%A7%91%E5%AD%A6%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>玩一玩selenium</title>
    <link href="http://Scofieldsu.github.io/2018/05/09/%E7%8E%A9%E4%B8%80%E7%8E%A9selenium/"/>
    <id>http://Scofieldsu.github.io/2018/05/09/玩一玩selenium/</id>
    <published>2018-05-09T12:47:23.000Z</published>
    <updated>2022-01-17T05:45:02.908Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Selenium是一个开源的和便携式的自动化软件测试工具，</span><br><span class="line">用于测试Web应用程序有能力在不同的浏览器和操作系统运行。</span><br><span class="line">Selenium真的不是一个单一的工具，而是一套工具，</span><br><span class="line">帮助测试者更有效地基于Web的应用程序的自动化。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id=""><a class="markdownIt-Anchor" href="#"></a> </h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="编程" scheme="http://Scofieldsu.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="selenium" scheme="http://Scofieldsu.github.io/tags/selenium/"/>
    
      <category term="自动化" scheme="http://Scofieldsu.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
      <category term="xpath" scheme="http://Scofieldsu.github.io/tags/xpath/"/>
    
      <category term="webdriver" scheme="http://Scofieldsu.github.io/tags/webdriver/"/>
    
      <category term="headless" scheme="http://Scofieldsu.github.io/tags/headless/"/>
    
  </entry>
  
  <entry>
    <title>醒来啊，麦克白</title>
    <link href="http://Scofieldsu.github.io/2018/05/08/%E9%86%92%E6%9D%A5%E5%95%8A%EF%BC%8C%E9%BA%A6%E5%85%8B%E7%99%BD/"/>
    <id>http://Scofieldsu.github.io/2018/05/08/醒来啊，麦克白/</id>
    <published>2018-05-08T15:02:10.000Z</published>
    <updated>2022-01-17T05:45:50.975Z</updated>
    
    <content type="html"><![CDATA[<h2 id="有幸在见字如面中看到王耀庆和张国立-来朗读-这两封信大赞"><a class="markdownIt-Anchor" href="#有幸在见字如面中看到王耀庆和张国立-来朗读-这两封信大赞"></a> 有幸在《见字如面》中看到王耀庆和张国立 来朗读 这两封信，大赞。</h2><h2 id="-code0-"><a class="markdownIt-Anchor" href="#-code0-"></a> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">家宝公：</span><br><span class="line">     来信收到。我们从故乡回京刚十天，过一周左右又得去香港两个月，约莫６月间才能转得来。</span><br><span class="line">     事情倒不俗，只可惜空耗了时光。</span><br><span class="line"></span><br><span class="line">     奉上拙诗一首，是类乎劳改的那三年的第一年写的。</span><br><span class="line">     诗刊朋友向我要近作，而目下毫无诗意抒发，将信将疑从匣中取出这首给他看，却说好。</span><br><span class="line">     人受称赞总是高兴。但这诗不是好，是公开的私事满足了人的好奇心而已。</span><br><span class="line">     不过我老婆是衷心快意的，等于手臂上刺着牢不可破的对她的忠贞，</span><br><span class="line">     让所有的朋友了解我当了36年的俘虏的确是心甘情愿。</span><br><span class="line">     歌颂老婆的诗我大概可以出一个厚厚的集子了，只可惜世界上还没有这么一个经得起肉麻的出版社。</span><br><span class="line">     说老实话，真正地道的情诗、情书、情话，怎么能见得人？</span><br><span class="line">     伟大的鲁迅特精熟此道，说是“两地书”，买的人图希奇，打开看来却都是正儿八经，缺乏爱情的香馥之感。</span><br><span class="line">     全世界若认真出点这种东西，且规定人人必读的话，公安局当会省掉许多麻烦，人到底太少接触纯真的感情了。</span><br><span class="line"></span><br><span class="line">     曹公曹公！你的书法照麻衣神相看，气势雄强，间架缜密，且肯定是个长寿的老头，所以你还应该工作。</span><br><span class="line">     工作，这两个字几十年来被污染成为低级的习俗。</span><br><span class="line">     在你的生涯中，工作是充满实实在在的光耀，别去理那些琐碎人情、小敲小打吧！</span><br><span class="line">     在你，应该：“全或无”；应该：“良工不示人以朴”。</span><br><span class="line">     像伯纳·萧，像伏尔泰那样，到老还那么精确，那么不饶点滴，不饶自己。</span><br><span class="line"></span><br><span class="line">     在纽约，我在阿瑟·米勒家住过几天，他刚写一个新戏：《美国时间》，</span><br><span class="line">     我跟他上拍练场去看他边拍边改剧本，那种活跃，那种严肃，简直像鸡汤那么养人。</span><br><span class="line">     他和他老婆，一位了不起的摄影家，轮流开车走很远的公路回到家里，然后一起在他们的森林中伐木，斫成劈柴，</span><br><span class="line">     米勒开拖拉机把我们跟劈柴一起拉回来。两三吨的柴啊！</span><br><span class="line">     我们坐在米勒自己做的木凳饭桌边吃饭。我觉得他全身心的细胞都在活跃，因此，他的戏不管成败，都充满生命力。</span><br><span class="line">     你说怪不怪；那时我想到你，挂念你，如果写成台词，那就是：“我们也有个曹禺！”</span><br><span class="line">     但我的潜台词却是你多么需要他那点草莽精神。</span><br><span class="line">     你是我的极尊敬的前辈，所以我对你要严！我不喜欢你解放后的戏。一个也不喜欢。</span><br><span class="line">     你心不在戏里，你失去伟大的灵通宝玉，你为势位所误！</span><br><span class="line">     从一个海洋萎缩为一条小溪流，你泥溷在不情愿的艺术创作中，像晚上喝了浓茶清醒于混沌之中。</span><br><span class="line">     命题不巩固，不缜密，演绎、分析得也不透彻。</span><br><span class="line">     过去数不尽的精妙的休止符、节拍、冷热、快慢的安排，那一箩一筐的隽语都消失了。</span><br><span class="line">     谁也说不好。总是“高！”“好！”这些称颂虽迷惑不了你，但混乱了你，作践了你。</span><br><span class="line">     写到这里，不禁想起莎翁《马克白》中的一句话：“醒来啊马克白，把沉睡赶走！”</span><br><span class="line"></span><br><span class="line">     你知道，我爱祖国，所以爱你。你是我那一时代现实极了的高山，我不对你说老实话，就不配你给予我的友谊。</span><br><span class="line">     如果能使你再写出20个剧本需要出点力气的话，你差遣就是！</span><br><span class="line">     艾侣霞有两句诗，诗曰：“心在树上，你摘就是！”信，快写完了，回头一看，好像在毁谤你，有点不安了。</span><br><span class="line">     放两天，想想看该不该寄上给你。</span><br><span class="line">     祝你和夫人一切都好！</span><br><span class="line"></span><br><span class="line">                                                                    晚 黄永玉谨上</span><br><span class="line">                                                                         3月2日</span><br><span class="line"></span><br><span class="line">     我还想到，有一天为你的新作设计舞台。</span><br><span class="line">                                                                        永玉又及</span><br><span class="line">     我还想贡献给你一些杂七杂八的故事，看能不能弄出点什么来！</span><br><span class="line">                                                                        永玉又及</span><br><span class="line"></span><br></pre></td></tr></table></figure></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">永玉大师：  </span><br><span class="line">       收到你的信。好像一个一无所有的穷人，突然从神女手里，得到不可数量的珍宝。</span><br><span class="line">       我反复地看，唤出我的妻女一同看，一块儿惊奇上天会毫无预感地给了我这样丰满、美好、深挚、诚厚的感情。</span><br><span class="line">       我的确没有想到，你会写给我这样一封长信。</span><br><span class="line">       你鼓励了我，你指责我近三十余年的空洞，“泥溷[hùn]在不情愿的艺术创作中”。</span><br><span class="line">       这句话射中了要害，我浪费了成熟的中年，到了今日这个年纪，才开始明白。</span><br><span class="line">       你提到我那几年的剧本，“命题不巩固、不缜密，演释、分析得也不透彻”。</span><br><span class="line">       是你这样理解心灵的大艺术家，才说得这样准确，这样精到。</span><br><span class="line">       我现在正在写一个剧本，它还泥陷于几十年的旧烂坑里，写得太实也陈腐，</span><br><span class="line">       仿佛只知沿着老道跋涉，不知回头是岸，岸上有多少新鲜的大路可走。你叫我：“醒来啊，把沉睡赶走！”</span><br><span class="line">       我一定！但我仍在矇眬半醒中，心里又很清楚我迷了路。但愿迷途未远，我还有时间能追回已逝的光阴。</span><br><span class="line">       天下没有比到了暮年才发现走了太多的弯道更痛心的了。</span><br><span class="line">       然而，指出来了就明白了，便也宽了心，觉得还有一段长路要赶，只有振作起来，</span><br><span class="line">       再写多少年，报答你和许多真诚的朋友对我指点的恩德。</span><br><span class="line">       永玉，你是一个突出的朋友，我们相慕甚久，但真见面谈心，不过两次。</span><br><span class="line">       我能得你这般坦率、真诚的言语是我的幸福，更使我快乐的是，</span><br><span class="line">       我竟然在如此仓促的机遇中，得到你这样真诚见人的友人。</span><br><span class="line">       你说我需要阿瑟•密勒的草莽精神，你说得对。他坚实，沉肃，亲切，</span><br><span class="line">       又在他深厚的文化修养中又时时透出一种倔强，不失在尘俗中屈服的豪迈气概。</span><br><span class="line">       我时常觉得我顾虑太多，又难抛去，这已成了痼习。</span><br><span class="line">       但是如果不下决心改变，所谓自小溪再汇为沧海是不可能的。</span><br><span class="line">       你像个火山，正在突突喷出白热的火岩。我在你身边，是不会变冷的。</span><br><span class="line">       你说要写二十个剧本，如果我真像你举出的那种巨人，我是会如数写出的。</span><br><span class="line">       不过，有你在身旁督促我，经常提醒我，我将如你所说“不饶点滴，不饶自己”。</span><br><span class="line">       你的画，世间有多少人在颂扬，用各种语言来赞美，我再添什么是多余的。</span><br><span class="line">       我更敬重的、我更喜欢的是你的人性，你的为人，你的聪敏才智、幽默感，你的艺术与文章是少见的。</span><br><span class="line">       但真使我惊服的，是你经过多少年来的磨难与世俗的试探，你保持下你的纯朴与直率。我终将有所求于你的。</span><br><span class="line">       你的长信已经一页一页端正地放在照相簿里。现在我可以随时翻。</span><br><span class="line">       在我疲乏时，在我偶尔失去信心时，我将在你的信里看见了火辣辣的词句，</span><br><span class="line">       它将促我拿起笔再写下去。在我想入歪道，又进入魔道，“为势位所误”时，我将清醒再写下去！</span><br><span class="line">       请问候你的夫人，感谢你，我的朋友。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                                                                            曹禺</span><br><span class="line">                                                                 一九八三年四月二日</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;有幸在见字如面中看到王耀庆和张国立-来朗读-这两封信大赞&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#有幸在见字如面中看到王耀庆和张国立-来朗读-这两封信大赞&quot;&gt;&lt;/a&gt; 有幸在《见字如面》中看到王耀庆和张国立 来朗读 这两封信，大赞
      
    
    </summary>
    
      <category term="分享" scheme="http://Scofieldsu.github.io/categories/%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="诗词文章" scheme="http://Scofieldsu.github.io/tags/%E8%AF%97%E8%AF%8D%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title>玩一玩locust</title>
    <link href="http://Scofieldsu.github.io/2018/04/08/%E7%8E%A9%E4%B8%80%E7%8E%A9locust/"/>
    <id>http://Scofieldsu.github.io/2018/04/08/玩一玩locust/</id>
    <published>2018-04-08T12:47:23.000Z</published>
    <updated>2022-01-17T05:44:55.349Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Locust是开源、使用Python开发、基于事件、支持分布式</span><br><span class="line">并且提供Web UI进行测试执行和结果展示的性能测试工具。</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="编程" scheme="http://Scofieldsu.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="python" scheme="http://Scofieldsu.github.io/tags/python/"/>
    
      <category term="locust" scheme="http://Scofieldsu.github.io/tags/locust/"/>
    
      <category term="性能，压力测试" scheme="http://Scofieldsu.github.io/tags/%E6%80%A7%E8%83%BD%EF%BC%8C%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95/"/>
    
      <category term="QPS" scheme="http://Scofieldsu.github.io/tags/QPS/"/>
    
  </entry>
  
  <entry>
    <title>linux命令&amp;shell使用</title>
    <link href="http://Scofieldsu.github.io/2017/12/18/linux%E5%91%BD%E4%BB%A4&amp;shell%E4%BD%BF%E7%94%A8/"/>
    <id>http://Scofieldsu.github.io/2017/12/18/linux命令&amp;shell使用/</id>
    <published>2017-12-18T12:13:45.000Z</published>
    <updated>2022-01-17T05:38:56.884Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-nohup-no-hang-up"><a class="markdownIt-Anchor" href="#1-nohup-no-hang-up"></a> 1. nohup （no hang up）</h2><ul><li>当你在运行一个进程，想要让其后台运行，不占用当前终端，关闭终端或者合上电脑或者退出账号时程序仍然在运行。nohup 了解一下。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">nohup java -jar -server -Xms512m a.jar abc &gt;&gt; logs/nohup.log 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---命令详解</span><br><span class="line">(1) 执行jar包，可以带上你需要的启动参数，例如以server模式运行，初始堆大小512m -server -Xms512m</span><br><span class="line">(2) abc 为主程序接收的参数</span><br><span class="line">(3)  &gt;&gt; logs/nohup.log  </span><br><span class="line">      其中&gt;&gt;表示追加，如果改为 &gt; 则每次启动都会覆盖原log文件。</span><br><span class="line">      指定到特定路径下的文件，如果不指定，则默认输出到当前目录的nohup.out</span><br><span class="line">(4) 2&gt;&amp;1 将错误信息重定向到标准输出</span><br><span class="line">(5) &amp; 作业被提交到后台运行，当前控制台没有被占用</span><br><span class="line"></span><br><span class="line">---其他相关</span><br><span class="line">(1) 执行python程序时需要加上-u参数（不使用python print 的缓冲）把print的内容输出到文件。</span><br><span class="line">    例如： nohup python -u run.py &gt;&gt; logs/nohup.log 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br><span class="line">(2) 可以使用jobs -l  查看当前 shell 终端的后台运行任务进程信息,根据进程pid 进行kill来退出任务。</span><br><span class="line">(3) fg %n ,置为前端运行,然后ctrl + c 退出任务。其中%n 为job id</span><br><span class="line">(4) bg %n 让进程n到后台运行</span><br><span class="line">(5) 文件很大的话，nohup.out就会不停的增大，可以利用Linux下一个特殊的文件/dev/null来解决这个问题，</span><br><span class="line">    这个文件就相当于一个黑洞,任何输出到这个文件的东西都将消失</span><br><span class="line">      只保留输出错误信息 nohup command &gt;/dev/null 2&gt;log &amp;</span><br><span class="line">      所有信息都不要 nohup command &gt;/dev/null 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-awk-和xargs"><a class="markdownIt-Anchor" href="#2-awk-和xargs"></a> 2. awk 和xargs</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-nohup-no-hang-up&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-nohup-no-hang-up&quot;&gt;&lt;/a&gt; 1. nohup （no hang up）&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;当你在运行一个进程，想要让其后
      
    
    </summary>
    
      <category term="编程" scheme="http://Scofieldsu.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="linux" scheme="http://Scofieldsu.github.io/tags/linux/"/>
    
      <category term="shell" scheme="http://Scofieldsu.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>关于MAC地址</title>
    <link href="http://Scofieldsu.github.io/2017/12/15/%E5%85%B3%E4%BA%8EMAC%E5%9C%B0%E5%9D%80/"/>
    <id>http://Scofieldsu.github.io/2017/12/15/关于MAC地址/</id>
    <published>2017-12-15T12:47:23.000Z</published>
    <updated>2022-01-17T05:41:06.111Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="编程" scheme="http://Scofieldsu.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="MAC" scheme="http://Scofieldsu.github.io/tags/MAC/"/>
    
      <category term="伪MAC" scheme="http://Scofieldsu.github.io/tags/%E4%BC%AAMAC/"/>
    
      <category term="探针" scheme="http://Scofieldsu.github.io/tags/%E6%8E%A2%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>我最好的朋友已经死了</title>
    <link href="http://Scofieldsu.github.io/2017/08/20/%E6%88%91%E6%9C%80%E5%A5%BD%E7%9A%84%E6%9C%8B%E5%8F%8B%E5%B7%B2%E7%BB%8F%E6%AD%BB%E4%BA%86/"/>
    <id>http://Scofieldsu.github.io/2017/08/20/我最好的朋友已经死了/</id>
    <published>2017-08-20T05:14:40.000Z</published>
    <updated>2022-01-17T05:43:33.432Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">占位，未完待续</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span
      
    
    </summary>
    
      <category term="写作" scheme="http://Scofieldsu.github.io/categories/%E5%86%99%E4%BD%9C/"/>
    
    
      <category term="丧" scheme="http://Scofieldsu.github.io/tags/%E4%B8%A7/"/>
    
  </entry>
  
  <entry>
    <title>烟火里的尘埃</title>
    <link href="http://Scofieldsu.github.io/2017/06/20/%E7%83%9F%E7%81%AB%E9%87%8C%E7%9A%84%E5%B0%98%E5%9F%83/"/>
    <id>http://Scofieldsu.github.io/2017/06/20/烟火里的尘埃/</id>
    <published>2017-06-20T13:44:23.000Z</published>
    <updated>2022-01-17T05:43:46.438Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">演唱：华晨宇</span><br><span class="line">作曲：西楼</span><br><span class="line">作词：林夕</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">看着飞舞的尘埃掉下来</span><br><span class="line">没人发现它存在</span><br><span class="line">多自由自在</span><br><span class="line">烟火里的尘埃</span><br><span class="line">可世界都爱热热闹闹</span><br><span class="line"></span><br><span class="line">容不下我百无聊赖</span><br><span class="line"></span><br><span class="line">不应该一个人发呆</span><br><span class="line">只有我守着安静的沙漠</span><br><span class="line">等待着花开</span><br><span class="line">只有我看着别人的快乐</span><br><span class="line">竟然会感慨</span><br><span class="line">就让我听着天大的道理</span><br><span class="line">不愿意明白</span><br><span class="line">有什么是应该不应该</span><br><span class="line">我的心里住着一个</span><br><span class="line">苍老的小孩</span><br><span class="line">如果世界听不明白</span><br><span class="line">对影子表白</span><br><span class="line">是不是只有我还在问</span><br><span class="line">为什么明天更精彩</span><br><span class="line">烟火里找不到童真的残骸</span><br><span class="line">只有我守着安静的沙漠</span><br><span class="line">等待着花开</span><br><span class="line">只有我看着别人的快乐</span><br><span class="line">竟然会感慨</span><br><span class="line">就让我听着天大的道理</span><br><span class="line">不愿意明白</span><br><span class="line">只有我就是我</span><br><span class="line">好奇怪还在感慨</span><br><span class="line">风阵阵吹过来为何不回来</span><br><span class="line">风一去不回来悲不悲哀</span><br><span class="line">麻木得那么快应不应该</span><br><span class="line">能不能慢下来</span><br><span class="line">笑得开怀哭得坦率</span><br><span class="line">为何表情要让这世界安排</span><br><span class="line">我就是我我只是我</span><br><span class="line">只是一场烟火散落的尘埃</span><br><span class="line">风阵阵吹过来</span><br><span class="line">风一去不回来</span><br><span class="line">能不能慢下来</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c
      
    
    </summary>
    
      <category term="分享" scheme="http://Scofieldsu.github.io/categories/%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="诗词文章" scheme="http://Scofieldsu.github.io/tags/%E8%AF%97%E8%AF%8D%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title>如果</title>
    <link href="http://Scofieldsu.github.io/2017/06/15/%E5%A6%82%E6%9E%9C/"/>
    <id>http://Scofieldsu.github.io/2017/06/15/如果/</id>
    <published>2017-06-15T15:20:26.000Z</published>
    <updated>2022-01-17T05:42:27.441Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">如 果</span><br><span class="line"></span><br><span class="line">[英]吉 卜林</span><br><span class="line"></span><br><span class="line">如果在众人六神无主时</span><br><span class="line"></span><br><span class="line">你能镇定自若而不是人云亦云</span><br><span class="line"></span><br><span class="line">如果在被众人猜忌怀疑之日</span><br><span class="line"></span><br><span class="line">你能自信如常而不去枉加辩论</span><br><span class="line"></span><br><span class="line">如果你有梦想又不迷失自我</span><br><span class="line"></span><br><span class="line">如果你有神思又不致走火入魔</span><br><span class="line"></span><br><span class="line">如果在成功之中能不妄形于色</span><br><span class="line"></span><br><span class="line">而在灾难之后也勇于咀嚼苦果</span><br><span class="line"></span><br><span class="line">如果听到自己说出的奥秘被无赖</span><br><span class="line"></span><br><span class="line">歪曲成面目全非的魔术而不生怨艾</span><br><span class="line"></span><br><span class="line">如果看到自己追求的美好受天灾</span><br><span class="line"></span><br><span class="line">破灭为零碎的瓦砾也不说放弃</span><br><span class="line"></span><br><span class="line">如果你辛苦劳作已是功成名就</span><br><span class="line"></span><br><span class="line">还是冒险一博哪怕功名成乌有</span><br><span class="line"></span><br><span class="line">即使惨遭失败也仍要从头开始</span><br><span class="line"></span><br><span class="line">如果你跟村夫交谈而不失恭敬之态</span><br><span class="line"></span><br><span class="line">和王侯散步而不露谀媚之颜</span><br><span class="line"></span><br><span class="line">如果他人的爱憎左右不了你的正气</span><br><span class="line"></span><br><span class="line">如果你和任何人为伍都能卓然独立</span><br><span class="line"></span><br><span class="line">如果昏惑的骚扰动摇不了你的意志</span><br><span class="line"></span><br><span class="line">你能等自己平心静气再作答谢</span><br><span class="line"></span><br><span class="line">那么你的修养就如同天地般博大</span><br><span class="line"></span><br><span class="line">你就是真正的男子汉了</span><br><span class="line"></span><br><span class="line">我 的 儿 子</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;span id=&quot;more&quot;&gt;&lt;/span&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
      <category term="分享" scheme="http://Scofieldsu.github.io/categories/%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="诗词文章" scheme="http://Scofieldsu.github.io/tags/%E8%AF%97%E8%AF%8D%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title>玩一玩jenkins</title>
    <link href="http://Scofieldsu.github.io/2017/06/08/%E7%8E%A9%E4%B8%80%E7%8E%A9jenkins/"/>
    <id>http://Scofieldsu.github.io/2017/06/08/玩一玩jenkins/</id>
    <published>2017-06-08T12:47:23.000Z</published>
    <updated>2022-01-17T05:44:33.293Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">jenkins是一个广泛用于持续构建的可视化web工具，</span><br><span class="line">持续构建说得更直白点，就是各种项目的&quot;自动化&quot;编译、打包、分发部署。</span><br><span class="line">jenkins可以很好的支持各种语言（比如：java, c#, php等）的项目构建，</span><br><span class="line">也完全兼容ant、maven、gradle等多种第三方构建工具，同时跟svn、git能无缝集成，</span><br><span class="line">也支持直接与知名源代码托管网站，比如github、bitbucket直接集成。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="安装jenkins"><a class="markdownIt-Anchor" href="#安装jenkins"></a> 安装jenkins</h3><blockquote><p>准备工作 安装java环境</p></blockquote><ol><li>配置yum源</li></ol> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo</span><br></pre></td></tr></table></figure><ol start="2"><li>导入公钥</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key</span><br></pre></td></tr></table></figure><ol start="3"><li><p>安装jenkins</p><p>yum install jenkins -y</p></li><li><p>修改用户</p><p>vi /etc/sysconfig/jenkins</p></li><li><p>配置文件中加入java路径</p><p>vim /etc/rc.d/init.d/jenkins</p></li><li><p>启动<br />systemctl start jenkins</p></li><li><p>初次密码路径<br />/var/lib/jenkins/secrets/initialAdminPassword</p></li></ol><p><img src="https://github.com/Scofieldsu/Image_hosting/blob/master/blog/jenkins.png?raw=true" alt="jenkins" /></p><hr /><h3 id="jenkins使用参数构建任务"><a class="markdownIt-Anchor" href="#jenkins使用参数构建任务"></a> jenkins使用参数构建任务</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="编程" scheme="http://Scofieldsu.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="jenkins" scheme="http://Scofieldsu.github.io/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>玩一玩vue</title>
    <link href="http://Scofieldsu.github.io/2017/06/01/%E7%8E%A9%E4%B8%80%E7%8E%A9vue/"/>
    <id>http://Scofieldsu.github.io/2017/06/01/玩一玩vue/</id>
    <published>2017-06-01T14:39:08.000Z</published>
    <updated>2022-01-17T05:45:16.654Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。</span><br><span class="line">与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。</span><br><span class="line">Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。</span><br><span class="line">另一方面，当与现代化的工具链以及各种支持类库结合使用时，</span><br><span class="line">Vue 也完全能够为复杂的单页应用提供驱动。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-安装vue"><a class="markdownIt-Anchor" href="#1-安装vue"></a> 1. 安装vue</h3><p>1.下载node.js安装</p><p>2.打开命令行 npm init ，输入相应信息，系统用户路径生成npm.json文件作为默认配置</p><p>3.配置npm的taobao源，加快安装速度：  npm config set registry <a href="http://registry.npm.taobao.org/">http://registry.npm.taobao.org/</a></p><p>4.安装vue： npm install vue</p><p>5.安装vue脚手架，快速搭建项目结构： npm install --global vue-cli</p><p>6.开始你的项目：vue init webpack your-project-name</p><p>7.安装依赖：</p><p>cd  your-project-name</p><p>npm install</p><ul><li><p>运行<br />npm run dev</p></li><li><p>构建<br />npm build</p></li></ul><h3 id="项目代码结构"><a class="markdownIt-Anchor" href="#项目代码结构"></a> 项目代码结构</h3><ul><li>build</li><li>config</li><li>dist</li><li>inspectionProfiles</li><li>noode_modules</li><li>src<ul><li>assets</li><li>components</li><li>App.vue</li><li>main.js</li></ul></li><li>static</li><li>test</li><li>theme</li><li>…</li><li>index.html</li><li>package.json</li></ul><blockquote><ul><li>其中npm install 是根据package.json中依赖安装模块到node_modules路径下。</li><li>npm run dev 会自动打开浏览器显示你的页面。</li><li>npm run build 会在dist路径下生成index.html和static文件夹，static里包括css，js，font。一般把dist中内容结合服务端显示。</li></ul></blockquote><h3 id="学习vue的常用插件"><a class="markdownIt-Anchor" href="#学习vue的常用插件"></a> 学习vue的常用插件</h3><ul><li><p>vue官网:<a href="http://cn.vuejs.org/v2/guide/">http://cn.vuejs.org/v2/guide/</a></p></li><li><p>vue-router(官方路由插件): <a href="https://router.vuejs.org/zh-cn/">https://router.vuejs.org/zh-cn/</a></p></li><li><p>axios(ajax插件): <a href="http://www.kancloud.cn/yunye/axios/234845">http://www.kancloud.cn/yunye/axios/234845</a></p></li><li><p>界面UI: <a href="http://element.eleme.io/#/zh-CN/component/installation">http://element.eleme.io/#/zh-CN/component/installation</a></p></li><li><p>树形控件ztree:  <a href="http://www.treejs.cn/v3/main.php#_zTreeInfo">http://www.treejs.cn/v3/main.php#_zTreeInfo</a></p></li><li><p>vuex(全局状态管理): <a href="https://vuex.vuejs.org/zh-cn/">https://vuex.vuejs.org/zh-cn/</a></p></li></ul><h3 id="推荐学习路线"><a class="markdownIt-Anchor" href="#推荐学习路线"></a> 推荐学习路线</h3><ol><li>安装完成后，可以根据网上视频学习做出简单的todolist，用来熟悉开发过程。</li><li>从github学习vue-admin项目，了解多页面系统怎么使用插件。</li><li>可以自由使用插件搭建你想做的应用。</li><li>学习插件的使用可以帮你更好的完成目标，学习github上项目的代码结构，帮助你在开发复杂项目时有条不紊。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="编程" scheme="http://Scofieldsu.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="vue.js" scheme="http://Scofieldsu.github.io/tags/vue-js/"/>
    
      <category term="npm" scheme="http://Scofieldsu.github.io/tags/npm/"/>
    
      <category term="elementUI" scheme="http://Scofieldsu.github.io/tags/elementUI/"/>
    
      <category term="axios" scheme="http://Scofieldsu.github.io/tags/axios/"/>
    
      <category term="vuex" scheme="http://Scofieldsu.github.io/tags/vuex/"/>
    
  </entry>
  
  <entry>
    <title>python源码模块--ast语法分析</title>
    <link href="http://Scofieldsu.github.io/2017/05/20/python%E6%BA%90%E7%A0%81%E6%A8%A1%E5%9D%97--ast%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90/"/>
    <id>http://Scofieldsu.github.io/2017/05/20/python源码模块--ast语法分析/</id>
    <published>2017-05-20T05:14:21.000Z</published>
    <updated>2022-01-17T05:39:28.770Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="编程" scheme="http://Scofieldsu.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="ast" scheme="http://Scofieldsu.github.io/tags/ast/"/>
    
      <category term="python" scheme="http://Scofieldsu.github.io/tags/python/"/>
    
      <category term="源码" scheme="http://Scofieldsu.github.io/tags/%E6%BA%90%E7%A0%81/"/>
    
      <category term="语法分析" scheme="http://Scofieldsu.github.io/tags/%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90/"/>
    
      <category term="抽象语法树" scheme="http://Scofieldsu.github.io/tags/%E6%8A%BD%E8%B1%A1%E8%AF%AD%E6%B3%95%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>玩一玩docker</title>
    <link href="http://Scofieldsu.github.io/2017/05/08/%E7%8E%A9%E4%B8%80%E7%8E%A9docker/"/>
    <id>http://Scofieldsu.github.io/2017/05/08/玩一玩docker/</id>
    <published>2017-05-08T12:47:23.000Z</published>
    <updated>2022-01-17T05:44:25.686Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Docker是一个开源的应用容器引擎，基于 Go 语言 并遵从Apache2.0协议开源。</span><br><span class="line"></span><br><span class="line">Docker可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，</span><br><span class="line">然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。</span><br><span class="line"></span><br><span class="line">容器是完全使用沙箱机制，相互之间不会有任何接口（类似 iPhone 的 app）,</span><br><span class="line">更重要的是容器性能开销极低。</span><br><span class="line"></span><br><span class="line">Docker 使用客户端-服务器 (C/S) 架构模式。</span><br><span class="line">Docker 客户端会与 Docker 守护进程进行通信。</span><br><span class="line">Docker 守护进程会处理复杂繁重的任务，例如建立、运行、发布你的 Docker 容器。</span><br><span class="line">Docker 客户端和守护进程可以运行在同一个系统上，</span><br><span class="line">当然你也可以使用 Docker 客户端去连接一个远程的 Docker 守护进程。</span><br><span class="line">Docker 客户端和守护进程之间通过 socket 或者 RESTful API 进行通信。</span><br><span class="line"></span><br><span class="line">- Docker 镜像是 Docker 容器运行时的只读模板，每一个镜像由一系列的层 (layers) 组成。</span><br><span class="line">  Docker 使用 UnionFS 来将这些层联合到单独的镜像中。</span><br><span class="line"></span><br><span class="line">- Docker 仓库用来保存镜像，可以理解为代码控制中的代码仓库。</span><br><span class="line"></span><br><span class="line">- Docker 容器和文件夹很类似，一个Docker容器包含了所有的某个应用运行所需要的环境。</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="1-centos安装docker"><a class="markdownIt-Anchor" href="#1-centos安装docker"></a> 1. centos安装docker</h2><ol><li>安装yum-utils，它提供yum-config-manager实用程序：</li></ol><p>sudo yum install -y yum-utils</p><ol start="2"><li>使用以下命令设置稳定版本库：</li></ol>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://docs.docker.com/v1.13/engine/installation/linux/repo_files/centos/docker.repo</span><br></pre></td></tr></table></figure><ol start="3"><li>更新yum包索引。</li></ol><p>sudo yum makecache fast</p><ol start="4"><li><p>安装特定版本</p><p>yum list docker-engine.x86_64  --showduplicates |sort -r</p><p>-例如安装17.05.0.ce版本</p><p>sudo yum -y install docker-engine-17.05.0.ce-1.el7.centos</p></li><li><p>启动服务</p><p>sudo systemctl start docker</p><p>systemctl enable docker</p></li></ol><hr /><h2 id="2-好玩的docker-image"><a class="markdownIt-Anchor" href="#2-好玩的docker-image"></a> 2. 好玩的docker image</h2><h3 id="docker运行2048游戏"><a class="markdownIt-Anchor" href="#docker运行2048游戏"></a> docker运行2048游戏</h3><ul><li>命令： docker run -d -p 8989:80 alexwhen/docker-2048</li></ul><p><img src="https://raw.githubusercontent.com/Scofieldsu/Image_hosting/master/blog/2048.png" alt="2048" /></p><h3 id="docker运行gitlab"><a class="markdownIt-Anchor" href="#docker运行gitlab"></a> docker运行gitlab</h3><ul><li><p>命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -h gitlab-p 9999:22-p 8081:80-p 8443:443-v /docker/gitlab/config:/etc/gitlab -v /docker/gitlab/logs:/var/log/gitlab -v /docker/gitlab/data:/var/opt/gitlab --restart always --name gitlab gitlab/gitlab-ce:latest</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><p><img src="https://github.com/Scofieldsu/Image_hosting/blob/master/blog/gitlab.png?raw=true" alt="gitlab" /></p><h3 id="docker运行rancher"><a class="markdownIt-Anchor" href="#docker运行rancher"></a> docker运行rancher</h3><blockquote><p>Rancher是一个容器管理平台，专为在生产中部署容器的组织而构建。Rancher使您可以轻松地在任何地方运行Kubernetes.</p></blockquote><ul><li>命令： docker run -d --restart=unless-stopped -p 8989:80 -p 443:443 rancher/rancher:stable</li></ul><p><img src="https://github.com/Scofieldsu/Image_hosting/blob/master/blog/rancher-1.png?raw=true" alt="rancher-1" /><br /><img src="https://github.com/Scofieldsu/Image_hosting/blob/master/blog/rancher-2.png?raw=true" alt="rancher-2" /><br /><img src="https://github.com/Scofieldsu/Image_hosting/blob/master/blog/rancher-3.png?raw=true" alt="rancher-3" /></p><hr /><h3 id="3-docker-命令"><a class="markdownIt-Anchor" href="#3-docker-命令"></a> 3. docker 命令</h3><h3 id="4-dockerfile"><a class="markdownIt-Anchor" href="#4-dockerfile"></a> 4. dockerfile</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="编程" scheme="http://Scofieldsu.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="docker" scheme="http://Scofieldsu.github.io/tags/docker/"/>
    
      <category term="centos7" scheme="http://Scofieldsu.github.io/tags/centos7/"/>
    
      <category term="rancher" scheme="http://Scofieldsu.github.io/tags/rancher/"/>
    
      <category term="gitlab" scheme="http://Scofieldsu.github.io/tags/gitlab/"/>
    
  </entry>
  
  <entry>
    <title>git使用</title>
    <link href="http://Scofieldsu.github.io/2016/12/08/git%E4%BD%BF%E7%94%A8/"/>
    <id>http://Scofieldsu.github.io/2016/12/08/git使用/</id>
    <published>2016-12-08T13:13:45.000Z</published>
    <updated>2022-01-17T05:38:34.444Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="编程" scheme="http://Scofieldsu.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="git" scheme="http://Scofieldsu.github.io/tags/git/"/>
    
      <category term="workflow" scheme="http://Scofieldsu.github.io/tags/workflow/"/>
    
  </entry>
  
</feed>
